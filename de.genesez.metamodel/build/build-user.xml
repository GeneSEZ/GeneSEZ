<?xml version="1.0" ?>
<!--
	ant build file for automation of model transformation steps
	@author	toh
	
	includes following ant tasks:
	- oaw workflow task to generate *.ecore file from emf uml2 model
	  [ uml2ecore ]
	- ecore code generation task to generate the *.genmodel file and
	  the java metamodel implementation
	  [ ecore2java ]
	- creates a jar library which contains the java metamodel implementation classes
	  [ genesezmm2jar ]
	
	note: it's a kind of an abstract build file
-->

<project name="de.genesez.metamodel" basedir=".." default="">
	
	<!--
		include oaw properties + build properties
	-->
	<property file="build/build.properties" />
	
	<!--
		include genesez metamodel classpath
		provides classpathref 'de.genesez.metamodel.classpath'
	-->
	<import file="build-cp.xml" />

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	
	<!-- compile required java classes -->
	<target name="compile">
		<mkdir dir="${basedir}/bin" />
		<javac srcdir="${basedir}/src" 
			destdir="${basedir}/bin"
			classpathref="de.genesez.metamodel.classpath"
			debug="on">
			<exclude name="de/genesez/metamodel/**/*"/>
		</javac>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	
	<!-- oaw workflow task definition -->
	<taskdef name = "oaw.workflow"
		classname = "org.openarchitectureware.workflow.ant.WorkflowAntTask"
		classpathref = "de.genesez.metamodel.classpath" />
	
	<!-- transform emf uml2 models to ecore models using oaw workflow -->
	<target name="uml2ecore" depends="compile" >
		<!-- workflow task is derived from the java ant task -->
		<oaw.workflow file = "${oaw.workflow.file}"
			classpathref="de.genesez.metamodel.classpath"
			fork = "true"
			dir = "${basedir}">
			
			<param name="baseDir" value="${basedir}/" />
		</oaw.workflow>
	</target>	
	
	<!--
		generate *.genmodel + java code impl from *.ecore model
		note: genModel must be set in task and must be generated!
	-->
	<target name = "ecore2java">
		<emf.Ecore2Java model = "${ecore.file}"
			genModel = "${genmodel.file}"
			reconcileGenModel="reload"
			
			generateJavaCode="true"
			generateModelProject="false"
			generateEditProject="false"
			generateEditorProject="false"
			
			modelProject = "${basedir}"
			modelProjectFragmentPath = "${ecore2java.path}">
			
			<arg line = "-package ${ecore.package}" />
		</emf.Ecore2Java>
	</target>
	
	<!-- compile metamodel java classes -->
	<target name="compileMetamodel">
		<mkdir dir="${basedir}/bin" />
		<javac srcdir="${basedir}/src" 
			destdir="${basedir}/bin"
			classpathref="de.genesez.metamodel.classpath"
			debug="on" />
	</target>
	
	<target name="build.create.jar"
			description="Create the plugin jar for de.genesez.metamodel">
		<mkdir dir="${dist.dir}" />
		<jar destfile="${dist.dir}/de.genesez.metamodel_1.5.0.jar"
			 compress="true"
			 manifest="META-INF/MANIFEST.MF">
			<fileset dir="${basedir}">
    			<include name="plugin.xml"/>
    			<include name="plugin.properties"/>
    			<include name="model-gen/*.ecore"/>
			</fileset>
			<fileset dir="${workflow.dir}">
    			<include name="log4j.properties"/>
			</fileset>
			<fileset dir="bin">
    			<exclude name="org/"/>
			</fileset>
		</jar>
	</target>
	
	<target name="build.update.jar"
			description="Build the plug-in: de.genesez.metamodel for an update site.">
		<!-- copy jar to distribution location -->
	</target>

	<!-- cleaning lady -->
	<target name="clean"
			description="clears the distribution directory">
			
		<!-- remove all binary files -->
		<delete includeemptydirs="true">
			<fileset dir="${bin.dir}">
				<include name="**/*" />
			</fileset>
		</delete>
		
		<!-- remove generated java code -->
		<delete includeemptydirs="true">
			<fileset dir="${ecore2java.path}">
				<include name="${ecore.base}/**/*" />
			</fileset>
		</delete>
		
		<!-- remove exported magic draw models -->
		<delete includeemptydirs="true">
			<fileset dir="${src.dir}">
				<include name="de/**/*" />
			</fileset>
			<fileset dir="${model.generate.dir}">
				<include name="*.ecore" />
			</fileset>
			<fileset dir="${model.export.dir}">
				<include name="*.uml" />
			</fileset>
		</delete>
	</target>
</project>
