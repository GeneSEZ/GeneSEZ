«IMPORT gcore»
«REM»
	Generating code comments.
	
	@author	Nico Herbig <nico.herbig@fh-zwickau.de>
	@date	2011-05-12
«ENDREM»

«EXTENSION org::genesez::platform::common::Conversion»

«EXTENSION org::genesez::platform::common::profile::scripts::AccessHelper»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
- -	File comments - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«DEFINE ProfileFile FOR MModel -»
/**
 * Xtend representation of "«name -»" profile 
 * for single point of change.
 *  
 */
«ENDDEFINE»


«DEFINE AccessHelperFile FOR MModel -»
/**
 * Simplifies access to "«name -»" profile 
 * and makes working with the profile more easier. 
 *  
 */
«ENDDEFINE»


«REM»
- -	Section comments  - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	Generates a stereotype section comment.
«ENDREM»
«DEFINE StereotypeSection FOR MClass -»
/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "«name»"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/
«ENDDEFINE»


«REM»
	Generates a enumeration section comment.
«ENDREM»
«DEFINE EnumerationSection FOR MEnumeration -»
/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for enumeration "«name»"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/
«ENDDEFINE»


«REM»
	Generates a tagged value section comment.
«ENDREM»
«DEFINE TaggedValueSection FOR MAttribute -»
/*
- - "«name -»" - - - - - - - - - -
*/
«ENDDEFINE»


«REM»
- -	Element comments  - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«DEFINE Stereotype FOR MClass -»
/**
 * Returns the name of the stereotype "«name -»".
 * 
 * @return the name of the stereotype
 */
«ENDDEFINE»


«DEFINE TaggedValue FOR MAttribute -»
/**
 * Returns the name of the tagged value "«name -»"
 * for the stereotype "«classifier.name -»".
 * 
 * @return the name of the tagged value
 */
«ENDDEFINE»


«DEFINE Enumeration FOR MEnumeration -»
/**
 * Returns the name of the enumeration "«name -»".
 * 
 * @return the name of the enumeration
 */
«ENDDEFINE»


«DEFINE Literal FOR MLiteral -»
/**
 * Returns the name of the literal "«name -»"
 * for the enumeration "«owningEnumeration.name -»".
 * 
 * @return the name of the literal
 */
«ENDDEFINE»


«REM»
- -	AccessHelper comments - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«DEFINE HasStereotype FOR MClass -»
/**
 * Checks if an element is annotated with stereotype "«name -»".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
«ENDDEFINE»


«DEFINE HasTaggedValue FOR MClass -»
/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "«name -»".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
«ENDDEFINE»


«DEFINE HasTaggedValueReference FOR MClass -»
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "«name -»".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
«ENDDEFINE»


«DEFINE HasTaggedValue FOR MAttribute -»
/**
 * Checks if an element has a value of the tagged value "«name -»" 
 * of the stereotype "«classifier.name -»".
 *
«IF !isTaggedValueReference() -»
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
«ELSE -»
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
«ENDIF -»
 */
«ENDDEFINE»


«DEFINE HasUtilizableTaggedValue FOR MAttribute -»
/**
«IF !isTaggedValueReference() -»
 * Checks if an element has a value of the tagged value "«name -»" 
 * of the stereotype "«classifier.name -»" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
«ELSE -»
 * Checks if an element has a value reference of the tagged value "«name -»" 
 * of the stereotype "«classifier.name -»" and the value reference is utilizable (not null).
 *
 * @return true if the element has a tagged value with a utilizable value reference, otherwise false
«ENDIF -»
 */
«ENDDEFINE»


«DEFINE IsTaggedValue(MLiteral l) FOR MAttribute -»
/**
 * Checks if an element has the value "«l.name -»" 
 * of the tagged value "«name -»" 
 * of the stereotype "«classifier.name -»".
 *
 * @return true if the element has a tagged value with this value, otherwise false
 */
«ENDDEFINE»


«DEFINE GetTaggedValue FOR MAttribute -»
/**
«IF isSingleValuedType() -»
«IF !isTaggedValueReference() -»
 * Returns the value of the tagged value "«name -»"
«ELSE -»
 * Returns the value reference of the tagged value "«name -»"
«ENDIF -»
«ELSE -» 
«IF !isTaggedValueReference() -»
 * Returns a list of values of the tagged value "«name -»"
«ELSE -»
 * Returns a list of value references of the tagged value "«name -»"
«ENDIF -»
«ENDIF -»
 * of the stereotype "«classifier.name -»".
 *
«IF isSingleValuedType() -»
«IF !isTaggedValueReference() -»
 * @return the value of the tagged value
«ELSE -»
 * @return the value reference of the tagged value
«ENDIF -»
«ELSE -»
«IF !isTaggedValueReference() -»
* @return the values of the tagged value
«ELSE -»
* @return the value references of the tagged value
«ENDIF -»
«ENDIF -»
 */
«ENDDEFINE»


«DEFINE SetTaggedValue FOR MAttribute -»
/**
«IF !isTaggedValueReference() -»
 * Sets the value of an existing the tagged value "«name -»"
«ELSE -»
 * Sets the value reference of an existing the tagged value "«name -»"
«ENDIF -»
 * of the stereotype "«classifier.name -»".
 *
«IF !isTaggedValueReference() -»
 * @param value the new value of a tagged value
«ELSE -»
 * @param valueReference the new value reference of a tagged value
«ENDIF -»
 */
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

