«IMPORT gcore»
«IMPORT greq»

«REM»
	Generates an overview of the revised specification elements and the affected structure model elements.
	@author tobias haubold
«ENDREM»

«EXTENSION org::genesez::metamodel::navigation::RequirementsTraceability»
«EXTENSION org::genesez::platform::common::Conversion»
«EXTENSION org::genesez::platform::dashboard::Dashboard»
«EXTENSION org::genesez::platform::dashboard::Conversion»
«EXTENSION org::genesez::platform::dashboard::Naming»
«EXTENSION org::genesez::platform::dashboard::traceability::OutdatedTraceabilityLinks»

«DEFINE Root FOR RModel»
«FILE revisedSpecificationFileName()»
	«EXPAND RevisedSpecification -»
«ENDFILE»
«ENDDEFINE»

«DEFINE RevisedSpecification FOR RModel -»
<h2>Recently Revised Specification</h2>
«IF !hasOutdatedScenarioTraces() || !hasOutdatedScenarioStepTraces() || !hasOutdatedRequirementTraces() -»
	«EXPAND _NoRecentlyRevisedSpecification -»
«ELSE -»
	«EXPAND _Overview -»
	«EXPAND _RecentlyRevisedSpecification -»
	«EXPAND _AffectedStructuralElements FOR gcore() -»
«ENDIF -»
«ENDDEFINE»

«DEFINE _NoRecentlyRevisedSpecification FOR RModel -»
<div>specification elements haven't changed since last verification of traceability links</div>
«ENDDEFINE»

«REM»
	generates a table giving an overview of recently revised specification elements
«ENDREM»
«DEFINE _Overview FOR RModel -»
<div>
	<table class="centerCellsStarting2nd">
		<tr>
			<th></th>
			<th>Total</th>
			<th>Recently Revised</th>
			<th>Current State</th>
		</tr>
		«EXPAND _RecentlyRevised FOR scenario -»
		«EXPAND _RecentlyRevised FOR scenario.step -»
		«EXPAND _RecentlyRevised FOR requirement -»
	</table>
</div>
«ENDDEFINE»

«DEFINE _RecentlyRevised FOR List[RSpecObject] -»
	<tr>
		<td>«first().asMetaTypeNamePlural()»</td>
		<td>«size»</td>
		<td>«select( e|e.hasOutdatedTraces() ).size»</td>
		<td>«IF size == 0»-«ELSE»«percentage( size, select( e|e.hasOutdatedTraces() ).size )»% up to date«ENDIF»</td>
	</tr>
«ENDDEFINE»

«DEFINE _RecentlyRevisedSpecification FOR RModel -»
	«EXPAND _RecentlyRevisedScenario -»
	«EXPAND _RecentlyRevisedScenarioStep -»
	«EXPAND _RecentlyRevisedRequirement -»
«ENDDEFINE»

«DEFINE _RecentlyRevisedScenario FOR RModel -»
«LET revisedScenario() AS scenario -»
«IF !scenario.isEmpty -»
<div>
	<h3>Revised Scenarios</h3>
	<div class="list">
		«EXPAND specification::GreqCommon::ListItem FOREACH scenario -»
	</div>
</div>
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«DEFINE _RecentlyRevisedScenarioStep FOR RModel -»
«LET revisedScenarioStep() AS scenarioStep -»
«IF !scenarioStep.isEmpty -»
<div>
	<h3>Revised Scenario Steps</h3>
	<dl class="list">
	«FOREACH scenarioStep.scenario.toSet() AS s -»
		<dt>«EXPAND specification::GreqCommon::ListItem(false) FOR s -»</dt>
		<dd>
			<div class="list">
			«EXPAND specification::GreqCommon::ListItem FOREACH s.step.select( s|s.scenarioStepTrace().exists( e|e.isOutdated() ) ) -»
			</div>
		</dd>
	«ENDFOREACH -»
	</dl>
</div>
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«DEFINE _RecentlyRevisedRequirement FOR RModel -»
«LET revisedRequirement() AS requirement -»
«IF !requirement.isEmpty -»
<div>
	<h3>Revised Requirements</h3>
	<div class="list">
		«EXPAND specification::GreqCommon::ListItem FOREACH requirement -»
	</div>
</div>
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«REM»
	generates a list of structural elements affected by recently revised specification elements
«ENDREM»
«DEFINE _AffectedStructuralElements FOR MModel -»
	«EXPAND _AffectedClassifier -»
	«EXPAND _AffectedAssociationRoles -»
	«EXPAND _AffectedOperations -»
	«EXPAND _AffectedParameters -»
	«EXPAND _AffectedAttributes -»
«ENDDEFINE»

«DEFINE _AffectedClassifier FOR MModel -»
«LET affectedClassifier() AS classifier -»
«IF !classifier.isEmpty -»
<div>
	<h3>Affected Classifiers</h3>
	<dl>
		«EXPAND _AffectedClassifier FOREACH classifier -»
	</dl>
</div>
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«DEFINE _AffectedClassifier FOR MClassifier -»
		<dt>«EXPAND structure::GcoreCommon::QualifiedName -»</dt>
		<dd>«comment()»</dd>
«ENDDEFINE»

«DEFINE _AffectedAssociationRoles FOR MModel -»
«LET affectedAssociationRole() AS ends -»
«IF !ends.isEmpty -»
<div>
	<h3>Affected Navigable Associations</h3>
	<dl>
		«EXPAND _AffectedAssociationRole FOREACH ends -»
	</dl>
</div>
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«DEFINE _AffectedAssociationRole FOR MAssociationRole -»
		<dt>«EXPAND structure::GcoreCommon::QualifiedName -»</dt>
		<dd>«comment()»</dd>
«ENDDEFINE»

«DEFINE _AffectedOperations FOR MModel -»
«LET affectedOperation() AS ops -»
«IF !ops.isEmpty -»
<div>
	<h3>Affected Operations</h3>
	<dl>
		«EXPAND _AffectedOperation FOREACH ops -»
	</dl>
</div>
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«DEFINE _AffectedOperation FOR MOperation -»
		<dt>«EXPAND structure::GcoreCommon::QualifiedName -»</dt>
		<dd>«comment()»</dd>
«ENDDEFINE»

«DEFINE _AffectedParameters FOR MModel -»
«LET affectedParameter() AS params -»
«IF !params.isEmpty -»
<div>
	<h3>Affected Parameters</h3>
	<dl>
		«EXPAND _AffectedParameter FOREACH params -»
	</dl>
</div>
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«DEFINE _AffectedParameter FOR MParameter -»
		<dt>«EXPAND structure::GcoreCommon::QualifiedName -»</dt>
		<dd>«comment()»</dd>
«ENDDEFINE»

«DEFINE _AffectedAttributes FOR MModel -»
«LET affectedAttribute() AS attribs -»
«IF !attribs.isEmpty -»
<div>
	<h3>Affected Attributes</h3>
	<dl>
		«EXPAND _AffectedAttribute FOREACH attribs -»
	</dl>
</div>
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«DEFINE _AffectedAttribute FOR MAttribute -»
		<dt>«EXPAND structure::GcoreCommon::QualifiedName -»</dt>
		<dd>«comment()»</dd>
«ENDDEFINE»