/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */

import gcore;


/**
 * Utility scripts to simplifies navigation between GeneSEZ Core meta model elements.
 * 
 * HINT: All scripts for model navigation are available under the prefix 'nav'.
 * 
 * @author	Tobias Haubold <tobias.haubold@fh-zwickau.de> (maintainer)
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
 */

extension org::genesez::util::logging::Logging;


// -- Navigation to MModel ----------------------------------------------------------------------------------


/**
 * Returns the specified model element istself.
 * 
 * @api
 */
MModel navModel(MModel this) :
	this;

/**
 * Returns the model element by using a package as starting point of navigation.
 * 
 * @api
 */
MModel navModel(MPackage this) :
	nestingPackage.navModel();

/**
 * Returns the model element by using a classifier as starting point of navigation.
 * 
 * @api
 */
MModel navModel(MClassifier this) :
	owningContext.navModel();

/**
 * Returns the model element by using an external type as starting point of navigation.
 * 
 * @api
 */
MModel navModel(MExternal this) :
	model;

/**
 * Returns the model element by using a property as starting point of navigation.
 * 
 * @api
 * @see navModel(MClassifier)
 */
MModel navModel(MProperty this) : 
	classifier.navModel();

/**
 * Returns the model element by using an operation as starting point of navigation.
 * 
 * @api
 * @see navModel(MClassifier)
 */
MModel navModel(MOperation this) :	
	classifier.navModel();

/**
 * Returns the model element by using a parameter as starting point of navigation.
 * 
 * @api
 * @see navModel(MOperation)
 */
MModel navModel(MParameter this) :	
	operation.navModel();

/**
 * Returns the model element by using a stereotype as starting point of navigation.
 * 
 * @api
 */
MModel navModel(MStereotype this) :	
	model;


/**
 * Returns the model element by using a type as starting point of navigation.
 * Just there for error free templates.
 *  
 * @return	null
 * @api
 */
MModel navModel(MType this) :
	logFatal( "Unable to determine MModel from MType. Please add your case to this function!" ) ->
	null;

/**
 * Returns the model element by using an element as starting point of navigation.
 * Just there for error free templates.
 *
 * @return	null
 * @api
 */
MModel navModel(MElement this) :
	logFatal( "Unable to determine MModel from MElement. Please add your case to this function!" ) ->
	null;


// -- Navigation to MPackage --------------------------------------------------------------------------------


/**
 * Returns the specified package element istself.
 * 
 * @api
 */
MPackage navPackage(MPackage this) :
	this;

/**
 * Returns the package element by using a classifier as starting point of navigation.
 * 
 * @api
 */
MPackage navPackage(MClassifier this) :
	owningContext.navPackage();

/**
 * Returns the package element by using a property as starting point of navigation.
 * 
 * @api
 * @see navPackage(MClassifier)
 */
MPackage navPackage(MProperty this) : 
	classifier.navPackage();

/**
 * Returns the package element by using an operation as starting point of navigation.
 * 
 * @api
 * @see navPackage(MClassifier)
 */
MPackage navPackage(MOperation this) :	
	classifier.navPackage();

/**
 * Returns the package element by using a parameter as starting point of navigation.
 * 
 * @api
 * @see navPackage(MOperation)
 */
MPackage navPackage(MParameter this) :	
	operation.navPackage();


/**
 * Returns the package element by using a type as starting point of navigation.
 * Just there for error free templates.
 * 
 * @return	null
 * @api
 */
MModel navPackage(MType this) :
	logFatal( "Unable to determine MPackage from MType. Please add your case to this function!" ) ->
	null;

/**
 * Returns the package element by using an element as starting point of navigation.
 * Just there for error free templates.
 * 
 * @return	null
 * @api
 */
MModel navPackage(MElement this) :
	logFatal( "Unable to determine MPackage from MElement. Please add your case to this function!" ) ->
	null;
