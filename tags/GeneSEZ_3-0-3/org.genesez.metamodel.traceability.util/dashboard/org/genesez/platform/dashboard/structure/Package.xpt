«IMPORT gcore»

«IMPORT org::genesez::platform::dashboard::specification»

«REM»
	Generates an overview page with traceability information for packages.
	@author tobias haubold
«ENDREM»

«EXTENSION org::genesez::metamodel::navigation::RequirementsTraceability»

«EXTENSION org::genesez::metamodel::core::util::Conversion»

«EXTENSION org::genesez::platform::dashboard::Conversion»
«EXTENSION org::genesez::platform::dashboard::Dashboard»
«EXTENSION org::genesez::platform::dashboard::Naming»
«EXTENSION org::genesez::platform::dashboard::traceability::TraceCalculation»
«EXTENSION org::genesez::platform::dashboard::traceability::OutdatedTraceabilityLinks»


«DEFINE Root FOR MPackage -»
«FILE packageFileName()»
	«EXPAND _Package -»
«ENDFILE»
«ENDDEFINE»

«DEFINE _Package FOR MPackage -»
	«EXPAND _Summary -»
	«IF outdatedRequirementTrace().isEmpty -»
		«EXPAND _NoOutdatedTraces -»
	«ELSE -»
		«EXPAND _OutdatedTraces -»
	«ENDIF -»
	«IF requirement().isEmpty -»
		«EXPAND _NoTraceabilityInformation -»
	«ELSE -»
		«EXPAND _TraceabilityInformation -»
	«ENDIF -»
	«EXPAND _TraceabilitySummaryOfContainedElements -»
	«EXPAND _TraceabilityInformationOfContainedElements -»
«ENDDEFINE»

«DEFINE _Summary FOR MPackage»
	<h2>Package «name»</h2>
	<p>«comment()»</p>
	<dl>
		<dt>Further information:</dt>
		<dd><a href="«linkToApi()»">API documentation</a></dd>
	</dl>
«ENDDEFINE»

«REM»
	use instead advice to generate something
«ENDREM»
«DEFINE _NoOutdatedTraces FOR MPackage -»
«ENDDEFINE»

«REM»
	generates information about outdated traceability information which need to be verified
«ENDREM»
«DEFINE _OutdatedTraces FOR MPackage -»
<div>
	<h3>Revised Specification</h3>
	<dl>
	«EXPAND GreqCommon::Definition FOR outdatedRequirementTrace().requirement -»
	</dl>
</div>
«ENDDEFINE»

«REM» - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - «ENDREM»

«REM»
	generates the traceability information
«ENDREM»
«DEFINE _TraceabilityInformation FOR MPackage -»
<div>
	<h3>Requirements Traceability Information</h3>
	<dl>
	«EXPAND GreqCommon::Definition FOR requirement() -»
	</dl>
</div>
«ENDDEFINE»

«DEFINE _NoTraceabilityInformation FOR MPackage -»
«ENDDEFINE»

«REM» - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - «ENDREM»

«REM»
	generates a tracability summary of contained elements 
«ENDREM»
«DEFINE _TraceabilitySummaryOfContainedElements FOR MPackage -»
<div>
	<h3>Summary of Contained Structural Elements</h3>
	<table class="centerCellsStarting2nd">
		<tr>
			<th></th>
			<th>Total</th>
			<th>Scenario Traces</th>
			<th>Requirement Traces</th>
			<th>Evidence</th>
		</tr>
		«IF classifier.exists(e|e.metaType == MInterface) -»
			«EXPAND _TraceabilitySummary FOR classifier.typeSelect(MInterface) -»
		«ENDIF -»
		«IF classifier.exists(e|e.metaType == MClass) -»
			«EXPAND _TraceabilitySummary FOR classifier.typeSelect(MClass) -»
		«ENDIF -»
		«IF classifier.exists(e|e.metaType == MEnumeration) -»
			«EXPAND _TraceabilitySummary FOR classifier.typeSelect(MEnumeration) -»
		«ENDIF -»
		«IF classifier.exists(e|e.metaType == MDataType) -»
			«EXPAND _TraceabilitySummary FOR classifier.typeSelect(MDataType) -»
		«ENDIF -»
	</table>
</div>
«ENDDEFINE»

«DEFINE _TraceabilitySummary FOR List[MClassifier] -»
		<tr>
			<td>«first().asMetaTypeNamePlural() -»</td>
			<td>«size -»</td>
			<td>
				«LET scenarioTraceRate().select(e|e != -1).average() AS p -»
				«IF p == -1 -»<span>-</span>«ELSE -»<span>«p»% up to date</span>«ENDIF -»
				«ENDLET -»
			</td>
			<td>
				«LET requirementTraceRate().select(e|e != -1).average() AS p -»
				«IF p == -1 -»<span>-</span>«ELSE -»<span>«p»% up to date</span>«ENDIF -»
				«ENDLET -»
			</td>
			<td>
				«LET percentage(size, select(e|e.scenarioTrace().isEmpty && e.requirementTrace().isEmpty).size).inverse() AS p -»
				«IF p == -1 -»<span>-</span>«ELSE -»<span>«p»% evidence</span>«ENDIF -»
				«ENDLET -»
			</td>
		</tr>
«ENDDEFINE»

«DEFINE _TraceabilityInformationOfContainedElements FOR MPackage -»
«LET classifier.select( e|e.metaType == MInterface ) AS classifier -»
«IF !classifier.isEmpty -»
<div>
	<h3>Interfaces</h3>
	«EXPAND _TraceabilityInformation FOR classifier -»
</div>
«ENDIF -»
«ENDLET -»
«LET classifier.select( e|e.metaType == MClass ) AS classifier -»
«IF !classifier.isEmpty -»
<div>
	<h3>Classes</h3>
	«EXPAND _TraceabilityInformation FOR classifier -»
</div>
«ENDIF -»
«ENDLET -»
«LET classifier.select( e|e.metaType == MEnumeration ) AS classifier -»
«IF !classifier.isEmpty -»
<div>
	<h3>Enumerations</h3>
	«EXPAND _TraceabilityInformation FOR classifier -»
</div>
«ENDIF -»
«ENDLET -»
«LET classifier.select( e|e.metaType == MDataType ) AS classifier -»
«IF !classifier.isEmpty -»
<div>
	<h3>Datatypes</h3>
	«EXPAND _TraceabilityInformation FOR classifier -»
</div>
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«DEFINE _TraceabilityInformation FOR List[MClassifier] -»
	<table class="centerCellsStarting2nd">
		<tr>
			<th>Name</th>
			<th>Scenarios</th>
			<th>Scenario Traces</th>
			<th>Requirements</th>
			<th>Requirement Traces</th>
		</tr>
		«EXPAND _TraceabilityInformation FOREACH this -»
	</table>
«ENDDEFINE»

«DEFINE _TraceabilityInformation FOR MClassifier -»
		<tr>
			<td><a href="«linkTo()»" onclick="«clickOn()»">«name»</a></td>
			<td>«scenario().size»</td>
			<td>
				«LET scenarioTraceRate() AS p -»
				«IF p == -1 -»-«ELSE -»«p»% up to date«ENDIF -»
				«ENDLET -»
			</td>
			<td>«requirement().size»</td>
			<td>
				«LET requirementTraceRate() AS p -»
				«IF p == -1 -»-«ELSE -»«p»% up to date«ENDIF -»
				«ENDLET -»
			</td>
		</tr>
«ENDDEFINE»
