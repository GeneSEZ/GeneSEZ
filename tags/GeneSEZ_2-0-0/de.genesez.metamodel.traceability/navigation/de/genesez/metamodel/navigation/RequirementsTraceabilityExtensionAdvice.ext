import gcore;
import greq;
import gtrace;

/**
 * Provides advices for the metamodel navigation functions to use metamodel extensions instead
 * of model queries.
 * 
 * @see	RequirementsTraceability
 * @author	toh
 */

// access to models using global variables
MModel gcore() : GLOBALVAR coremodel;
RModel greq() : GLOBALVAR reqmodel;
TTraceModel gtrace() : GLOBALVAR tracemodel;

// information to evaluate the model extensions
String gcoreExtensionId() : "http://genesez.de/metamodel/traceability";
String gcoreRequirementTrace() : "requirement.trace";
String gcoreScenarioTrace() : "scenario.trace";
String gcoreScenarioStepTrace() : "scenario.step.trace";
String greqExtensionId() : "http://genesez.de/metamodel/traceability";
String greqRequirementTrace() : "requirement.trace";
String greqScenarioTrace() : "scenario.trace";
String greqScenarioStepTrace() : "scenario.step.trace";

// replace traceability metamodel based navigation function with gcore/greq extension based navigation functions
around de::genesez::metamodel::navigation::RequirementsTraceability::requirementTrace(MElement this) : requirementTrace();
around de::genesez::metamodel::navigation::RequirementsTraceability::scenarioTrace(MClassifier this) : scenarioTrace();
around de::genesez::metamodel::navigation::RequirementsTraceability::scenarioTrace(MStateMachine this) : scenarioTrace();
around de::genesez::metamodel::navigation::RequirementsTraceability::scenarioStepTrace(MOperation this) : scenarioStepTrace();
around de::genesez::metamodel::navigation::RequirementsTraceability::scenarioStepTrace(MState this) : scenarioStepTrace();
around de::genesez::metamodel::navigation::RequirementsTraceability::requirementTrace(RRequirement this) : requirementTrace();
around de::genesez::metamodel::navigation::RequirementsTraceability::scenarioTrace(RScenario this) : scenarioTrace();
around de::genesez::metamodel::navigation::RequirementsTraceability::scenarioStepTrace(RScenarioStep this) : scenarioStepTrace();

// navigation
List[TRequirementTrace] requirementTrace(MElement this) :
	taggedValue
		.select( e|e.tag.name == gcoreRequirementTrace() && e.tag.stereotype.name == gcoreExtensionId()	)
		.requirementTrace()
		.sortBy( e|e.requirement.precedence );

List[TScenarioTrace] scenarioTrace(MClassifier this) :
	taggedValue
		.select( e|e.tag.name == gcoreScenarioTrace() && e.tag.stereotype.name == gcoreExtensionId() )
		.scenarioTrace()
		.sortBy( e|e.scenario.precedence );

List[TScenarioTrace] scenarioTrace(MStateMachine this) :
	taggedValue
		.select( e|e.tag.name == gcoreScenarioTrace() && e.tag.stereotype.name == gcoreExtensionId() )
		.scenarioTrace()
		.sortBy( e|e.scenario.precedence );

List[TScenarioStepTrace] scenarioStepTrace(MOperation this) :
	taggedValue
		.select( e|e.tag.name == gcoreScenarioStepTrace() && e.tag.stereotype.name == gcoreExtensionId() )
		.scenarioStepTrace()
		.sortBy( e|e.scenarioStep.scenario.precedence );

List[TScenarioStepTrace] scenarioStepTrace(MState this) :
	taggedValue
		.select( e|e.tag.name == gcoreScenarioStepTrace() && e.tag.stereotype.name == gcoreExtensionId() )
		.scenarioStepTrace()
		.sortBy( e|e.scenarioStep.scenario.precedence );

List[TRequirementTrace] requirementTrace(RRequirement this) :
	value
		.select( e|e.tag.name == greqRequirementTrace() && e.tag.annotation.uri == greqExtensionId() )
		.requirementTrace()
		.sortBy( e|e.requirement.precedence );

List[TScenarioTrace] scenarioTrace(RScenario this) :
	value
		.select( e|e.tag.name == greqScenarioTrace() && e.tag.annotation.uri == greqExtensionId() )
		.scenarioTrace()
		.sortBy( e|e.scenario.precedence );

List[TScenarioStepTrace] scenarioStepTrace(RScenarioStep this) :
	value
		.select( e|e.tag.name == greqScenarioStepTrace() && e.tag.annotation.uri == greqExtensionId() )
		.scenarioStepTrace()
		.sortBy( e|e.scenarioStep.scenario.precedence );

// resolve the uri and return the expected object
TRequirementTrace requirementTrace(MTaggedValue this) : (TRequirementTrace)value.resolve();
TScenarioTrace scenarioTrace(MTaggedValue this) : (TScenarioTrace)value.resolve();
TScenarioStepTrace scenarioStepTrace(MTaggedValue this) : (TScenarioStepTrace)value.resolve();

TRequirementTrace requirementTrace(RValue this) : (TRequirementTrace)value.resolve();
TScenarioTrace scenarioTrace(RValue this) : (TScenarioTrace)value.resolve();
TScenarioStepTrace scenarioStepTrace(RValue this) : (TScenarioStepTrace)value.resolve();

// resolve uris of emf objects
Object resolve(String uri) : JAVA de.genesez.metamodel.navigation.EcoreUtil.resolve(java.lang.String);
