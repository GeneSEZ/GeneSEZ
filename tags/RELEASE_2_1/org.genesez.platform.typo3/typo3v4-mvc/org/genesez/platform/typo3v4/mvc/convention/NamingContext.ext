/**
 * General naming context conventions for TYPO3 MVC.
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de>
 * @date	2012-02-17
 */


/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	GENERAL TYPO3 MVC naming context conventions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Getter for the TYPO3 MVC naming context 'Default'.
 *
 * @return	The naming context 'Default'.
 */
String namingContextDefault() :
	"Default";


/**
 * Getter for the TYPO3 MVC naming context 'General'.
 *
 * @return	The naming context 'General'.
 */
String namingContextGeneral() :
	"General";


/**
 * Getter for the TYPO3 MVC naming context 'PHPCompliant'.
 *
 * @return	The naming context 'PHPCompliant'.
 */
String namingContextPHPCompliant() :
	"PHPCompliant";
	

/**
 * Getter for the TYPO3 MVC naming context 'Configuration'.
 *
 * @return	The naming context 'Configuration'.
 */
String namingContextConfiguration() :
	"Configuration";
	

/**
 * Getter for the TYPO3 MVC naming context 'Persistence'.
 *
 * @return	The naming context 'Persistence'.
 */
String namingContextPersistence() :
	"Persistence";


/**
 * Getter for the TYPO3 MVC naming context 'Localization'.
 *
 * @return	The naming context 'Localization'.
 */
String namingContextLocalization() :
	"Localization";


/**
 * Getter for the TYPO3 MVC naming context 'LocalizationCSH'.
 *
 * @return	The naming context 'LocalizationCSH'.
 */
String namingContextLocalizationCSH() :
	"LocalizationCSH";


/**
 * Getter for the TYPO3 MVC naming context 'Object'.
 *
 * @return	The naming context 'Object'.
 */
String namingContextObject() :
	"Object";
	

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	GENERAL TYPO3 MVC type mapping context conventions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Getter for the default type mapping context.
 *
 * @return	The default type mapping context.
 */
String typeMappingContextGeneral() :
	"";

	
/**
 * Getter for the type mapping context 'Model' for multi valued types.
 *
 * @return	The type mapping context 'Model'.
 */
String typeMappingContextModel() :
	"Model";


/**
 * Getter for the type mapping context 'Repository' for multi valued types.
 *
 * @return	The type mapping context 'Repository'.
 */
String typeMappingContextRepository() :
	"Repository";


/**
 * Getter for the type mapping context 'PHPTypeHint'.
 *
 * @return	The type mapping context 'PHPTypeHint'.
 */
String typeMappingContextPHPTypeHint() :
	"PHPTypeHint";


/**
 * Getter for the type mapping context 'SQLColumnDefinition'.
 *
 * @return	The type mapping context 'SQLColumnDefinition'.
 */
String typeMappingContextSQLColumnDefinition() :
	"SQLColumnDefinition";


/**
 * Getter for the type mapping context 'SQLTableName'.
 *
 * @return	The type mapping context 'SQLTableName'.
 */
String typeMappingContextSQLTableName() :
	"SQLTableName";


/**
 * Getter for the type mapping context 'TYPO3TCx'.
 *
 * @return	The type mapping context 'TYPO3TCx'.
 */
String typeMappingContextTYPO3TCx() :
	"TYPO3TCx";