import gcore;

extension org::genesez::metamodel::core::util::AccessElement;
extension org::genesez::metamodel::core::util::CreateElement;
extension org::genesez::metamodel::core::util::NavigateElement;
extension org::genesez::platform::java::m2m::AccessOperation;
extension org::genesez::platform::java::util::JavaTypes;


Void addGetterAndSetterOperations(MInterface this) :
	let c = getSessionBeanSeamComponent() :
		c != null
			? (
				c.property.typeSelect(MAttribute).emEnsureGetAccessOperation( c ) ->
				c.property.typeSelect(MAttribute).emEnsureGetAccessOperation( c )
			)
			: "";
		
MClass getSessionBeanSeamComponent(MInterface this) :
	this.emHasStereotypeAssignment("ejb3Local") || this.emHasStereotypeAssignment("ejb3Remote")
		? allNestedClassifiers(this.navModel()).typeSelect(MClass).selectFirst(e|e.emHasStereotypeAssignment("ejb3SessionBean") && e.emHasStereotypeAssignment("seam2Component") && e.realization.contains(this))
		: null;

MClassifier addConverter(MClassifier this) :
	this.emHasStereotypeAssignment("seam2Converter")  
	&& !generalization.typeSelect(MClassifier).realization.typeSelect(MExternal).exists(e|e.name == "Converter") 
		? this.navModel().typeConverter()
		: "";
		
MClassifier addValidator(MClassifier this) :
	this.emHasStereotypeAssignment("seam2Validator")  
	&& !generalization.typeSelect(MClassifier).realization.typeSelect(MExternal).exists(e|e.name == "Validator") 
		? this.navModel().typeValidator()
		: "";
		
MClassifier addFilter(MClassifier this) :
	this.emHasStereotypeAssignment("seam2ServletContainerIntegration")  
	&& !generalization.typeSelect(MClassifier).realization.typeSelect(MExternal).exists(e|e.name == "Filter") 
		? this.navModel().typeFilter()
		: "";