«REM»
	Template for jpa elements
	
	@author	andre pflueger
	@date	2010-10-13
«ENDREM»

«REM» based on genesez meta model «ENDREM»
«IMPORT gcore»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION de::genesez::platforms::common::log::Log»

«EXTENSION de::genesez::platforms::common::AccessHelper»
«EXTENSION de::genesez::platforms::common::Conversion»
«EXTENSION de::genesez::platforms::common::GeneralHelper»
«EXTENSION de::genesez::platforms::common::typemapping::TypeMapping»

«EXTENSION de::genesez::platforms::java::scripts::Type»
«EXTENSION de::genesez::platforms::java::scripts::Naming»
«EXTENSION de::genesez::platforms::java::scripts::Conversion»
«EXTENSION de::genesez::platforms::java::jpa::scripts::Stereotypes»

«REM»
	public functions
«ENDREM»

«REM» 
	evaluates the stereotype jpaOptimisticLocking
 «ENDREM»
«DEFINE OptimisticLocking FOR MElement-»
	«IF hasStereotype("jpaOptimisticLocking")-»
		@Version
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluates the stereotype jpaPrimaryKey
 «ENDREM»
«DEFINE PrimaryKey FOR MElement-»
	«IF hasStereotype("jpaPrimaryKey") && hasTaggedValue("jpaPrimaryKey", "embeddedId", "false")-»
		@Id
	«ENDIF-»
	«IF hasTaggedValue("jpaPrimaryKey", "embeddedId", "true")-»
		@EmbeddedId
	«ENDIF-»	
	«EXPAND _TableGenerator-»
	«EXPAND _SequenceGenerator-»
	«IF hasTaggedValue("jpaPrimaryKey", "generatedValue", "true")-»
		@GeneratedValue(strategy=GenerationType.«getTaggedValue("jpaPrimaryKey", "strategy")-»
		«IF hasTaggedValue("jpaPrimaryKey", "strategy", "TABLE") || hasTaggedValue("jpaPrimaryKey", "strategy", "SEQUENCE")-»
			«IF hasUtilizableValue("jpaPrimaryKey", "generatorName")-»
				, generator="«getTaggedValue("jpaPrimaryKey", "generatorName")-»"
			«ENDIF-»
		«ENDIF-»	
		)
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluates the stereotype jpaColumn
 «ENDREM»
«DEFINE Column FOR MElement»
	«IF hasStereotype("jpaColumn")-»
		@Column(
		«IF hasUtilizableValue("jpaColumn", "name")-»
			name="«getTaggedValue("jpaColumn", "name")-»"
		«ELSE-»
			name="«name.asTypeName()-»"
		«ENDIF-»
		«IF hasTaggedValue("jpaColumn", "unique", "true")-»
			, unique=true, nullable=false
		«ENDIF-»
		«IF hasTaggedValue("jpaColumn", "nullable", "false") && !hasTaggedValue("jpaColumn", "unique", "true")-»
			, nullable=false
		«ENDIF-»
		«IF hasTaggedValue("jpaColumn", "insertable", "false")-»
			, insertable=false
		«ENDIF-»
		«IF hasTaggedValue("jpaColumn", "updatable", "false")-»
			, updatable=false
		«ENDIF-»
		«IF hasUtilizableValue("jpaColumn", "columnDefinition")-»
			, columnDefinition="«getTaggedValue("jpaColumn", "columnDefinition")-»"
		«ENDIF-»
		«IF hasUtilizableValue("jpaColumn", "table")-»
			, table="«getTaggedValue("jpaColumn", "table")-»"
		«ENDIF-»
		«IF !hasTaggedValue("jpaColumn", "length", "255")-»
			, length=«taggedValue.selectFirst(e|e.tag.name == "length").value-»
		«ENDIF-»
		«IF !hasTaggedValue("jpaColumn", "precision", "0")-»
			, precision=«taggedValue.selectFirst(e|e.tag.name == "precision").value-»
		«ENDIF-»
		«IF !hasTaggedValue("jpaColumn", "scale", "0")-»
			, scale=«taggedValue.selectFirst(e|e.tag.name == "scale").value-»
		«ENDIF-»
		)		
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluates the stereotype jpaDatatypeMapping
 «ENDREM»
«DEFINE DatatypeMapping FOR MElement-»
	«IF hasStereotype("jpaDatatypeMapping")-»
		«IF hasTaggedValue("jpaDatatypeMapping", "type", "Basic")-»
			@Basic(optional=«getTaggedValue("jpaDatatypeMapping", "optional")-»
			«IF hasUtilizableValue("jpaDatatypeMapping", "fetch") && 
				!hasTaggedValue("jpaDatatypeMapping", "fetch", "DEFAULT")-»
				, fetch=FetchType.«getTaggedValue("jpaDatatypeMapping", "fetch")-»
			«ENDIF-»)
		«ENDIF-»
		«IF hasTaggedValue("jpaDatatypeMapping", "type", "Lob")-»
			@Lob
		«ENDIF-»
		«IF hasTaggedValue("jpaDatatypeMapping", "type", "Temporal")-»
			@Temporal
			«IF !hasTaggedValue("jpaDatatypeMapping", "temporalType", "null")-»
				(TemporalType.«getTaggedValue("jpaDatatypeMapping", "temporalType")-»)
			«ENDIF-»
		«ENDIF-»
		«IF hasTaggedValue("jpaDatatypeMapping", "type", "Enumerated")-»
			@Enumerated
			«IF hasUtilizableValue("jpaDatatypeMapping", "enumType") && 
				!hasTaggedValue("jpaDatatypeMapping", "enumType", "ORDINAL")-»
				(«getTaggedValue("jpaDatatypeMapping", "enumType")-»)
			«ENDIF-»
		«ENDIF-»
		«IF hasTaggedValue("jpaDatatypeMapping", "transient", "true")-»
			@Transient
		«ENDIF-»
		«IF hasTaggedValue("jpaDatatypeMapping", "type", "Embedded")-»
			@Embedded
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	private functions
«ENDREM»

«REM» 
	evaluates the stereotype jpaTableGenerator
 «ENDREM»
«DEFINE _TableGenerator FOR MElement-»
	«IF hasStereotype("jpaTableGenerator") && hasUtilizableValue("jpaTableGenerator", "name")-»
		@TableGenerator(name="«getTaggedValue("jpaTableGenerator", "name")-»"
		«IF hasUtilizableValue("jpaTableGenerator", "table")-»
			, table="«getTaggedValue("jpaTableGenerator", "table")-»"
		«ENDIF-»
		«IF hasUtilizableValue("jpaTableGenerator", "pkColumnName")-»
			, pkColumnName="«getTaggedValue("jpaTableGenerator", "pkColumnName")-»"
		«ENDIF-»
		«IF hasUtilizableValue("jpaTableGenerator", "valueColumnName")-»
			, valueColumnName="«getTaggedValue("jpaTableGenerator", "valueColumnName")-»"
		«ENDIF-»	
		«IF hasUtilizableValue("jpaTableGenerator", "pkColumnValue")-»
			, pkColumnValue="«getTaggedValue("jpaTableGenerator", "pkColumnValue")-»"
		«ENDIF-»	
		«IF hasUtilizableValue("jpaTableGenerator", "initialValue")-»
			, initialValue = «getTaggedValue("jpaTableGenerator", "initialValue")-»
		«ENDIF-»
		«IF hasUtilizableValue("jpaTableGenerator", "allocationSize")-»
			, allocationSize = «getTaggedValue("jpaTableGenerator", "allocationSize")-»
		«ENDIF-»
		)	
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluates the stereotype jpaSequenceGenerator
 «ENDREM»
«DEFINE _SequenceGenerator FOR MElement-»
	«IF hasStereotype("jpaSequenceGenerator") && hasUtilizableValue("jpaSequenceGenerator", "name")-»
		@SequenceGenerator(name="«getTaggedValue("jpaSequenceGenerator", "name")-»"
		«IF hasUtilizableValue("jpaSequenceGenerator", "sequenceName")-»
			, sequenceName="«getTaggedValue("jpaSequenceGenerator", "sequenceName")-»"
		«ENDIF-»	
		«IF hasUtilizableValue("jpaSequenceGenerator", "initialValue")-»
			, initialValue = «getTaggedValue("jpaSequenceGenerator", "initialValue")-»
		«ENDIF-»
		«IF hasUtilizableValue("jpaSequenceGenerator", "allocationSize")-»
			, allocationSize = «getTaggedValue("jpaSequenceGenerator", "allocationSize")-»
		«ENDIF-»)
	«ENDIF-»
«ENDDEFINE»