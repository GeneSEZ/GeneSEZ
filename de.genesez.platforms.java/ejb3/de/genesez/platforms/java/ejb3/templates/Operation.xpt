«IMPORT gcore»

«REM»
	Template for ejb3 operations
	
	@author	andre pflueger
	@date	2009-02-22
«ENDREM»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION de::genesez::platforms::common::log::Log»

«EXTENSION de::genesez::platforms::common::AccessHelper»
«EXTENSION de::genesez::platforms::common::typemapping::TypeMapping»
«EXTENSION de::genesez::platforms::java::scripts::Type»
«EXTENSION de::genesez::platforms::java::scripts::Naming»
«EXTENSION de::genesez::platforms::java::scripts::Conversion»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM» 
	main method for evaluation of annotations	
«ENDREM»
«DEFINE Annotation FOR MOperation»
	«EXPAND _Timer-»	
	«EXPAND _Callback-»
	«EXPAND Element::CMTransactionality-»
	«EXPAND _Interceptor-»
	«EXPAND Element::EJB-»
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	evaluates the stereotype ejb3Timer
	constraints should be realized by check language
«ENDREM»
«DEFINE _Timer FOR MOperation-»
	«IF (hasStereotype("ejb3Timer") && (parameter.exists(e|e.type.mapName().asTypeName() == "Timer") && parameter.size == 1)) && 
		(classifier.hasStereotype("ejb3MessageDrivenBean") || classifier.hasTaggedValue("ejb3SessionBean", "stateful", "false"))-»
		@Timeout
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate the stereotype ejb3Callback 
	stereotype ejb3Callback for different bean types 
	(only if there is no external callback handling 
	(-> EntityListener and Interceptor))
«ENDREM»
«DEFINE _Callback FOR MOperation-»
	«EXPAND _SBAndMDBCallback-»
	«EXPAND _StatefulSBCallback-»
	«EXPAND _PersistentEntityCallback-»
	«EXPAND _OtherCallback-»	
«ENDDEFINE»

«REM» 
	evaluates callback annotations for session beans and message driven beans
«ENDREM»
«DEFINE _SBAndMDBCallback FOR MOperation-»
	«IF hasTaggedValue("jpaCallback", "external", "false") && 
		(classifier.hasStereotype("ejb3SessionBean") || classifier.hasStereotype("ejb3MessageDrivenBean"))-»
		«IF hasTaggedValue("jpaCallback", "postConstruct", "true")-»
			@PostConstruct
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "preDestroy", "true")-»
			@PreDestroy
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluates callback annotations for stateful session beans
«ENDREM»
«DEFINE _StatefulSBCallback FOR MOperation-»
	«IF hasTaggedValue("jpaCallback", "external", "false") && 
		classifier.hasTaggedValue("ejb3SessionBean", "stateful", "true")-»
		«IF hasTaggedValue("jpaCallback", "postActivate", "true")-»
			@PostActivate
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "prePassivate", "true")-»
			@PrePassivate
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluates callback annotations in entity listeners
«ENDREM»
«DEFINE _OtherCallback FOR MOperation-»
	«IF hasTaggedValue("jpaCallback", "external", "false") && 
		!classifier.hasStereotype("ejb3PersistentEntity") &&
		!classifier.hasStereotype("ejb3SessionBean") && 
		!classifier.hasStereotype("ejb3MessageDrivenBean")-»
		«IF hasTaggedValue("jpaCallback", "postPersist", "true")-»
			@PostPersist
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "prePersist", "true")-»
			@PrePersist
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "postUpdate", "true")-»
			@PostUpdate
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "preUpdate", "true")-»
			@PreUpdate
		«ENDIF-»	
		«IF hasTaggedValue("jpaCallback", "postRemove", "true")-»
			@PostRemove
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "preRemove", "true")-»
			@PreRemove
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "postLoad", "true")-»
			@PostLoad
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "postActivate", "true")-»
			@PostActivate
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "prePassivate", "true")-»
			@PrePassivate
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "postConstruct", "true")-»
			@PostConstruct
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "preDestroy", "true")-»
			@PreDestroy
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluates callback annotations for session beans and message driven beans
«ENDREM»
«DEFINE _PersistentEntityCallback FOR MOperation-»
	«IF hasTaggedValue("jpaCallback", "external", "false") && 
		classifier.hasStereotype("ejb3PersistentEntity")»
		«IF hasTaggedValue("jpaCallback", "postPersist", "true")-»
			@PostPersist
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "prePersist", "true")-»
			@PrePersist
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "postUpdate", "true")-»
			@PostUpdate
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "preUpdate", "true")-»
			@PreUpdate
		«ENDIF-»	
		«IF hasTaggedValue("jpaCallback", "postRemove", "true")-»
			@PostRemove
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "preRemove", "true")-»
			@PreRemove
		«ENDIF-»
		«IF hasTaggedValue("jpaCallback", "postLoad", "true")-»
			@PostLoad
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate the stereotype ejb3OperationInterceptor 
«ENDREM»
«DEFINE _Interceptor FOR MOperation-»
	«IF hasStereotype("ejb3OperationInterceptor")-»
		«IF hasUtilizableValue("ejb3OperationInterceptor", "interceptors")-»
			@Interceptors(value={«FOREACH getTaggedValue("ejb3OperationInterceptor", "interceptors").getElements() AS interceptor SEPARATOR ", "-»
					«interceptor-».class
			«ENDFOREACH-»})
		«ENDIF»
		«IF hasTaggedValue("ejb3OperationInterceptor", "aroundInvoke", "true")-»
			@AroundInvoke
		«ENDIF-»	
		«IF hasTaggedValue("ejb3OperationInterceptor", "excludeClassInterceptors", "true")-»
			@ExcludeClassInterceptors
		«ENDIF-»	
	«ENDIF-»
«ENDDEFINE»