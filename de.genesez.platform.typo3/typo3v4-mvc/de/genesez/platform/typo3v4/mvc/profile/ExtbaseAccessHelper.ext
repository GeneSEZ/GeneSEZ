/**
 * Simplifies access to "GeneSEZ TYPO3v4 Extbase Profile" profile 
 * and makes working with the profile more easier. 
 *  
 */

// based on genesez meta model
import gcore;

// use common access helper scripts
extension de::genesez::platforms::common::AccessHelper;

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseAlphanumericValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseAlphanumericValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseAlphanumericValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseAlphanumericValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseAssociation"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseAssociation".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseAssociationStereotype(MElement this) :
	hasStereotype("T3ExtbaseAssociation");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseAssociation".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseAssociationTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseAssociation", tag, value);
	
/*
- - "cascadeType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "cascadeType" 
 * for the stereotype "T3ExtbaseAssociation".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseAssociationCascadeType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseAssociation", "cascadeType", value);

/**
 * Checks if an element has a tagged value of the tag "cascadeType" 
 * for the stereotype "T3ExtbaseAssociation" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseAssociationUtilizableCascadeType(MElement this) :
	hasUtilizableValue("T3ExtbaseAssociation", "cascadeType");
/**
 * Returns the tagged value of the tag "cascadeType"
 * for the stereotype "T3ExtbaseAssociation".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseAssociationCascadeType(MElement this) :
	getTaggedValue("T3ExtbaseAssociation", "cascadeType");

/**
 * Sets the tagged value of an existing the tag "cascadeType"
 * for the stereotype "T3ExtbaseAssociation".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseAssociationCascadeType(MElement this, String value) :
	setTaggedValue("T3ExtbaseAssociation", "cascadeType", value);

/*
- - "fetchType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "fetchType" 
 * for the stereotype "T3ExtbaseAssociation".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseAssociationFetchType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseAssociation", "fetchType", value);

/**
 * Checks if an element has a tagged value of the tag "fetchType" 
 * for the stereotype "T3ExtbaseAssociation" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseAssociationUtilizableFetchType(MElement this) :
	hasUtilizableValue("T3ExtbaseAssociation", "fetchType");
/**
 * Returns the tagged value of the tag "fetchType"
 * for the stereotype "T3ExtbaseAssociation".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseAssociationFetchType(MElement this) :
	getTaggedValue("T3ExtbaseAssociation", "fetchType");

/**
 * Sets the tagged value of an existing the tag "fetchType"
 * for the stereotype "T3ExtbaseAssociation".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseAssociationFetchType(MElement this, String value) :
	setTaggedValue("T3ExtbaseAssociation", "fetchType", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseClassesPackage"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseClassesPackage".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseClassesPackageStereotype(MElement this) :
	hasStereotype("T3ExtbaseClassesPackage");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseColumnMapping"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseColumnMapping".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseColumnMappingStereotype(MElement this) :
	hasStereotype("T3ExtbaseColumnMapping");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseColumnMapping".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseColumnMappingTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseColumnMapping", tag, value);
	
/*
- - "mapOnProperty" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "mapOnProperty" 
 * for the stereotype "T3ExtbaseColumnMapping".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseColumnMappingMapOnProperty(MElement this, String value) :
	hasTaggedValue("T3ExtbaseColumnMapping", "mapOnProperty", value);

/**
 * Checks if an element has a tagged value of the tag "mapOnProperty" 
 * for the stereotype "T3ExtbaseColumnMapping" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseColumnMappingUtilizableMapOnProperty(MElement this) :
	hasUtilizableValue("T3ExtbaseColumnMapping", "mapOnProperty");
/**
 * Returns the tagged value of the tag "mapOnProperty"
 * for the stereotype "T3ExtbaseColumnMapping".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseColumnMappingMapOnProperty(MElement this) :
	getTaggedValue("T3ExtbaseColumnMapping", "mapOnProperty");

/**
 * Sets the tagged value of an existing the tag "mapOnProperty"
 * for the stereotype "T3ExtbaseColumnMapping".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseColumnMappingMapOnProperty(MElement this, String value) :
	setTaggedValue("T3ExtbaseColumnMapping", "mapOnProperty", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseController"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseController".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseControllerStereotype(MElement this) :
	hasStereotype("T3ExtbaseController");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseController".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseControllerTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseController", tag, value);
	
/*
- - "controllerType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "controllerType" 
 * for the stereotype "T3ExtbaseController".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseControllerControllerType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseController", "controllerType", value);

/**
 * Checks if an element has a tagged value of the tag "controllerType" 
 * for the stereotype "T3ExtbaseController" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseControllerUtilizableControllerType(MElement this) :
	hasUtilizableValue("T3ExtbaseController", "controllerType");
/**
 * Returns the tagged value of the tag "controllerType"
 * for the stereotype "T3ExtbaseController".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseControllerControllerType(MElement this) :
	getTaggedValue("T3ExtbaseController", "controllerType");

/**
 * Sets the tagged value of an existing the tag "controllerType"
 * for the stereotype "T3ExtbaseController".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseControllerControllerType(MElement this, String value) :
	setTaggedValue("T3ExtbaseController", "controllerType", value);

/*
- - "createErrorAction" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createErrorAction" 
 * for the stereotype "T3ExtbaseController".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseControllerCreateErrorAction(MElement this, String value) :
	hasTaggedValue("T3ExtbaseController", "createErrorAction", value);

/**
 * Checks if an element has a tagged value of the tag "createErrorAction" 
 * for the stereotype "T3ExtbaseController" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseControllerUtilizableCreateErrorAction(MElement this) :
	hasUtilizableValue("T3ExtbaseController", "createErrorAction");
/**
 * Returns the tagged value of the tag "createErrorAction"
 * for the stereotype "T3ExtbaseController".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseControllerCreateErrorAction(MElement this) :
	getTaggedValue("T3ExtbaseController", "createErrorAction");

/**
 * Sets the tagged value of an existing the tag "createErrorAction"
 * for the stereotype "T3ExtbaseController".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseControllerCreateErrorAction(MElement this, String value) :
	setTaggedValue("T3ExtbaseController", "createErrorAction", value);

/*
- - "createGetErrorFlashMessage" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createGetErrorFlashMessage" 
 * for the stereotype "T3ExtbaseController".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseControllerCreateGetErrorFlashMessage(MElement this, String value) :
	hasTaggedValue("T3ExtbaseController", "createGetErrorFlashMessage", value);

/**
 * Checks if an element has a tagged value of the tag "createGetErrorFlashMessage" 
 * for the stereotype "T3ExtbaseController" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseControllerUtilizableCreateGetErrorFlashMessage(MElement this) :
	hasUtilizableValue("T3ExtbaseController", "createGetErrorFlashMessage");
/**
 * Returns the tagged value of the tag "createGetErrorFlashMessage"
 * for the stereotype "T3ExtbaseController".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseControllerCreateGetErrorFlashMessage(MElement this) :
	getTaggedValue("T3ExtbaseController", "createGetErrorFlashMessage");

/**
 * Sets the tagged value of an existing the tag "createGetErrorFlashMessage"
 * for the stereotype "T3ExtbaseController".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseControllerCreateGetErrorFlashMessage(MElement this, String value) :
	setTaggedValue("T3ExtbaseController", "createGetErrorFlashMessage", value);

/*
- - "createInitializeAction" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createInitializeAction" 
 * for the stereotype "T3ExtbaseController".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseControllerCreateInitializeAction(MElement this, String value) :
	hasTaggedValue("T3ExtbaseController", "createInitializeAction", value);

/**
 * Checks if an element has a tagged value of the tag "createInitializeAction" 
 * for the stereotype "T3ExtbaseController" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseControllerUtilizableCreateInitializeAction(MElement this) :
	hasUtilizableValue("T3ExtbaseController", "createInitializeAction");
/**
 * Returns the tagged value of the tag "createInitializeAction"
 * for the stereotype "T3ExtbaseController".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseControllerCreateInitializeAction(MElement this) :
	getTaggedValue("T3ExtbaseController", "createInitializeAction");

/**
 * Sets the tagged value of an existing the tag "createInitializeAction"
 * for the stereotype "T3ExtbaseController".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseControllerCreateInitializeAction(MElement this, String value) :
	setTaggedValue("T3ExtbaseController", "createInitializeAction", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseControllerAction"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseControllerAction".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseControllerActionStereotype(MElement this) :
	hasStereotype("T3ExtbaseControllerAction");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseControllerAction".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseControllerActionTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseControllerAction", tag, value);
	
/*
- - "createInitializeAction" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createInitializeAction" 
 * for the stereotype "T3ExtbaseControllerAction".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseControllerActionCreateInitializeAction(MElement this, String value) :
	hasTaggedValue("T3ExtbaseControllerAction", "createInitializeAction", value);

/**
 * Checks if an element has a tagged value of the tag "createInitializeAction" 
 * for the stereotype "T3ExtbaseControllerAction" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseControllerActionUtilizableCreateInitializeAction(MElement this) :
	hasUtilizableValue("T3ExtbaseControllerAction", "createInitializeAction");
/**
 * Returns the tagged value of the tag "createInitializeAction"
 * for the stereotype "T3ExtbaseControllerAction".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseControllerActionCreateInitializeAction(MElement this) :
	getTaggedValue("T3ExtbaseControllerAction", "createInitializeAction");

/**
 * Sets the tagged value of an existing the tag "createInitializeAction"
 * for the stereotype "T3ExtbaseControllerAction".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseControllerActionCreateInitializeAction(MElement this, String value) :
	setTaggedValue("T3ExtbaseControllerAction", "createInitializeAction", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseControllerNoAction"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseControllerNoAction".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseControllerNoActionStereotype(MElement this) :
	hasStereotype("T3ExtbaseControllerNoAction");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseControllerPackage"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseControllerPackage".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseControllerPackageStereotype(MElement this) :
	hasStereotype("T3ExtbaseControllerPackage");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseDateTimeValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseDateTimeValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseDateTimeValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseDateTimeValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseDependencyInjection"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseDependencyInjection".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseDependencyInjectionStereotype(MElement this) :
	hasStereotype("T3ExtbaseDependencyInjection");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDependencyInjectionTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseDependencyInjection", tag, value);
	
/*
- - "injectConfigurationManagerType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "injectConfigurationManagerType" 
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDependencyInjectionInjectConfigurationManagerType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDependencyInjection", "injectConfigurationManagerType", value);

/**
 * Checks if an element has a tagged value of the tag "injectConfigurationManagerType" 
 * for the stereotype "T3ExtbaseDependencyInjection" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDependencyInjectionUtilizableInjectConfigurationManagerType(MElement this) :
	hasUtilizableValue("T3ExtbaseDependencyInjection", "injectConfigurationManagerType");
/**
 * Returns the tagged value of the tag "injectConfigurationManagerType"
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDependencyInjectionInjectConfigurationManagerType(MElement this) :
	getTaggedValue("T3ExtbaseDependencyInjection", "injectConfigurationManagerType");

/**
 * Sets the tagged value of an existing the tag "injectConfigurationManagerType"
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDependencyInjectionInjectConfigurationManagerType(MElement this, String value) :
	setTaggedValue("T3ExtbaseDependencyInjection", "injectConfigurationManagerType", value);

/*
- - "injectObjectManagerType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "injectObjectManagerType" 
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDependencyInjectionInjectObjectManagerType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDependencyInjection", "injectObjectManagerType", value);

/**
 * Checks if an element has a tagged value of the tag "injectObjectManagerType" 
 * for the stereotype "T3ExtbaseDependencyInjection" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDependencyInjectionUtilizableInjectObjectManagerType(MElement this) :
	hasUtilizableValue("T3ExtbaseDependencyInjection", "injectObjectManagerType");
/**
 * Returns the tagged value of the tag "injectObjectManagerType"
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDependencyInjectionInjectObjectManagerType(MElement this) :
	getTaggedValue("T3ExtbaseDependencyInjection", "injectObjectManagerType");

/**
 * Sets the tagged value of an existing the tag "injectObjectManagerType"
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDependencyInjectionInjectObjectManagerType(MElement this, String value) :
	setTaggedValue("T3ExtbaseDependencyInjection", "injectObjectManagerType", value);

/*
- - "injectPersistenceManagerType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "injectPersistenceManagerType" 
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDependencyInjectionInjectPersistenceManagerType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDependencyInjection", "injectPersistenceManagerType", value);

/**
 * Checks if an element has a tagged value of the tag "injectPersistenceManagerType" 
 * for the stereotype "T3ExtbaseDependencyInjection" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDependencyInjectionUtilizableInjectPersistenceManagerType(MElement this) :
	hasUtilizableValue("T3ExtbaseDependencyInjection", "injectPersistenceManagerType");
/**
 * Returns the tagged value of the tag "injectPersistenceManagerType"
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDependencyInjectionInjectPersistenceManagerType(MElement this) :
	getTaggedValue("T3ExtbaseDependencyInjection", "injectPersistenceManagerType");

/**
 * Sets the tagged value of an existing the tag "injectPersistenceManagerType"
 * for the stereotype "T3ExtbaseDependencyInjection".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDependencyInjectionInjectPersistenceManagerType(MElement this, String value) :
	setTaggedValue("T3ExtbaseDependencyInjection", "injectPersistenceManagerType", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseDomainObject"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseDomainObject".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseDomainObjectStereotype(MElement this) :
	hasStereotype("T3ExtbaseDomainObject");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDomainObjectTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseDomainObject", tag, value);
	
/*
- - "allowTableOnStandardPages" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "allowTableOnStandardPages" 
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDomainObjectAllowTableOnStandardPages(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDomainObject", "allowTableOnStandardPages", value);

/**
 * Checks if an element has a tagged value of the tag "allowTableOnStandardPages" 
 * for the stereotype "T3ExtbaseDomainObject" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDomainObjectUtilizableAllowTableOnStandardPages(MElement this) :
	hasUtilizableValue("T3ExtbaseDomainObject", "allowTableOnStandardPages");
/**
 * Returns the tagged value of the tag "allowTableOnStandardPages"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDomainObjectAllowTableOnStandardPages(MElement this) :
	getTaggedValue("T3ExtbaseDomainObject", "allowTableOnStandardPages");

/**
 * Sets the tagged value of an existing the tag "allowTableOnStandardPages"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDomainObjectAllowTableOnStandardPages(MElement this, String value) :
	setTaggedValue("T3ExtbaseDomainObject", "allowTableOnStandardPages", value);

/*
- - "createEndtimeField" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createEndtimeField" 
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDomainObjectCreateEndtimeField(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDomainObject", "createEndtimeField", value);

/**
 * Checks if an element has a tagged value of the tag "createEndtimeField" 
 * for the stereotype "T3ExtbaseDomainObject" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDomainObjectUtilizableCreateEndtimeField(MElement this) :
	hasUtilizableValue("T3ExtbaseDomainObject", "createEndtimeField");
/**
 * Returns the tagged value of the tag "createEndtimeField"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDomainObjectCreateEndtimeField(MElement this) :
	getTaggedValue("T3ExtbaseDomainObject", "createEndtimeField");

/**
 * Sets the tagged value of an existing the tag "createEndtimeField"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDomainObjectCreateEndtimeField(MElement this, String value) :
	setTaggedValue("T3ExtbaseDomainObject", "createEndtimeField", value);

/*
- - "createHiddenField" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createHiddenField" 
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDomainObjectCreateHiddenField(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDomainObject", "createHiddenField", value);

/**
 * Checks if an element has a tagged value of the tag "createHiddenField" 
 * for the stereotype "T3ExtbaseDomainObject" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDomainObjectUtilizableCreateHiddenField(MElement this) :
	hasUtilizableValue("T3ExtbaseDomainObject", "createHiddenField");
/**
 * Returns the tagged value of the tag "createHiddenField"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDomainObjectCreateHiddenField(MElement this) :
	getTaggedValue("T3ExtbaseDomainObject", "createHiddenField");

/**
 * Sets the tagged value of an existing the tag "createHiddenField"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDomainObjectCreateHiddenField(MElement this, String value) :
	setTaggedValue("T3ExtbaseDomainObject", "createHiddenField", value);

/*
- - "createLocalizationFields" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createLocalizationFields" 
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDomainObjectCreateLocalizationFields(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDomainObject", "createLocalizationFields", value);

/**
 * Checks if an element has a tagged value of the tag "createLocalizationFields" 
 * for the stereotype "T3ExtbaseDomainObject" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDomainObjectUtilizableCreateLocalizationFields(MElement this) :
	hasUtilizableValue("T3ExtbaseDomainObject", "createLocalizationFields");
/**
 * Returns the tagged value of the tag "createLocalizationFields"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDomainObjectCreateLocalizationFields(MElement this) :
	getTaggedValue("T3ExtbaseDomainObject", "createLocalizationFields");

/**
 * Sets the tagged value of an existing the tag "createLocalizationFields"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDomainObjectCreateLocalizationFields(MElement this, String value) :
	setTaggedValue("T3ExtbaseDomainObject", "createLocalizationFields", value);

/*
- - "createSortingField" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createSortingField" 
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDomainObjectCreateSortingField(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDomainObject", "createSortingField", value);

/**
 * Checks if an element has a tagged value of the tag "createSortingField" 
 * for the stereotype "T3ExtbaseDomainObject" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDomainObjectUtilizableCreateSortingField(MElement this) :
	hasUtilizableValue("T3ExtbaseDomainObject", "createSortingField");
/**
 * Returns the tagged value of the tag "createSortingField"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDomainObjectCreateSortingField(MElement this) :
	getTaggedValue("T3ExtbaseDomainObject", "createSortingField");

/**
 * Sets the tagged value of an existing the tag "createSortingField"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDomainObjectCreateSortingField(MElement this, String value) :
	setTaggedValue("T3ExtbaseDomainObject", "createSortingField", value);

/*
- - "createStarttimeField" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createStarttimeField" 
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDomainObjectCreateStarttimeField(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDomainObject", "createStarttimeField", value);

/**
 * Checks if an element has a tagged value of the tag "createStarttimeField" 
 * for the stereotype "T3ExtbaseDomainObject" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDomainObjectUtilizableCreateStarttimeField(MElement this) :
	hasUtilizableValue("T3ExtbaseDomainObject", "createStarttimeField");
/**
 * Returns the tagged value of the tag "createStarttimeField"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDomainObjectCreateStarttimeField(MElement this) :
	getTaggedValue("T3ExtbaseDomainObject", "createStarttimeField");

/**
 * Sets the tagged value of an existing the tag "createStarttimeField"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDomainObjectCreateStarttimeField(MElement this, String value) :
	setTaggedValue("T3ExtbaseDomainObject", "createStarttimeField", value);

/*
- - "createValidator" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createValidator" 
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDomainObjectCreateValidator(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDomainObject", "createValidator", value);

/**
 * Checks if an element has a tagged value of the tag "createValidator" 
 * for the stereotype "T3ExtbaseDomainObject" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDomainObjectUtilizableCreateValidator(MElement this) :
	hasUtilizableValue("T3ExtbaseDomainObject", "createValidator");
/**
 * Returns the tagged value of the tag "createValidator"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDomainObjectCreateValidator(MElement this) :
	getTaggedValue("T3ExtbaseDomainObject", "createValidator");

/**
 * Sets the tagged value of an existing the tag "createValidator"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDomainObjectCreateValidator(MElement this, String value) :
	setTaggedValue("T3ExtbaseDomainObject", "createValidator", value);

/*
- - "createVersioningFields" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createVersioningFields" 
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseDomainObjectCreateVersioningFields(MElement this, String value) :
	hasTaggedValue("T3ExtbaseDomainObject", "createVersioningFields", value);

/**
 * Checks if an element has a tagged value of the tag "createVersioningFields" 
 * for the stereotype "T3ExtbaseDomainObject" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseDomainObjectUtilizableCreateVersioningFields(MElement this) :
	hasUtilizableValue("T3ExtbaseDomainObject", "createVersioningFields");
/**
 * Returns the tagged value of the tag "createVersioningFields"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseDomainObjectCreateVersioningFields(MElement this) :
	getTaggedValue("T3ExtbaseDomainObject", "createVersioningFields");

/**
 * Sets the tagged value of an existing the tag "createVersioningFields"
 * for the stereotype "T3ExtbaseDomainObject".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseDomainObjectCreateVersioningFields(MElement this, String value) :
	setTaggedValue("T3ExtbaseDomainObject", "createVersioningFields", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseDontValidate"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseDontValidate".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseDontValidateStereotype(MElement this) :
	hasStereotype("T3ExtbaseDontValidate");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseDontVerifyRequestHash"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseDontVerifyRequestHash".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseDontVerifyRequestHashStereotype(MElement this) :
	hasStereotype("T3ExtbaseDontVerifyRequestHash");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseEmailAddressValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseEmailAddressValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseEmailAddressValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseEmailAddressValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseEntity"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseEntity".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseEntityStereotype(MElement this) :
	hasStereotype("T3ExtbaseEntity");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseEntityTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseEntity", tag, value);
	
/*
- - "createController" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createController" 
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseEntityCreateController(MElement this, String value) :
	hasTaggedValue("T3ExtbaseEntity", "createController", value);

/**
 * Checks if an element has a tagged value of the tag "createController" 
 * for the stereotype "T3ExtbaseEntity" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseEntityUtilizableCreateController(MElement this) :
	hasUtilizableValue("T3ExtbaseEntity", "createController");
/**
 * Returns the tagged value of the tag "createController"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseEntityCreateController(MElement this) :
	getTaggedValue("T3ExtbaseEntity", "createController");

/**
 * Sets the tagged value of an existing the tag "createController"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseEntityCreateController(MElement this, String value) :
	setTaggedValue("T3ExtbaseEntity", "createController", value);

/*
- - "createPlugin" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createPlugin" 
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseEntityCreatePlugin(MElement this, String value) :
	hasTaggedValue("T3ExtbaseEntity", "createPlugin", value);

/**
 * Checks if an element has a tagged value of the tag "createPlugin" 
 * for the stereotype "T3ExtbaseEntity" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseEntityUtilizableCreatePlugin(MElement this) :
	hasUtilizableValue("T3ExtbaseEntity", "createPlugin");
/**
 * Returns the tagged value of the tag "createPlugin"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseEntityCreatePlugin(MElement this) :
	getTaggedValue("T3ExtbaseEntity", "createPlugin");

/**
 * Sets the tagged value of an existing the tag "createPlugin"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseEntityCreatePlugin(MElement this, String value) :
	setTaggedValue("T3ExtbaseEntity", "createPlugin", value);

/*
- - "createRepository" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createRepository" 
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseEntityCreateRepository(MElement this, String value) :
	hasTaggedValue("T3ExtbaseEntity", "createRepository", value);

/**
 * Checks if an element has a tagged value of the tag "createRepository" 
 * for the stereotype "T3ExtbaseEntity" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseEntityUtilizableCreateRepository(MElement this) :
	hasUtilizableValue("T3ExtbaseEntity", "createRepository");
/**
 * Returns the tagged value of the tag "createRepository"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseEntityCreateRepository(MElement this) :
	getTaggedValue("T3ExtbaseEntity", "createRepository");

/**
 * Sets the tagged value of an existing the tag "createRepository"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseEntityCreateRepository(MElement this, String value) :
	setTaggedValue("T3ExtbaseEntity", "createRepository", value);

/*
- - "entityType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "entityType" 
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseEntityEntityType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseEntity", "entityType", value);

/**
 * Checks if an element has a tagged value of the tag "entityType" 
 * for the stereotype "T3ExtbaseEntity" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseEntityUtilizableEntityType(MElement this) :
	hasUtilizableValue("T3ExtbaseEntity", "entityType");
/**
 * Returns the tagged value of the tag "entityType"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseEntityEntityType(MElement this) :
	getTaggedValue("T3ExtbaseEntity", "entityType");

/**
 * Sets the tagged value of an existing the tag "entityType"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseEntityEntityType(MElement this, String value) :
	setTaggedValue("T3ExtbaseEntity", "entityType", value);

/*
- - "isAggregateRoot" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "isAggregateRoot" 
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseEntityIsAggregateRoot(MElement this, String value) :
	hasTaggedValue("T3ExtbaseEntity", "isAggregateRoot", value);

/**
 * Checks if an element has a tagged value of the tag "isAggregateRoot" 
 * for the stereotype "T3ExtbaseEntity" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseEntityUtilizableIsAggregateRoot(MElement this) :
	hasUtilizableValue("T3ExtbaseEntity", "isAggregateRoot");
/**
 * Returns the tagged value of the tag "isAggregateRoot"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseEntityIsAggregateRoot(MElement this) :
	getTaggedValue("T3ExtbaseEntity", "isAggregateRoot");

/**
 * Sets the tagged value of an existing the tag "isAggregateRoot"
 * for the stereotype "T3ExtbaseEntity".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseEntityIsAggregateRoot(MElement this, String value) :
	setTaggedValue("T3ExtbaseEntity", "isAggregateRoot", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseEntityPackage"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseEntityPackage".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseEntityPackageStereotype(MElement this) :
	hasStereotype("T3ExtbaseEntityPackage");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseFloatValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseFloatValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseFloatValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseFloatValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseGenericObjectValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseGenericObjectValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseGenericObjectValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseGenericObjectValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseInheritance"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseInheritance".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseInheritanceStereotype(MElement this) :
	hasStereotype("T3ExtbaseInheritance");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseInheritance".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseInheritanceTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseInheritance", tag, value);
	
/*
- - "inheritanceType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "inheritanceType" 
 * for the stereotype "T3ExtbaseInheritance".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseInheritanceInheritanceType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseInheritance", "inheritanceType", value);

/**
 * Checks if an element has a tagged value of the tag "inheritanceType" 
 * for the stereotype "T3ExtbaseInheritance" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseInheritanceUtilizableInheritanceType(MElement this) :
	hasUtilizableValue("T3ExtbaseInheritance", "inheritanceType");
/**
 * Returns the tagged value of the tag "inheritanceType"
 * for the stereotype "T3ExtbaseInheritance".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseInheritanceInheritanceType(MElement this) :
	getTaggedValue("T3ExtbaseInheritance", "inheritanceType");

/**
 * Sets the tagged value of an existing the tag "inheritanceType"
 * for the stereotype "T3ExtbaseInheritance".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseInheritanceInheritanceType(MElement this, String value) :
	setTaggedValue("T3ExtbaseInheritance", "inheritanceType", value);

/*
- - "typeColumn" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "typeColumn" 
 * for the stereotype "T3ExtbaseInheritance".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseInheritanceTypeColumn(MElement this, String value) :
	hasTaggedValue("T3ExtbaseInheritance", "typeColumn", value);

/**
 * Checks if an element has a tagged value of the tag "typeColumn" 
 * for the stereotype "T3ExtbaseInheritance" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseInheritanceUtilizableTypeColumn(MElement this) :
	hasUtilizableValue("T3ExtbaseInheritance", "typeColumn");
/**
 * Returns the tagged value of the tag "typeColumn"
 * for the stereotype "T3ExtbaseInheritance".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseInheritanceTypeColumn(MElement this) :
	getTaggedValue("T3ExtbaseInheritance", "typeColumn");

/**
 * Sets the tagged value of an existing the tag "typeColumn"
 * for the stereotype "T3ExtbaseInheritance".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseInheritanceTypeColumn(MElement this, String value) :
	setTaggedValue("T3ExtbaseInheritance", "typeColumn", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseIntegerValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseIntegerValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseIntegerValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseIntegerValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseModelPackage"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseModelPackage".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseModelPackageStereotype(MElement this) :
	hasStereotype("T3ExtbaseModelPackage");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseModule"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseModule".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseModuleStereotype(MElement this) :
	hasStereotype("T3ExtbaseModule");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseModuleTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseModule", tag, value);
	
/*
- - "access" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "access" 
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseModuleAccess(MElement this, String value) :
	hasTaggedValue("T3ExtbaseModule", "access", value);

/**
 * Checks if an element has a tagged value of the tag "access" 
 * for the stereotype "T3ExtbaseModule" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseModuleUtilizableAccess(MElement this) :
	hasUtilizableValue("T3ExtbaseModule", "access");
/**
 * Returns a list of the tagged values of the tag "access"
 * for the stereotype "T3ExtbaseModule".
 *
 * @return	value of the tagged value
 */
List[String] getT3ExtbaseModuleAccess(MElement this) : 
	getTaggedListValue("T3ExtbaseModule", "access");

/**
 * Sets the tagged value of an existing the tag "access"
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseModuleAccess(MElement this, String value) :
	setTaggedValue("T3ExtbaseModule", "access", value);

/*
- - "configurationAdditions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "configurationAdditions" 
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseModuleConfigurationAdditions(MElement this, String value) :
	hasTaggedValue("T3ExtbaseModule", "configurationAdditions", value);

/**
 * Checks if an element has a tagged value of the tag "configurationAdditions" 
 * for the stereotype "T3ExtbaseModule" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseModuleUtilizableConfigurationAdditions(MElement this) :
	hasUtilizableValue("T3ExtbaseModule", "configurationAdditions");
/**
 * Returns a list of the tagged values of the tag "configurationAdditions"
 * for the stereotype "T3ExtbaseModule".
 *
 * @return	value of the tagged value
 */
List[String] getT3ExtbaseModuleConfigurationAdditions(MElement this) : 
	getTaggedListValue("T3ExtbaseModule", "configurationAdditions");

/**
 * Sets the tagged value of an existing the tag "configurationAdditions"
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseModuleConfigurationAdditions(MElement this, String value) :
	setTaggedValue("T3ExtbaseModule", "configurationAdditions", value);

/*
- - "mainModule" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "mainModule" 
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseModuleMainModule(MElement this, String value) :
	hasTaggedValue("T3ExtbaseModule", "mainModule", value);

/**
 * Checks if an element has a tagged value of the tag "mainModule" 
 * for the stereotype "T3ExtbaseModule" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseModuleUtilizableMainModule(MElement this) :
	hasUtilizableValue("T3ExtbaseModule", "mainModule");
/**
 * Returns the tagged value of the tag "mainModule"
 * for the stereotype "T3ExtbaseModule".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseModuleMainModule(MElement this) :
	getTaggedValue("T3ExtbaseModule", "mainModule");

/**
 * Sets the tagged value of an existing the tag "mainModule"
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseModuleMainModule(MElement this, String value) :
	setTaggedValue("T3ExtbaseModule", "mainModule", value);

/*
- - "position" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "position" 
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseModulePosition(MElement this, String value) :
	hasTaggedValue("T3ExtbaseModule", "position", value);

/**
 * Checks if an element has a tagged value of the tag "position" 
 * for the stereotype "T3ExtbaseModule" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseModuleUtilizablePosition(MElement this) :
	hasUtilizableValue("T3ExtbaseModule", "position");
/**
 * Returns the tagged value of the tag "position"
 * for the stereotype "T3ExtbaseModule".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseModulePosition(MElement this) :
	getTaggedValue("T3ExtbaseModule", "position");

/**
 * Sets the tagged value of an existing the tag "position"
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseModulePosition(MElement this, String value) :
	setTaggedValue("T3ExtbaseModule", "position", value);

/*
- - "uncachedActions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "uncachedActions" 
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseModuleUncachedActions(MElement this, String value) :
	hasTaggedValue("T3ExtbaseModule", "uncachedActions", value);

/**
 * Checks if an element has a tagged value of the tag "uncachedActions" 
 * for the stereotype "T3ExtbaseModule" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseModuleUtilizableUncachedActions(MElement this) :
	hasUtilizableValue("T3ExtbaseModule", "uncachedActions");
/**
 * Returns a list of the tagged values of the tag "uncachedActions"
 * for the stereotype "T3ExtbaseModule".
 *
 * @return	value of the tagged value
 */
List[String] getT3ExtbaseModuleUncachedActions(MElement this) : 
	getTaggedListValue("T3ExtbaseModule", "uncachedActions");

/**
 * Sets the tagged value of an existing the tag "uncachedActions"
 * for the stereotype "T3ExtbaseModule".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseModuleUncachedActions(MElement this, String value) :
	setTaggedValue("T3ExtbaseModule", "uncachedActions", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseNoTestCase"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseNoTestCase".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseNoTestCaseStereotype(MElement this) :
	hasStereotype("T3ExtbaseNoTestCase");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseNotEmptyValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseNotEmptyValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseNotEmptyValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseNotEmptyValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseNumberRangeValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseNumberRangeValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseNumberRangeValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseNumberRangeValidator");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseNumberRangeValidator".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseNumberRangeValidatorTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseNumberRangeValidator", tag, value);
	
/*
- - "endRange" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "endRange" 
 * for the stereotype "T3ExtbaseNumberRangeValidator".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseNumberRangeValidatorEndRange(MElement this, String value) :
	hasTaggedValue("T3ExtbaseNumberRangeValidator", "endRange", value);

/**
 * Checks if an element has a tagged value of the tag "endRange" 
 * for the stereotype "T3ExtbaseNumberRangeValidator" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseNumberRangeValidatorUtilizableEndRange(MElement this) :
	hasUtilizableValue("T3ExtbaseNumberRangeValidator", "endRange");
/**
 * Returns the tagged value of the tag "endRange"
 * for the stereotype "T3ExtbaseNumberRangeValidator".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseNumberRangeValidatorEndRange(MElement this) :
	getTaggedValue("T3ExtbaseNumberRangeValidator", "endRange");

/**
 * Sets the tagged value of an existing the tag "endRange"
 * for the stereotype "T3ExtbaseNumberRangeValidator".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseNumberRangeValidatorEndRange(MElement this, String value) :
	setTaggedValue("T3ExtbaseNumberRangeValidator", "endRange", value);

/*
- - "startRange" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "startRange" 
 * for the stereotype "T3ExtbaseNumberRangeValidator".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseNumberRangeValidatorStartRange(MElement this, String value) :
	hasTaggedValue("T3ExtbaseNumberRangeValidator", "startRange", value);

/**
 * Checks if an element has a tagged value of the tag "startRange" 
 * for the stereotype "T3ExtbaseNumberRangeValidator" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseNumberRangeValidatorUtilizableStartRange(MElement this) :
	hasUtilizableValue("T3ExtbaseNumberRangeValidator", "startRange");
/**
 * Returns the tagged value of the tag "startRange"
 * for the stereotype "T3ExtbaseNumberRangeValidator".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseNumberRangeValidatorStartRange(MElement this) :
	getTaggedValue("T3ExtbaseNumberRangeValidator", "startRange");

/**
 * Sets the tagged value of an existing the tag "startRange"
 * for the stereotype "T3ExtbaseNumberRangeValidator".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseNumberRangeValidatorStartRange(MElement this, String value) :
	setTaggedValue("T3ExtbaseNumberRangeValidator", "startRange", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseNumberValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseNumberValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseNumberValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseNumberValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbasePlugin"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbasePlugin".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbasePluginStereotype(MElement this) :
	hasStereotype("T3ExtbasePlugin");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbasePluginTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbasePlugin", tag, value);
	
/*
- - "cachedActions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "cachedActions" 
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbasePluginCachedActions(MElement this, String value) :
	hasTaggedValue("T3ExtbasePlugin", "cachedActions", value);

/**
 * Checks if an element has a tagged value of the tag "cachedActions" 
 * for the stereotype "T3ExtbasePlugin" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbasePluginUtilizableCachedActions(MElement this) :
	hasUtilizableValue("T3ExtbasePlugin", "cachedActions");
/**
 * Returns a list of the tagged values of the tag "cachedActions"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @return	value of the tagged value
 */
List[String] getT3ExtbasePluginCachedActions(MElement this) : 
	getTaggedListValue("T3ExtbasePlugin", "cachedActions");

/**
 * Sets the tagged value of an existing the tag "cachedActions"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbasePluginCachedActions(MElement this, String value) :
	setTaggedValue("T3ExtbasePlugin", "cachedActions", value);

/*
- - "iconFileNamePath" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "iconFileNamePath" 
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbasePluginIconFileNamePath(MElement this, String value) :
	hasTaggedValue("T3ExtbasePlugin", "iconFileNamePath", value);

/**
 * Checks if an element has a tagged value of the tag "iconFileNamePath" 
 * for the stereotype "T3ExtbasePlugin" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbasePluginUtilizableIconFileNamePath(MElement this) :
	hasUtilizableValue("T3ExtbasePlugin", "iconFileNamePath");
/**
 * Returns the tagged value of the tag "iconFileNamePath"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @return	value of the tagged value
 */
String getT3ExtbasePluginIconFileNamePath(MElement this) :
	getTaggedValue("T3ExtbasePlugin", "iconFileNamePath");

/**
 * Sets the tagged value of an existing the tag "iconFileNamePath"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbasePluginIconFileNamePath(MElement this, String value) :
	setTaggedValue("T3ExtbasePlugin", "iconFileNamePath", value);

/*
- - "pluginType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "pluginType" 
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbasePluginPluginType(MElement this, String value) :
	hasTaggedValue("T3ExtbasePlugin", "pluginType", value);

/**
 * Checks if an element has a tagged value of the tag "pluginType" 
 * for the stereotype "T3ExtbasePlugin" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbasePluginUtilizablePluginType(MElement this) :
	hasUtilizableValue("T3ExtbasePlugin", "pluginType");
/**
 * Returns the tagged value of the tag "pluginType"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @return	value of the tagged value
 */
String getT3ExtbasePluginPluginType(MElement this) :
	getTaggedValue("T3ExtbasePlugin", "pluginType");

/**
 * Sets the tagged value of an existing the tag "pluginType"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbasePluginPluginType(MElement this, String value) :
	setTaggedValue("T3ExtbasePlugin", "pluginType", value);

/*
- - "title" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "title" 
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbasePluginTitle(MElement this, String value) :
	hasTaggedValue("T3ExtbasePlugin", "title", value);

/**
 * Checks if an element has a tagged value of the tag "title" 
 * for the stereotype "T3ExtbasePlugin" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbasePluginUtilizableTitle(MElement this) :
	hasUtilizableValue("T3ExtbasePlugin", "title");
/**
 * Returns the tagged value of the tag "title"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @return	value of the tagged value
 */
String getT3ExtbasePluginTitle(MElement this) :
	getTaggedValue("T3ExtbasePlugin", "title");

/**
 * Sets the tagged value of an existing the tag "title"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbasePluginTitle(MElement this, String value) :
	setTaggedValue("T3ExtbasePlugin", "title", value);

/*
- - "uncachedActions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "uncachedActions" 
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbasePluginUncachedActions(MElement this, String value) :
	hasTaggedValue("T3ExtbasePlugin", "uncachedActions", value);

/**
 * Checks if an element has a tagged value of the tag "uncachedActions" 
 * for the stereotype "T3ExtbasePlugin" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbasePluginUtilizableUncachedActions(MElement this) :
	hasUtilizableValue("T3ExtbasePlugin", "uncachedActions");
/**
 * Returns a list of the tagged values of the tag "uncachedActions"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @return	value of the tagged value
 */
List[String] getT3ExtbasePluginUncachedActions(MElement this) : 
	getTaggedListValue("T3ExtbasePlugin", "uncachedActions");

/**
 * Sets the tagged value of an existing the tag "uncachedActions"
 * for the stereotype "T3ExtbasePlugin".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbasePluginUncachedActions(MElement this, String value) :
	setTaggedValue("T3ExtbasePlugin", "uncachedActions", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseRegularExpressionValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseRegularExpressionValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseRegularExpressionValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseRegularExpressionValidator");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseRegularExpressionValidator".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseRegularExpressionValidatorTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseRegularExpressionValidator", tag, value);
	
/*
- - "regularExpression" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "regularExpression" 
 * for the stereotype "T3ExtbaseRegularExpressionValidator".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseRegularExpressionValidatorRegularExpression(MElement this, String value) :
	hasTaggedValue("T3ExtbaseRegularExpressionValidator", "regularExpression", value);

/**
 * Checks if an element has a tagged value of the tag "regularExpression" 
 * for the stereotype "T3ExtbaseRegularExpressionValidator" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseRegularExpressionValidatorUtilizableRegularExpression(MElement this) :
	hasUtilizableValue("T3ExtbaseRegularExpressionValidator", "regularExpression");
/**
 * Returns the tagged value of the tag "regularExpression"
 * for the stereotype "T3ExtbaseRegularExpressionValidator".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseRegularExpressionValidatorRegularExpression(MElement this) :
	getTaggedValue("T3ExtbaseRegularExpressionValidator", "regularExpression");

/**
 * Sets the tagged value of an existing the tag "regularExpression"
 * for the stereotype "T3ExtbaseRegularExpressionValidator".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseRegularExpressionValidatorRegularExpression(MElement this, String value) :
	setTaggedValue("T3ExtbaseRegularExpressionValidator", "regularExpression", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseRepository"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseRepository".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseRepositoryStereotype(MElement this) :
	hasStereotype("T3ExtbaseRepository");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseRepository".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseRepositoryTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseRepository", tag, value);
	
/*
- - "createInitializeObject" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createInitializeObject" 
 * for the stereotype "T3ExtbaseRepository".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseRepositoryCreateInitializeObject(MElement this, String value) :
	hasTaggedValue("T3ExtbaseRepository", "createInitializeObject", value);

/**
 * Checks if an element has a tagged value of the tag "createInitializeObject" 
 * for the stereotype "T3ExtbaseRepository" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseRepositoryUtilizableCreateInitializeObject(MElement this) :
	hasUtilizableValue("T3ExtbaseRepository", "createInitializeObject");
/**
 * Returns the tagged value of the tag "createInitializeObject"
 * for the stereotype "T3ExtbaseRepository".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseRepositoryCreateInitializeObject(MElement this) :
	getTaggedValue("T3ExtbaseRepository", "createInitializeObject");

/**
 * Sets the tagged value of an existing the tag "createInitializeObject"
 * for the stereotype "T3ExtbaseRepository".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseRepositoryCreateInitializeObject(MElement this, String value) :
	setTaggedValue("T3ExtbaseRepository", "createInitializeObject", value);

/*
- - "repositoryType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "repositoryType" 
 * for the stereotype "T3ExtbaseRepository".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseRepositoryRepositoryType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseRepository", "repositoryType", value);

/**
 * Checks if an element has a tagged value of the tag "repositoryType" 
 * for the stereotype "T3ExtbaseRepository" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseRepositoryUtilizableRepositoryType(MElement this) :
	hasUtilizableValue("T3ExtbaseRepository", "repositoryType");
/**
 * Returns the tagged value of the tag "repositoryType"
 * for the stereotype "T3ExtbaseRepository".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseRepositoryRepositoryType(MElement this) :
	getTaggedValue("T3ExtbaseRepository", "repositoryType");

/**
 * Sets the tagged value of an existing the tag "repositoryType"
 * for the stereotype "T3ExtbaseRepository".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseRepositoryRepositoryType(MElement this, String value) :
	setTaggedValue("T3ExtbaseRepository", "repositoryType", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseRepositoryPackage"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseRepositoryPackage".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseRepositoryPackageStereotype(MElement this) :
	hasStereotype("T3ExtbaseRepositoryPackage");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseService"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseService".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseServiceStereotype(MElement this) :
	hasStereotype("T3ExtbaseService");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseServicePackage"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseServicePackage".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseServicePackageStereotype(MElement this) :
	hasStereotype("T3ExtbaseServicePackage");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseStringLengthValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseStringLengthValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseStringLengthValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseStringLengthValidator");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseStringLengthValidator".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseStringLengthValidatorTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseStringLengthValidator", tag, value);
	
/*
- - "maximum" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "maximum" 
 * for the stereotype "T3ExtbaseStringLengthValidator".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseStringLengthValidatorMaximum(MElement this, String value) :
	hasTaggedValue("T3ExtbaseStringLengthValidator", "maximum", value);

/**
 * Checks if an element has a tagged value of the tag "maximum" 
 * for the stereotype "T3ExtbaseStringLengthValidator" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseStringLengthValidatorUtilizableMaximum(MElement this) :
	hasUtilizableValue("T3ExtbaseStringLengthValidator", "maximum");
/**
 * Returns the tagged value of the tag "maximum"
 * for the stereotype "T3ExtbaseStringLengthValidator".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseStringLengthValidatorMaximum(MElement this) :
	getTaggedValue("T3ExtbaseStringLengthValidator", "maximum");

/**
 * Sets the tagged value of an existing the tag "maximum"
 * for the stereotype "T3ExtbaseStringLengthValidator".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseStringLengthValidatorMaximum(MElement this, String value) :
	setTaggedValue("T3ExtbaseStringLengthValidator", "maximum", value);

/*
- - "minimum" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "minimum" 
 * for the stereotype "T3ExtbaseStringLengthValidator".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseStringLengthValidatorMinimum(MElement this, String value) :
	hasTaggedValue("T3ExtbaseStringLengthValidator", "minimum", value);

/**
 * Checks if an element has a tagged value of the tag "minimum" 
 * for the stereotype "T3ExtbaseStringLengthValidator" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseStringLengthValidatorUtilizableMinimum(MElement this) :
	hasUtilizableValue("T3ExtbaseStringLengthValidator", "minimum");
/**
 * Returns the tagged value of the tag "minimum"
 * for the stereotype "T3ExtbaseStringLengthValidator".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseStringLengthValidatorMinimum(MElement this) :
	getTaggedValue("T3ExtbaseStringLengthValidator", "minimum");

/**
 * Sets the tagged value of an existing the tag "minimum"
 * for the stereotype "T3ExtbaseStringLengthValidator".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseStringLengthValidatorMinimum(MElement this, String value) :
	setTaggedValue("T3ExtbaseStringLengthValidator", "minimum", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseStringValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseStringValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseStringValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseStringValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseTableMapping"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseTableMapping".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseTableMappingStereotype(MElement this) :
	hasStereotype("T3ExtbaseTableMapping");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseTableMapping".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseTableMappingTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseTableMapping", tag, value);
	
/*
- - "tableName" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "tableName" 
 * for the stereotype "T3ExtbaseTableMapping".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseTableMappingTableName(MElement this, String value) :
	hasTaggedValue("T3ExtbaseTableMapping", "tableName", value);

/**
 * Checks if an element has a tagged value of the tag "tableName" 
 * for the stereotype "T3ExtbaseTableMapping" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseTableMappingUtilizableTableName(MElement this) :
	hasUtilizableValue("T3ExtbaseTableMapping", "tableName");
/**
 * Returns the tagged value of the tag "tableName"
 * for the stereotype "T3ExtbaseTableMapping".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseTableMappingTableName(MElement this) :
	getTaggedValue("T3ExtbaseTableMapping", "tableName");

/**
 * Sets the tagged value of an existing the tag "tableName"
 * for the stereotype "T3ExtbaseTableMapping".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseTableMappingTableName(MElement this, String value) :
	setTaggedValue("T3ExtbaseTableMapping", "tableName", value);

/*
- - "typeColumn" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "typeColumn" 
 * for the stereotype "T3ExtbaseTableMapping".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseTableMappingTypeColumn(MElement this, String value) :
	hasTaggedValue("T3ExtbaseTableMapping", "typeColumn", value);

/**
 * Checks if an element has a tagged value of the tag "typeColumn" 
 * for the stereotype "T3ExtbaseTableMapping" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseTableMappingUtilizableTypeColumn(MElement this) :
	hasUtilizableValue("T3ExtbaseTableMapping", "typeColumn");
/**
 * Returns the tagged value of the tag "typeColumn"
 * for the stereotype "T3ExtbaseTableMapping".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseTableMappingTypeColumn(MElement this) :
	getTaggedValue("T3ExtbaseTableMapping", "typeColumn");

/**
 * Sets the tagged value of an existing the tag "typeColumn"
 * for the stereotype "T3ExtbaseTableMapping".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseTableMappingTypeColumn(MElement this, String value) :
	setTaggedValue("T3ExtbaseTableMapping", "typeColumn", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseTest"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseTest".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseTestStereotype(MElement this) :
	hasStereotype("T3ExtbaseTest");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseTest".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseTestTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseTest", tag, value);
	
/*
- - "createSetUp" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createSetUp" 
 * for the stereotype "T3ExtbaseTest".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseTestCreateSetUp(MElement this, String value) :
	hasTaggedValue("T3ExtbaseTest", "createSetUp", value);

/**
 * Checks if an element has a tagged value of the tag "createSetUp" 
 * for the stereotype "T3ExtbaseTest" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseTestUtilizableCreateSetUp(MElement this) :
	hasUtilizableValue("T3ExtbaseTest", "createSetUp");
/**
 * Returns the tagged value of the tag "createSetUp"
 * for the stereotype "T3ExtbaseTest".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseTestCreateSetUp(MElement this) :
	getTaggedValue("T3ExtbaseTest", "createSetUp");

/**
 * Sets the tagged value of an existing the tag "createSetUp"
 * for the stereotype "T3ExtbaseTest".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseTestCreateSetUp(MElement this, String value) :
	setTaggedValue("T3ExtbaseTest", "createSetUp", value);

/*
- - "createTearDown" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "createTearDown" 
 * for the stereotype "T3ExtbaseTest".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseTestCreateTearDown(MElement this, String value) :
	hasTaggedValue("T3ExtbaseTest", "createTearDown", value);

/**
 * Checks if an element has a tagged value of the tag "createTearDown" 
 * for the stereotype "T3ExtbaseTest" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseTestUtilizableCreateTearDown(MElement this) :
	hasUtilizableValue("T3ExtbaseTest", "createTearDown");
/**
 * Returns the tagged value of the tag "createTearDown"
 * for the stereotype "T3ExtbaseTest".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseTestCreateTearDown(MElement this) :
	getTaggedValue("T3ExtbaseTest", "createTearDown");

/**
 * Sets the tagged value of an existing the tag "createTearDown"
 * for the stereotype "T3ExtbaseTest".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseTestCreateTearDown(MElement this, String value) :
	setTaggedValue("T3ExtbaseTest", "createTearDown", value);

/*
- - "testType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "testType" 
 * for the stereotype "T3ExtbaseTest".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseTestTestType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseTest", "testType", value);

/**
 * Checks if an element has a tagged value of the tag "testType" 
 * for the stereotype "T3ExtbaseTest" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseTestUtilizableTestType(MElement this) :
	hasUtilizableValue("T3ExtbaseTest", "testType");
/**
 * Returns the tagged value of the tag "testType"
 * for the stereotype "T3ExtbaseTest".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseTestTestType(MElement this) :
	getTaggedValue("T3ExtbaseTest", "testType");

/**
 * Sets the tagged value of an existing the tag "testType"
 * for the stereotype "T3ExtbaseTest".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseTestTestType(MElement this, String value) :
	setTaggedValue("T3ExtbaseTest", "testType", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseTestCase"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseTestCase".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseTestCaseStereotype(MElement this) :
	hasStereotype("T3ExtbaseTestCase");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseTestPackage"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseTestPackage".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseTestPackageStereotype(MElement this) :
	hasStereotype("T3ExtbaseTestPackage");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseTextValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseTextValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseTextValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseTextValidator");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseValidator"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseValidator".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseValidatorStereotype(MElement this) :
	hasStereotype("T3ExtbaseValidator");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseValidator".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseValidatorTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseValidator", tag, value);
	
/*
- - "validatorType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "validatorType" 
 * for the stereotype "T3ExtbaseValidator".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseValidatorValidatorType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseValidator", "validatorType", value);

/**
 * Checks if an element has a tagged value of the tag "validatorType" 
 * for the stereotype "T3ExtbaseValidator" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseValidatorUtilizableValidatorType(MElement this) :
	hasUtilizableValue("T3ExtbaseValidator", "validatorType");
/**
 * Returns the tagged value of the tag "validatorType"
 * for the stereotype "T3ExtbaseValidator".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseValidatorValidatorType(MElement this) :
	getTaggedValue("T3ExtbaseValidator", "validatorType");

/**
 * Sets the tagged value of an existing the tag "validatorType"
 * for the stereotype "T3ExtbaseValidator".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseValidatorValidatorType(MElement this, String value) :
	setTaggedValue("T3ExtbaseValidator", "validatorType", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseValidatorPackage"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseValidatorPackage".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseValidatorPackageStereotype(MElement this) :
	hasStereotype("T3ExtbaseValidatorPackage");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseValueObject"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseValueObject".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseValueObjectStereotype(MElement this) :
	hasStereotype("T3ExtbaseValueObject");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "T3ExtbaseValueObject".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseValueObjectTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("T3ExtbaseValueObject", tag, value);
	
/*
- - "valueObjectType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "valueObjectType" 
 * for the stereotype "T3ExtbaseValueObject".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasT3ExtbaseValueObjectValueObjectType(MElement this, String value) :
	hasTaggedValue("T3ExtbaseValueObject", "valueObjectType", value);

/**
 * Checks if an element has a tagged value of the tag "valueObjectType" 
 * for the stereotype "T3ExtbaseValueObject" and 
 * the value is utilizable (not empty or null).
 *
 * @return	true if the element has a tag and is utilizable, otherwise false
 */
boolean hasT3ExtbaseValueObjectUtilizableValueObjectType(MElement this) :
	hasUtilizableValue("T3ExtbaseValueObject", "valueObjectType");
/**
 * Returns the tagged value of the tag "valueObjectType"
 * for the stereotype "T3ExtbaseValueObject".
 *
 * @return	value of the tagged value
 */
String getT3ExtbaseValueObjectValueObjectType(MElement this) :
	getTaggedValue("T3ExtbaseValueObject", "valueObjectType");

/**
 * Sets the tagged value of an existing the tag "valueObjectType"
 * for the stereotype "T3ExtbaseValueObject".
 *
 * @param	value	the new value of a tagged value
 */
Void setT3ExtbaseValueObjectValueObjectType(MElement this, String value) :
	setTaggedValue("T3ExtbaseValueObject", "valueObjectType", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtbaseValueObjectPackage"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtbaseValueObjectPackage".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtbaseValueObjectPackageStereotype(MElement this) :
	hasStereotype("T3ExtbaseValueObjectPackage");

