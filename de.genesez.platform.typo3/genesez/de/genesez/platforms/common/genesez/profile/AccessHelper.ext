/**
 * Simplifies access to "genesez" profile 
 * and makes working with the profile more easier. 
 *  
 */

// based on genesez meta model
import gcore;

// use common access helper scripts
extension de::genesez::platforms::common::AccessHelper;

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "external"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "external".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasExternalStereotype(MElement this) :
	hasStereotype("external");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "di"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "di".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasDiStereotype(MElement this) :
	hasStereotype("di");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "di".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasDiTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("di", tag, value);
	
/*
- - "setter" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "setter" 
 * for the stereotype "di".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasDiSetter(MElement this, String value) :
	hasTaggedValue("di", "setter", value);

/**
 * Returns the tagged value of the tag "setter"
 * for the stereotype "di".
 *
 * @return	value of the tagged value
 */
String getDiSetter(MElement this) :
	getTaggedValue("di", "setter");

/**
 * Sets the tagged value of an existing the tag "setter"
 * for the stereotype "di".
 *
 * @param	value	the new value of a tagged value
 */
Void setDiSetter(MElement this, String value) :
	setTaggedValue("di", "setter", value);

/*
- - "constructor" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "constructor" 
 * for the stereotype "di".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasDiConstructor(MElement this, String value) :
	hasTaggedValue("di", "constructor", value);

/**
 * Returns the tagged value of the tag "constructor"
 * for the stereotype "di".
 *
 * @return	value of the tagged value
 */
String getDiConstructor(MElement this) :
	getTaggedValue("di", "constructor");

/**
 * Sets the tagged value of an existing the tag "constructor"
 * for the stereotype "di".
 *
 * @param	value	the new value of a tagged value
 */
Void setDiConstructor(MElement this, String value) :
	setTaggedValue("di", "constructor", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "accessor"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "accessor".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasAccessorStereotype(MElement this) :
	hasStereotype("accessor");

/**
 * Checks if an element has a tagged value of a tag 
 * for the stereotype "accessor".
 *
 * @param	tag			the name of a tagged value
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasAccessorTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue("accessor", tag, value);
	
/*
- - "getter" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "getter" 
 * for the stereotype "accessor".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasAccessorGetter(MElement this, String value) :
	hasTaggedValue("accessor", "getter", value);

/**
 * Returns the tagged value of the tag "getter"
 * for the stereotype "accessor".
 *
 * @return	value of the tagged value
 */
String getAccessorGetter(MElement this) :
	getTaggedValue("accessor", "getter");

/**
 * Sets the tagged value of an existing the tag "getter"
 * for the stereotype "accessor".
 *
 * @param	value	the new value of a tagged value
 */
Void setAccessorGetter(MElement this, String value) :
	setTaggedValue("accessor", "getter", value);

/*
- - "setter" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a tagged value of the tag "setter" 
 * for the stereotype "accessor".
 *
 * @param	value		the value of a tagged value
 * @return	true if the element has a tag with the given value, otherwise false
 */
boolean hasAccessorSetter(MElement this, String value) :
	hasTaggedValue("accessor", "setter", value);

/**
 * Returns the tagged value of the tag "setter"
 * for the stereotype "accessor".
 *
 * @return	value of the tagged value
 */
String getAccessorSetter(MElement this) :
	getTaggedValue("accessor", "setter");

/**
 * Sets the tagged value of an existing the tag "setter"
 * for the stereotype "accessor".
 *
 * @param	value	the new value of a tagged value
 */
Void setAccessorSetter(MElement this, String value) :
	setTaggedValue("accessor", "setter", value);

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "exclude"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "exclude".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasExcludeStereotype(MElement this) :
	hasStereotype("exclude");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "volatile"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "volatile".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasVolatileStereotype(MElement this) :
	hasStereotype("volatile");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "primitive"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "primitive".
 * 
 * @return	true if the element has the stereotype, otherwise false
 */
boolean hasPrimitiveStereotype(MElement this) :
	hasStereotype("primitive");

