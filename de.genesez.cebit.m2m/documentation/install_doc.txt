AVIDwireless aufbauen und mit dem PC verbinden
==============================================
==============================================

1. 	Jumpstart-Board an die parallele Schnittstelle des AVIDwireless anschließen

2. 	Stromversorgung zum AVIDwireless durch das beiliegende Netzteil herstellen

3. 	AVIDwireless per USB mit dem PC verbinden


Programm compilieren und auf das AVIDwireless übertragen
========================================================
========================================================

KOMPILIEREN:
------------

1.	Ausführen der ANT-Buildfile "build.xml" mit den Optionen "clean, jar"
   	--> Generierung der JAR-Datei mit dem Namen "Cebit.jar"


ÜBERTRAGUNG:
------------

1. 	Öffnen des externen Programms SnapDev (Snap Development Console)

2. 	Port zum AVIDwireless öffnen (F6 oder File > Open Port oder 1. Icon)
   	--> Hauptfenster wird weiß und folgende Programmausschrift ist zu lesen:
   
		SNAP rev A/B/C/D restarting @ Wed Feb 20 19:30:33 2008
		Reading /system/ish.ini:     [OK]
		Reading /system/snap.ini:    [OK]
		Serial server:               [OK]
		JVM startup:                 [OK]
		Setting host name:           [OK]
		TCP/IP startup:              [OK]
		FTP server:                  [OK]
		Telnet server:               [OK]
		Setting timezone to:         CST
		Reading /system/startup.ini: [OK]
		
		Starting applications listed in /system/startup.ini 
		To prevent this from loading, press the 'I' key during boot-up. (Interrupt) 
		  
		/root > 

	--> Sollte diese Ausschrift nicht kommen, dann Befehl "reboot" eingeben und das
		AVIDwireless neu starten.
	--> Gegebenenfalls die Setting (COM-Port und Baudrate überprüfen)
		--> COM-Port:	Abhängig vom PC
		--> Baudrate:	57600

3.	Übertragung der JAR-Datei mit dem Befehl "recv"
	-->	Es öffnet sich ein Datei-Dialog in dem die "Cebit.jar" auszuwählen ist.
	-->	Es beginnt die Dateiübertragung, die nach ca. 5 Sekunden ist.

	
Programm ausführen
==================
==================

1. 	Öffnen des externen Programms SnapDev (Snap Development Console)

2. 	Port zum AVIDwireless öffnen (F6 oder File > Open Port oder 1. Icon)
   	--> Hauptfenster wird weiß und folgende Programmausschrift ist zu lesen:
   
		SNAP rev A/B/C/D restarting @ Wed Feb 20 19:30:33 2008
		Reading /system/ish.ini:     [OK]
		Reading /system/snap.ini:    [OK]
		Serial server:               [OK]
		JVM startup:                 [OK]
		Setting host name:           [OK]
		TCP/IP startup:              [OK]
		FTP server:                  [OK]
		Telnet server:               [OK]
		Setting timezone to:         CST
		Reading /system/startup.ini: [OK]
		
		Starting applications listed in /system/startup.ini 
		To prevent this from loading, press the 'I' key during boot-up. (Interrupt) 
		  
		/root > 

	--> Sollte diese Ausschrift nicht kommen, dann Befehl "reboot" eingeben und das
		AVIDwireless neu starten.
	--> Gegebenenfalls die Setting (COM-Port und Baudrate überprüfen)
		--> COM-Port:	Abhängig vom PC
		--> Baudrate:	57600

3.	Ausführen des Programms mit dem Befehl "java -r -w -classpath Cebit.jar M2MApp"
	-->	Programm startet und es kommen folgene Ausschriften:

		/root > java -r -w -classpath Cebit.jar M2MApp
		M2MApp loading ...
		Starting M2MApp M2MApp Ver 1.8.3.0(23.1.13.30.22) 10/11/07 9:49a using configuration file M2MApp.ini at 2/20/2008 1:43:11PM
		Copyright AVIDWireless 2004-2007 Dallas, Texas USA.  All Rights Reserved. www.avidwireless.com
		
		L:Starting AVIDirector-M2M Application framework M2MApp Ver 1.8.3.0(23.1.13.30.22) 10/11/07 9:49a
		L:AVIDirectorApp.start-Configuration file M2MApp.ini read, continuing initialization
		D:Configuration.getItem%s-Read M2MXML.VERSION = 1.1
		D:AVIDirectorApp.start-Loading M2MXML_Parser...
		D:AVIDirectorApp.start-Loading CommandProcessor...
		D:AVIDirectorApp.start-Loading M2M_IODevices...
		D:Configuration.getItem%s-Read TTL1.M2MXML_ADDRESS = TTL1.AIN
		D:AVIDirectorApp.start-Loading M2M_IODevice #1 Port=TTL1 M2MXMLaddress=TTL1.AIN[deviceName=TTL1] 
		D:Configuration.getItem%s-Read TTL1.IOTYPE = AIN
		D:AVIDirectorApp.start-Loading M2M_IODevice #2 TTL2
		D:Configuration.getItem%s-Read TTL2.IOTYPE = AOUT
		D:AVIDirectorApp.start-Loading M2M_IODevice #3 TTL3
		D:Configuration.getItem%s-Read TTL3.IOTYPE = DOUT
		D:AVIDirectorApp.start-Loading M2M_IODevice #4 TTL4
		D:Configuration.getItem%s-Read TTL4.IOTYPE = DOUT
		D:AVIDirectorApp.start-Loading M2M_IODevice #5 TTL5
		D:AVIDirectorApp.start-Loading M2M_IODevice #6 TTL6
		D:AVIDirectorApp.start-Loading M2M_IODevice #7 TTL7
		D:AVIDirectorApp.start-Loading M2M_IODevice #8 TTL8
		D:AVIDirectorApp.start-Loading M2M_IODevice #9 TTL9
		D:AVIDirectorApp.start-Loading M2M_IODevice #10 TTL10
		D:AVIDirectorApp.start-Loading M2M_IODevice #11 TTL11
		D:AVIDirectorApp.start-Loading M2M_IODevice #12 TTL12
		D:AVIDirectorApp.start-Loading M2M_IODevice #13 TTL13
		D:AVIDirectorApp.start-Loading M2M_IODevice #14 TTL14
		D:AVIDirectorApp.start-Loading M2M_IODevice #15 TTL15
		D:AVIDirectorApp.start-Loading M2M_IODevice #16 TTL16
		D:AVIDirectorApp.start-Loading M2M_IODevice #17 TTL17
		D:AVIDirectorApp.start-Loading M2M_IODevice #18 TTL18
		L:AVIDirectorApp.start-Loaded 18 M2M_IO_Devices
		D:AVIDirectorApp.start-Loading Classfiles...
		D:Configuration.getItem%s-Read M2MLET.CLASSNAME = de.genesez.app.CebitApplication
		D:AVIDirectorApp.start-Trying to load class de.genesez.app.CebitApplication
		D:AVIDirectorApp.start-Loaded M2Mlet class M2MLET de.genesez.app.CebitApplication
		L:AVIDirectorApp.start-M2MLET set as Default M2Mlet
		L:AVIDirectorApp.start-Loaded 1 M2Mlets, 0 IO_Devices, 0 Radio Communicators
		L:AVIDirectorApp.start-M2Mlet de.genesez.app.CebitApplication loaded successfully, now initializing
		L:Cebit pot application-Starting
		D:AVIDirectorApp.getM2M_IODevice-portName=TTL1
		L:Setting up TTL1.AIN
		D:AVIDirectorApp.getM2M_IODevice-portName=TTL2
		L:Setting up TTL2
		D:AVIDirectorApp.getM2M_IODevice-portName=TTL3
		L:Setting up TTL3
		D:AVIDirectorApp.getM2M_IODevice-portName=TTL4
		L:Setting up TTL4
		L:Cebit pot application-Running
		L:Cebit pot application-Started
		D:Cebit pot application-Thread started
		D:AVIDirectorApp.start-Waiting for thread to start
		D:WatchDogTimer.registerWatchDogMonitoredItem-Monitoring Cebit pot application every 120000 milliseconds
		L:AVIDirectorApp.start-Started successfully
		D:WatchDogTimer.updatePeriod-Updating period=240000
		D:AVIDirectorApp.run-Watchdog timer set to 240000 ms
		D:WatchDogTimer.registerWatchDogMonitoredItem-Monitoring AVIDirectorApp every 240000 milliseconds
		L:AVIDirectorApp.run-M2MApp is running
		D:M2MApp.main-AVIDirectorApp thread is running

4.	Programm kann beendet werden, durch die Taste "q"

