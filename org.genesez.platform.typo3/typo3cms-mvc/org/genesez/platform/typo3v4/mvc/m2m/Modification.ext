/**
 * 	Modifications of the model before generation of source code.  
 *  
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de>
 * @date	2011-05-19
 */

//	based on genesez meta model
import gcore;

// use TYPO3 profile scripts
extension org::genesez::platform::typo3v4::profile::Profile;

// use TYPO3 naming context and common naming scripts
extension org::genesez::metamodel::core::util::mapping::NameMapping;
extension org::genesez::platform::typo3v4::mvc::convention::NamingContext;

// use TYPO3 MVC access helper scripts which overrides
// common access helper scripts if script name is equals
extension org::genesez::platform::typo3v4::mvc::util::AccessHelper;
extension org::genesez::metamodel::core::util::AccessElement;

extension org::genesez::metamodel::core::util::NavigateElement;

// use common create template scripts
extension org::genesez::metamodel::core::util::CreateElement;


/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	MPackage (MModel)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

Void modelModifications(MModel this) :
	setInternalNamingContext( namingContextGeneral() ) ->
	packageModifications();


Void packageModifications(MPackage this) :
	// perform model modifications for all nested packages
	nestedPackage.packageModifications() ->
	
	// perform model modifications for all classes
	classifier.typeSelect(MClass).classModifications();


/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	MClass
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

Void classModifications(MClass this) :
	switch {
		case isEntity() || isValueObject() :
			domainObjectModifications()
		default :
			Void
	};	


/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	TYPO3 MVC Extbase Model modifications
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Model modifications for an TYPO3 MVC Extbase entity or value object.
 */
Void domainObjectModifications(MClass this) :
	property.changeDomainObjectPropertyVisibility() ->
	property.typeSelect(MAttribute).changeDomainObjectAttributeMultiplicity();
	
	
	
Void changeDomainObjectPropertyVisibility(MProperty this) :
	setVisibility("protected");


Void changeDomainObjectAttributeMultiplicity(MAttribute this) :
	!isClassifier(type) && multiplicity.isMultiValued()
		? (	stereotype.add(
				let s = createStereotype( navModel(), prT3TCxMinitems(), prT3TCxMinitems() ) :
					createTaggedValue(this, createTag( s, prT3TCxMinitemsMinitems(), "Integer" ), multiplicity.lowerBound.toString() ) ->
					s
				) ->
			stereotype.add(
				let s = createStereotype( navModel(), prT3TCxMaxitems(), prT3TCxMaxitems() ) :
					createTaggedValue(this, createTag( s, prT3TCxMaxitemsMaxitems(), "Integer" ), multiplicity.upperBound.toString() ) ->
					s
			) ->
			multiplicity.hasFixedLowerBoundMultiplicity() && multiplicity.lowerBound == 1 ? multiplicity.setLowerBound(1) : multiplicity.setLowerBound(0) ->
			multiplicity.setUpperBound(1)
		)
		: Void;
		
	
