«REM»
	(c) GeneSEZ Research Group
	All rights reserved.
	
	Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
«ENDREM»

«IMPORT gcore»


«REM»
	Entry point for generating classes.
	
	@author	Nico Herbig <nico.herbig@fh-zwickau.de>
«ENDREM»

«REM» TYPO3 CMS specific Extbase + Fluid access element scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3::cms::mvc::util::AccessElement»

«REM» use TYPO3 CMS specific Extbase + Fluid naming convention scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3::cms::mvc::util::NamingConvention»


«REM» use GeneSEZ PHP access element scripts «ENDREM»
«EXTENSION org::genesez::platform::php::util::AccessHelper»


«REM» use GeneSEZ common access element scripts «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::AccessElement»

«REM» use GeneSEZ common type mapping scripts «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::mapping::TypeMapping»


«REM»
	-- Public Templates (THE FOLLOWING TEMPLATES CAN BE INVOKED FROM OUTSIDE OF THIS FILE) ------------------
«ENDREM»

«REM»
	Processes all constructors.
«ENDREM»
«DEFINE Constructor FOR MClass -»
	«EXPAND Constructor FOREACH uniqueOperations().select( o | o.isConstructor() ) -»
«ENDDEFINE»


«REM»
	Processes all destructors.
«ENDREM»
«DEFINE Destructor FOR MClass -»
	«EXPAND Destructor FOREACH uniqueOperations().select( o | o.isDestructor() ) -»
«ENDDEFINE»


«REM»
	Processes all operations to declare.
	Order: realized operations from interfaces first
«ENDREM»
«DEFINE Declaration FOR MClass -»
	«EXPAND Declaration FOREACH uniqueOperations().select( o | !o.isConstructor() && !o.isDestructor() && o.abstract && realization.typeSelect(MInterface).operation.name.contains(o.name) ) -»
	«EXPAND Declaration FOREACH uniqueOperations().select( o | !o.isConstructor() && !o.isDestructor() && o.abstract && !realization.typeSelect(MInterface).operation.name.contains(o.name) ) -»
«ENDDEFINE»


«REM»
	Processes operation declarations for an interface.
«ENDREM»
«DEFINE Declaration FOR MInterface -»
	«EXPAND Declaration FOREACH uniqueOperations() -»
«ENDDEFINE»


«REM»
	Processes all operations to implement.
	Order: realized operations from interfaces first
«ENDREM»
«DEFINE Implementation FOR MClass -»
	«EXPAND Implementation FOREACH uniqueOperations().select( o | !o.isConstructor() && !o.isDestructor() && !o.abstract && realization.typeSelect(MInterface).operation.name.contains(o.name) ) -»
	«EXPAND Implementation FOREACH uniqueOperations().select( o | !o.isConstructor() && !o.isDestructor() && !o.abstract && !realization.typeSelect(MInterface).operation.name.contains(o.name) ) -»
«ENDDEFINE»


«REM»
	-- Private Templates (THE FOLLOWING TEMPLATES SHOULD NOT BE INVOKED FROM OUTSIDE OF THIS FILE) ----------
«ENDREM»

«REM»
	Generates a constructor which cannot has a return value.
«ENDREM»
«DEFINE Constructor FOR MOperation -»
	«EXPAND Comment::Constructor -»
	«visibility -» function __construct(«EXPAND Params -») {
		«EXPAND OwnCode("php.constructor.own.code." + xmiGuid) -»
	}
	
«ENDDEFINE»


«REM»
	Generates a destructor which cannot have parameters or a return value.
«ENDREM»
«DEFINE Destructor FOR MOperation -»
	«EXPAND Comment::Destructor -»
	«visibility -» function __destruct() {
		«EXPAND OwnCode("php.destructor.own.code." + xmiGuid) -»
	}
	
«ENDDEFINE»


«REM»
	Generates an operation declaration.
«ENDREM»
«DEFINE Declaration FOR MOperation -»
	«EXPAND Comment::Operation -»
	«EXPAND Modifier -» function «asGeneralName() -»(«EXPAND Params -»);
	
«ENDDEFINE»


«REM»
	Generates an operation implementation.
«ENDREM»
«DEFINE Implementation FOR MOperation -»
	«EXPAND Comment::Operation -»
	«EXPAND Modifier -» function «asGeneralName() -»(«EXPAND Params -») {
		«EXPAND OwnCode("php.operation.own.code." + xmiGuid) -»
	}
	
«ENDDEFINE»


«REM»
	Generates the visibility and the modifiers static, final + abstract for an operation.
	Abstract only if the class is also abstract.
«ENDREM»
«DEFINE Modifier FOR MOperation -»
	«visibility -»«IF static -» static«ENDIF -»«IF final -» final«ENDIF -»«IF abstract && classifier.abstract -» abstract«ENDIF -»
«ENDDEFINE»


«REM»
	Generates the parameters of an operation.
«ENDREM»
«DEFINE Params FOR MOperation -»
«FOREACH parameter AS p SEPARATOR ", " -»
«EXPAND TypeHint FOR p -»«EXPAND Parameter FOR p -»
«ENDFOREACH -»
«ENDDEFINE»


«REM»
	Generates type hints for special single valued types or multi valued types.
«ENDREM»
«DEFINE TypeHint FOR MParameter -»
«IF multiplicity.isSingleValued() -»
«IF !isPhpPrimitiveType( type.asGeneralName() ) -»«type.asGeneralName() -» «ENDIF -»
«ELSE -»«mapCollection() -» «ENDIF -»
«ENDDEFINE»


«REM»
	Generates the parameter name.
«ENDREM»
«DEFINE Parameter FOR MParameter -»
$«asGeneralName() -»«EXPAND DefaultValue -»
«ENDDEFINE»


«REM»
	Generates the default value.
«ENDREM»
«DEFINE DefaultValue FOR MParameter -»
«IF hasDefaultValue() -» = «defaultvalue -»«ENDIF -»
«ENDDEFINE»


«REM»
	Generates the protected region of an operation.
«ENDREM»
«DEFINE OwnCode(String id) FOR MOperation -»
«IF isConstructor() -»
		«EXPAND OwnCodeConstructor(id) -»
«ELSEIF isDestructor() -»
		«EXPAND OwnCodeDestructor(id) -»
«REM»«ELSEIF emHasStereotypeAssignment("http://www.genesez.org/TYPO3/TYPO3v4/controller/showAction") -»
		«EXPAND OwnCodeImplementationControllerShowAction -»
«ELSEIF emHasStereotypeAssignment("http://www.genesez.org/TYPO3/TYPO3v4/controller/listAction") -»
		«EXPAND OwnCodeImplementationControllerListAction -»
«ELSEIF emHasStereotypeAssignment("http://www.genesez.org/TYPO3/TYPO3v4/controller/newAction") -»
		«EXPAND OwnCodeImplementationControllerNewAction -»
«ELSEIF emHasStereotypeAssignment("http://www.genesez.org/TYPO3/TYPO3v4/controller/createAction") -»
		«EXPAND OwnCodeImplementationControllerCreateAction -»
«ELSEIF emHasStereotypeAssignment("http://www.genesez.org/TYPO3/TYPO3v4/controller/editAction") -»
		«EXPAND OwnCodeImplementationControllerEditAction -»
«ELSEIF emHasStereotypeAssignment("http://www.genesez.org/TYPO3/TYPO3v4/controller/updateAction") -»
		«EXPAND OwnCodeImplementationControllerUpdateAction -»
«ELSEIF emHasStereotypeAssignment("http://www.genesez.org/TYPO3/TYPO3v4/controller/deleteAction") -»
		«EXPAND OwnCodeImplementationControllerDeleteAction -»«ENDREM»
«ELSE -»
		«EXPAND OwnCodeOperation(id) -»
«ENDIF -»
«ENDDEFINE»


«DEFINE OwnCodeConstructor(String id) FOR MOperation -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: implementation of destructor for class «classifier.asShortGeneralName()»
		throw new Exception('The implementation of the destructor for class «classifier.asShortGeneralName() -» is missing!');
		«ENDPROTECT»
«ENDDEFINE»


«DEFINE OwnCodeDestructor(String id) FOR MOperation -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: implementation of destructor for class «classifier.asShortGeneralName()»
		throw new Exception('The implementation of the destructor for class «classifier.asShortGeneralName() -» is missing!');
		«ENDPROTECT»
«ENDDEFINE»


«DEFINE OwnCodeOperation(String id) FOR MOperation -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: implementation of method «asGeneralName() -» for class «classifier.asShortGeneralName()»
		throw new Exception('The implementation of the method «asGeneralName() -» for class «classifier.asShortGeneralName() -» is missing!');
		«ENDPROTECT»
«ENDDEFINE»

«REM»
«DEFINE OwnCodeImplementationControllerShowAction FOR MOperation -»
		$this->view->assign('«parameter.first().name() -»', $«parameter.first().name() -»);
«ENDDEFINE»
		
		
«DEFINE OwnCodeImplementationControllerListAction FOR MOperation -»
		$list = $this->«classifier.property.typeSelect(MAttribute).first().name() -»->findAll();
		$this->view->assign('list', $list);
«ENDDEFINE»


«DEFINE OwnCodeImplementationControllerNewAction FOR MOperation -»
		$this->view->assign('«parameter.first().name() -»', $«parameter.first().name() -»);
«ENDDEFINE»


«DEFINE OwnCodeImplementationControllerCreateAction FOR MOperation -»
		$this->«classifier.property.typeSelect(MAttribute).first().name() -»->add($«parameter.first().name() -»);
		$this->flashMessageContainer->add('Your new domain object was created.');
		$this->redirect('list');
«ENDDEFINE»


«DEFINE OwnCodeImplementationControllerEditAction FOR MOperation -»
		$this->view->assign('«parameter.first().name() -»', $«parameter.first().name() -»);
«ENDDEFINE»


«DEFINE OwnCodeImplementationControllerUpdateAction FOR MOperation -»
		$this->«classifier.property.typeSelect(MAttribute).first().name() -»->update($«parameter.first().name() -»);
		$this->flashMessageContainer->add('Your existing domain object was updated.');
		$this->redirect('list');
«ENDDEFINE»


«DEFINE OwnCodeImplementationControllerDeleteAction FOR MOperation -»
		$this->«classifier.property.typeSelect(MAttribute).first().name() -»->remove($«parameter.first().name() -»);
		$this->flashMessageContainer->add('Your existing domain object was removed.');
		$this->redirect('list');
«ENDDEFINE»
«ENDREM»