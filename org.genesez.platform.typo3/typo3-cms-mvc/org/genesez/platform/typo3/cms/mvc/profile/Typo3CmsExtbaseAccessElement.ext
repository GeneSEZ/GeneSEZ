/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */

import gcore;


/**
 * Simplifies access to "GeneSEZ TYPO3 CMS Extbase Profile" profile and makes working with them more easier.
 * 
 * HINT: All scripts for extension mechanism are available under the prefix 'em'.
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer) 
 */

// use profile scripts
extension org::genesez::platform::typo3::cms::mvc::profile::Typo3CmsExtbaseProfile;

// use GeneSEZ common extension mechanism scripts
extension org::genesez::metamodel::core::util::AccessElement;


// -- Xtend scripts for Stereotype "AbstractController" --

/**
 * Checks if an element is annotated with the stereotype "AbstractController".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasAbstractControllerStereotype(MElement this) :
	emHasStereotypeAssignment( prAbstractController() );


// -- Xtend scripts for Stereotype "AbstractEntity" --

/**
 * Checks if an element is annotated with the stereotype "AbstractEntity".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasAbstractEntityStereotype(MElement this) :
	emHasStereotypeAssignment( prAbstractEntity() );


// -- Xtend scripts for Stereotype "AbstractValidator" --

/**
 * Checks if an element is annotated with the stereotype "AbstractValidator".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasAbstractValidatorStereotype(MElement this) :
	emHasStereotypeAssignment( prAbstractValidator() );


// -- Xtend scripts for Stereotype "AbstractValueObject" --

/**
 * Checks if an element is annotated with the stereotype "AbstractValueObject".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasAbstractValueObjectStereotype(MElement this) :
	emHasStereotypeAssignment( prAbstractValueObject() );


// -- Xtend scripts for Stereotype "ActionController" --

/**
 * Checks if an element is annotated with the stereotype "ActionController".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasActionControllerStereotype(MElement this) :
	emHasStereotypeAssignment( prActionController() );


// -- Xtend scripts for Stereotype "BackendUser" --

/**
 * Checks if an element is annotated with the stereotype "BackendUser".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasBackendUserStereotype(MElement this) :
	emHasStereotypeAssignment( prBackendUser() );


// -- Xtend scripts for Stereotype "BackendUserGroup" --

/**
 * Checks if an element is annotated with the stereotype "BackendUserGroup".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasBackendUserGroupStereotype(MElement this) :
	emHasStereotypeAssignment( prBackendUserGroup() );


// -- Xtend scripts for Stereotype "BackendUserGroupRepository" --

/**
 * Checks if an element is annotated with the stereotype "BackendUserGroupRepository".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasBackendUserGroupRepositoryStereotype(MElement this) :
	emHasStereotypeAssignment( prBackendUserGroupRepository() );


// -- Xtend scripts for Stereotype "BackendUserRepository" --

/**
 * Checks if an element is annotated with the stereotype "BackendUserRepository".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasBackendUserRepositoryStereotype(MElement this) :
	emHasStereotypeAssignment( prBackendUserRepository() );


// -- Xtend scripts for Stereotype "Category" --

/**
 * Checks if an element is annotated with the stereotype "Category".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasCategoryStereotype(MElement this) :
	emHasStereotypeAssignment( prCategory() );


// -- Xtend scripts for Stereotype "CategoryRepository" --

/**
 * Checks if an element is annotated with the stereotype "CategoryRepository".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasCategoryRepositoryStereotype(MElement this) :
	emHasStereotypeAssignment( prCategoryRepository() );


// -- Xtend scripts for Stereotype "CommandController" --

/**
 * Checks if an element is annotated with the stereotype "CommandController".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasCommandControllerStereotype(MElement this) :
	emHasStereotypeAssignment( prCommandController() );


// -- Xtend scripts for Stereotype "ExtbaseController" --

/**
 * Checks if an element is annotated with the stereotype "ExtbaseController".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExtbaseControllerStereotype(MElement this) :
	emHasStereotypeAssignment( prExtbaseController() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "ExtbaseController".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseControllerTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prExtbaseController(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "ExtbaseController".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseControllerTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prExtbaseController(), tag, valueReference );


// -- "createErrorAction" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createErrorAction" of the stereotype "ExtbaseController" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseControllerUtilizableCreateErrorAction(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseController(), prExtbaseControllerCreateErrorAction() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createErrorAction" of the stereotype "ExtbaseController".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseControllerCreateErrorAction(MElement this, String value) :
	emHasTaggedValue( prExtbaseController(), prExtbaseControllerCreateErrorAction(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createErrorAction" of the stereotype "ExtbaseController".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseControllerOwningCreateErrorAction(MElement this) : 
	emOwningTaggedValues( prExtbaseController(), prExtbaseControllerCreateErrorAction() );


/**
 * Returns the value of the single-valued tagged value "createErrorAction"
 * of the stereotype "ExtbaseController".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseControllerCreateErrorAction(MElement this) :
	emGetTaggedValue( prExtbaseController(), prExtbaseControllerCreateErrorAction() );


// -- "createGetErrorFlashMessage" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createGetErrorFlashMessage" of the stereotype "ExtbaseController" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseControllerUtilizableCreateGetErrorFlashMessage(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseController(), prExtbaseControllerCreateGetErrorFlashMessage() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createGetErrorFlashMessage" of the stereotype "ExtbaseController".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseControllerCreateGetErrorFlashMessage(MElement this, String value) :
	emHasTaggedValue( prExtbaseController(), prExtbaseControllerCreateGetErrorFlashMessage(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createGetErrorFlashMessage" of the stereotype "ExtbaseController".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseControllerOwningCreateGetErrorFlashMessage(MElement this) : 
	emOwningTaggedValues( prExtbaseController(), prExtbaseControllerCreateGetErrorFlashMessage() );


/**
 * Returns the value of the single-valued tagged value "createGetErrorFlashMessage"
 * of the stereotype "ExtbaseController".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseControllerCreateGetErrorFlashMessage(MElement this) :
	emGetTaggedValue( prExtbaseController(), prExtbaseControllerCreateGetErrorFlashMessage() );


// -- "createInitializeAction" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createInitializeAction" of the stereotype "ExtbaseController" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseControllerUtilizableCreateInitializeAction(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseController(), prExtbaseControllerCreateInitializeAction() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createInitializeAction" of the stereotype "ExtbaseController".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseControllerCreateInitializeAction(MElement this, String value) :
	emHasTaggedValue( prExtbaseController(), prExtbaseControllerCreateInitializeAction(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createInitializeAction" of the stereotype "ExtbaseController".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseControllerOwningCreateInitializeAction(MElement this) : 
	emOwningTaggedValues( prExtbaseController(), prExtbaseControllerCreateInitializeAction() );


/**
 * Returns the value of the single-valued tagged value "createInitializeAction"
 * of the stereotype "ExtbaseController".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseControllerCreateInitializeAction(MElement this) :
	emGetTaggedValue( prExtbaseController(), prExtbaseControllerCreateInitializeAction() );


// -- Xtend scripts for Stereotype "ExtbaseControllerAction" --

/**
 * Checks if an element is annotated with the stereotype "ExtbaseControllerAction".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExtbaseControllerActionStereotype(MElement this) :
	emHasStereotypeAssignment( prExtbaseControllerAction() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "ExtbaseControllerAction".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseControllerActionTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prExtbaseControllerAction(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "ExtbaseControllerAction".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseControllerActionTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prExtbaseControllerAction(), tag, valueReference );


// -- "createInitializeAction" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createInitializeAction" of the stereotype "ExtbaseControllerAction" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseControllerActionUtilizableCreateInitializeAction(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseControllerAction(), prExtbaseControllerActionCreateInitializeAction() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createInitializeAction" of the stereotype "ExtbaseControllerAction".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseControllerActionCreateInitializeAction(MElement this, String value) :
	emHasTaggedValue( prExtbaseControllerAction(), prExtbaseControllerActionCreateInitializeAction(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createInitializeAction" of the stereotype "ExtbaseControllerAction".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseControllerActionOwningCreateInitializeAction(MElement this) : 
	emOwningTaggedValues( prExtbaseControllerAction(), prExtbaseControllerActionCreateInitializeAction() );


/**
 * Returns the value of the single-valued tagged value "createInitializeAction"
 * of the stereotype "ExtbaseControllerAction".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseControllerActionCreateInitializeAction(MElement this) :
	emGetTaggedValue( prExtbaseControllerAction(), prExtbaseControllerActionCreateInitializeAction() );


// -- Xtend scripts for Stereotype "ExtbaseControllerCommand" --

/**
 * Checks if an element is annotated with the stereotype "ExtbaseControllerCommand".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExtbaseControllerCommandStereotype(MElement this) :
	emHasStereotypeAssignment( prExtbaseControllerCommand() );


// -- Xtend scripts for Stereotype "ExtbaseDomainObject" --

/**
 * Checks if an element is annotated with the stereotype "ExtbaseDomainObject".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExtbaseDomainObjectStereotype(MElement this) :
	emHasStereotypeAssignment( prExtbaseDomainObject() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "ExtbaseDomainObject".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "ExtbaseDomainObject".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prExtbaseDomainObject(), tag, valueReference );


// -- "allowTableOnStandardPages" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "allowTableOnStandardPages" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableAllowTableOnStandardPages(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectAllowTableOnStandardPages() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "allowTableOnStandardPages" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectAllowTableOnStandardPages(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectAllowTableOnStandardPages(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "allowTableOnStandardPages" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningAllowTableOnStandardPages(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectAllowTableOnStandardPages() );


/**
 * Returns the value of the single-valued tagged value "allowTableOnStandardPages"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectAllowTableOnStandardPages(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectAllowTableOnStandardPages() );


// -- "createController" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createController" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateController(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateController() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createController" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateController(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateController(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createController" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateController(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateController() );


/**
 * Returns the value of the single-valued tagged value "createController"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateController(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateController() );


// -- "createEndtimeField" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createEndtimeField" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateEndtimeField(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateEndtimeField() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createEndtimeField" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateEndtimeField(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateEndtimeField(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createEndtimeField" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateEndtimeField(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateEndtimeField() );


/**
 * Returns the value of the single-valued tagged value "createEndtimeField"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateEndtimeField(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateEndtimeField() );


// -- "createFeGroupField" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createFeGroupField" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateFeGroupField(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateFeGroupField() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createFeGroupField" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateFeGroupField(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateFeGroupField(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createFeGroupField" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateFeGroupField(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateFeGroupField() );


/**
 * Returns the value of the single-valued tagged value "createFeGroupField"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateFeGroupField(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateFeGroupField() );


// -- "createHiddenField" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createHiddenField" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateHiddenField(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateHiddenField() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createHiddenField" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateHiddenField(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateHiddenField(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createHiddenField" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateHiddenField(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateHiddenField() );


/**
 * Returns the value of the single-valued tagged value "createHiddenField"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateHiddenField(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateHiddenField() );


// -- "createLocalizationFields" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createLocalizationFields" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateLocalizationFields(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateLocalizationFields() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createLocalizationFields" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateLocalizationFields(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateLocalizationFields(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createLocalizationFields" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateLocalizationFields(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateLocalizationFields() );


/**
 * Returns the value of the single-valued tagged value "createLocalizationFields"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateLocalizationFields(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateLocalizationFields() );


// -- "createPlugin" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createPlugin" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreatePlugin(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreatePlugin() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createPlugin" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreatePlugin(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreatePlugin(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createPlugin" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreatePlugin(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreatePlugin() );


/**
 * Returns the value of the single-valued tagged value "createPlugin"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreatePlugin(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreatePlugin() );


// -- "createRepository" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createRepository" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateRepository(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateRepository() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createRepository" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateRepository(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateRepository(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createRepository" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateRepository(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateRepository() );


/**
 * Returns the value of the single-valued tagged value "createRepository"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateRepository(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateRepository() );


// -- "createSortingField" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createSortingField" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateSortingField(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateSortingField() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createSortingField" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateSortingField(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateSortingField(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createSortingField" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateSortingField(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateSortingField() );


/**
 * Returns the value of the single-valued tagged value "createSortingField"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateSortingField(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateSortingField() );


// -- "createStarttimeField" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createStarttimeField" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateStarttimeField(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateStarttimeField() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createStarttimeField" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateStarttimeField(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateStarttimeField(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createStarttimeField" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateStarttimeField(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateStarttimeField() );


/**
 * Returns the value of the single-valued tagged value "createStarttimeField"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateStarttimeField(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateStarttimeField() );


// -- "createValidator" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createValidator" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateValidator(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateValidator() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createValidator" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateValidator(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateValidator(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createValidator" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateValidator(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateValidator() );


/**
 * Returns the value of the single-valued tagged value "createValidator"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateValidator(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateValidator() );


// -- "createVersioningFields" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createVersioningFields" of the stereotype "ExtbaseDomainObject" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectUtilizableCreateVersioningFields(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateVersioningFields() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createVersioningFields" of the stereotype "ExtbaseDomainObject".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseDomainObjectCreateVersioningFields(MElement this, String value) :
	emHasTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateVersioningFields(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createVersioningFields" of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseDomainObjectOwningCreateVersioningFields(MElement this) : 
	emOwningTaggedValues( prExtbaseDomainObject(), prExtbaseDomainObjectCreateVersioningFields() );


/**
 * Returns the value of the single-valued tagged value "createVersioningFields"
 * of the stereotype "ExtbaseDomainObject".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseDomainObjectCreateVersioningFields(MElement this) :
	emGetTaggedValue( prExtbaseDomainObject(), prExtbaseDomainObjectCreateVersioningFields() );


// -- Xtend scripts for Stereotype "ExtbaseModule" --

/**
 * Checks if an element is annotated with the stereotype "ExtbaseModule".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExtbaseModuleStereotype(MElement this) :
	emHasStereotypeAssignment( prExtbaseModule() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "ExtbaseModule".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseModuleTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prExtbaseModule(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "ExtbaseModule".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseModuleTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prExtbaseModule(), tag, valueReference );


// -- "access" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "access" of the stereotype "ExtbaseModule" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseModuleUtilizableAccess(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseModule(), prExtbaseModuleAccess() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "access" of the stereotype "ExtbaseModule".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseModuleAccess(MElement this, String value) :
	emHasTaggedValue( prExtbaseModule(), prExtbaseModuleAccess(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "access" of the stereotype "ExtbaseModule".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseModuleOwningAccess(MElement this) : 
	emOwningTaggedValues( prExtbaseModule(), prExtbaseModuleAccess() );


/**
 * Returns the list of values of the multi-valued tagged value "access"
 * of the stereotype "ExtbaseModule".
 * 
 * @return	The list of values of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 */
List[String] emGetExtbaseModuleAccess(MElement this) : 
	emAllTaggedValues( prExtbaseModule(), prExtbaseModuleAccess() );


// -- "controllerActions" --
	
/**
 * Checks if an element has a utilizable value reference
 * of the tagged value "controllerActions" of the stereotype "ExtbaseModule" 
 * which is not null.
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseModuleUtilizableControllerActions(MElement this) :
	emHasUtilizableTaggedValueReference( prExtbaseModule(), prExtbaseModuleControllerActions() );


/**
 * Checks if an element is annotated with the specified value reference
 * of the tagged value "controllerActions" of the stereotype "ExtbaseModule".
 *
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseModuleControllerActions(MElement this, MElement valueReference) :
	emHasTaggedValue( prExtbaseModule(), prExtbaseModuleControllerActions(), valueReference );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "controllerActions" of the stereotype "ExtbaseModule".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseModuleOwningControllerActions(MElement this) : 
	emOwningTaggedValues( prExtbaseModule(), prExtbaseModuleControllerActions() );


/**
 * Returns the list of value references of the multi-valued tagged value "controllerActions"
 * of the stereotype "ExtbaseModule".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MOperation] emGetExtbaseModuleControllerActions(MElement this) : 
	emAllTaggedValueReferences( prExtbaseModule(), prExtbaseModuleControllerActions() );


// -- "mainModule" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "mainModule" of the stereotype "ExtbaseModule" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseModuleUtilizableMainModule(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseModule(), prExtbaseModuleMainModule() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "mainModule" of the stereotype "ExtbaseModule".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseModuleMainModule(MElement this, String value) :
	emHasTaggedValue( prExtbaseModule(), prExtbaseModuleMainModule(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "mainModule" of the stereotype "ExtbaseModule".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseModuleOwningMainModule(MElement this) : 
	emOwningTaggedValues( prExtbaseModule(), prExtbaseModuleMainModule() );


/**
 * Returns the value of the single-valued tagged value "mainModule"
 * of the stereotype "ExtbaseModule".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseModuleMainModule(MElement this) :
	emGetTaggedValue( prExtbaseModule(), prExtbaseModuleMainModule() );


// -- "position" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "position" of the stereotype "ExtbaseModule" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbaseModuleUtilizablePosition(MElement this) :
	emHasUtilizableTaggedValue( prExtbaseModule(), prExtbaseModulePosition() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "position" of the stereotype "ExtbaseModule".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbaseModulePosition(MElement this, String value) :
	emHasTaggedValue( prExtbaseModule(), prExtbaseModulePosition(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "position" of the stereotype "ExtbaseModule".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbaseModuleOwningPosition(MElement this) : 
	emOwningTaggedValues( prExtbaseModule(), prExtbaseModulePosition() );


/**
 * Returns the value of the single-valued tagged value "position"
 * of the stereotype "ExtbaseModule".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbaseModulePosition(MElement this) :
	emGetTaggedValue( prExtbaseModule(), prExtbaseModulePosition() );


// -- Xtend scripts for Stereotype "ExtbaseNoControllerAction" --

/**
 * Checks if an element is annotated with the stereotype "ExtbaseNoControllerAction".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExtbaseNoControllerActionStereotype(MElement this) :
	emHasStereotypeAssignment( prExtbaseNoControllerAction() );


// -- Xtend scripts for Stereotype "ExtbasePlugin" --

/**
 * Checks if an element is annotated with the stereotype "ExtbasePlugin".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExtbasePluginStereotype(MElement this) :
	emHasStereotypeAssignment( prExtbasePlugin() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "ExtbasePlugin".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prExtbasePlugin(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "ExtbasePlugin".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prExtbasePlugin(), tag, valueReference );


// -- "controllerActions" --
	
/**
 * Checks if an element has a utilizable value reference
 * of the tagged value "controllerActions" of the stereotype "ExtbasePlugin" 
 * which is not null.
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbasePluginUtilizableControllerActions(MElement this) :
	emHasUtilizableTaggedValueReference( prExtbasePlugin(), prExtbasePluginControllerActions() );


/**
 * Checks if an element is annotated with the specified value reference
 * of the tagged value "controllerActions" of the stereotype "ExtbasePlugin".
 *
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginControllerActions(MElement this, MElement valueReference) :
	emHasTaggedValue( prExtbasePlugin(), prExtbasePluginControllerActions(), valueReference );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "controllerActions" of the stereotype "ExtbasePlugin".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbasePluginOwningControllerActions(MElement this) : 
	emOwningTaggedValues( prExtbasePlugin(), prExtbasePluginControllerActions() );


/**
 * Returns the list of value references of the multi-valued tagged value "controllerActions"
 * of the stereotype "ExtbasePlugin".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MOperation] emGetExtbasePluginControllerActions(MElement this) : 
	emAllTaggedValueReferences( prExtbasePlugin(), prExtbasePluginControllerActions() );


// -- "iconFileNamePath" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "iconFileNamePath" of the stereotype "ExtbasePlugin" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbasePluginUtilizableIconFileNamePath(MElement this) :
	emHasUtilizableTaggedValue( prExtbasePlugin(), prExtbasePluginIconFileNamePath() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "iconFileNamePath" of the stereotype "ExtbasePlugin".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginIconFileNamePath(MElement this, String value) :
	emHasTaggedValue( prExtbasePlugin(), prExtbasePluginIconFileNamePath(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "iconFileNamePath" of the stereotype "ExtbasePlugin".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbasePluginOwningIconFileNamePath(MElement this) : 
	emOwningTaggedValues( prExtbasePlugin(), prExtbasePluginIconFileNamePath() );


/**
 * Returns the value of the single-valued tagged value "iconFileNamePath"
 * of the stereotype "ExtbasePlugin".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbasePluginIconFileNamePath(MElement this) :
	emGetTaggedValue( prExtbasePlugin(), prExtbasePluginIconFileNamePath() );


// -- "pluginConfigurations" --
	
/**
 * Checks if an element has a utilizable value reference
 * of the tagged value "pluginConfigurations" of the stereotype "ExtbasePlugin" 
 * which is not null.
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbasePluginUtilizablePluginConfigurations(MElement this) :
	emHasUtilizableTaggedValueReference( prExtbasePlugin(), prExtbasePluginPluginConfigurations() );


/**
 * Checks if an element is annotated with the specified value reference
 * of the tagged value "pluginConfigurations" of the stereotype "ExtbasePlugin".
 *
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginPluginConfigurations(MElement this, MElement valueReference) :
	emHasTaggedValue( prExtbasePlugin(), prExtbasePluginPluginConfigurations(), valueReference );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "pluginConfigurations" of the stereotype "ExtbasePlugin".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbasePluginOwningPluginConfigurations(MElement this) : 
	emOwningTaggedValues( prExtbasePlugin(), prExtbasePluginPluginConfigurations() );


/**
 * Returns the list of value references of the multi-valued tagged value "pluginConfigurations"
 * of the stereotype "ExtbasePlugin".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MInterface] emGetExtbasePluginPluginConfigurations(MElement this) : 
	emAllTaggedValueReferences( prExtbasePlugin(), prExtbasePluginPluginConfigurations() );


// -- "pluginType" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "pluginType" of the stereotype "ExtbasePlugin" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbasePluginUtilizablePluginType(MElement this) :
	emHasUtilizableTaggedValue( prExtbasePlugin(), prExtbasePluginPluginType() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "pluginType" of the stereotype "ExtbasePlugin".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginPluginType(MElement this, String value) :
	emHasTaggedValue( prExtbasePlugin(), prExtbasePluginPluginType(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "pluginType" of the stereotype "ExtbasePlugin".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbasePluginOwningPluginType(MElement this) : 
	emOwningTaggedValues( prExtbasePlugin(), prExtbasePluginPluginType() );


/**
 * Returns the value of the single-valued tagged value "pluginType"
 * of the stereotype "ExtbasePlugin".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbasePluginPluginType(MElement this) :
	emGetTaggedValue( prExtbasePlugin(), prExtbasePluginPluginType() );


// -- "title" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "title" of the stereotype "ExtbasePlugin" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbasePluginUtilizableTitle(MElement this) :
	emHasUtilizableTaggedValue( prExtbasePlugin(), prExtbasePluginTitle() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "title" of the stereotype "ExtbasePlugin".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginTitle(MElement this, String value) :
	emHasTaggedValue( prExtbasePlugin(), prExtbasePluginTitle(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "title" of the stereotype "ExtbasePlugin".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbasePluginOwningTitle(MElement this) : 
	emOwningTaggedValues( prExtbasePlugin(), prExtbasePluginTitle() );


/**
 * Returns the value of the single-valued tagged value "title"
 * of the stereotype "ExtbasePlugin".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbasePluginTitle(MElement this) :
	emGetTaggedValue( prExtbasePlugin(), prExtbasePluginTitle() );


// -- "uncachedControllerActions" --
	
/**
 * Checks if an element has a utilizable value reference
 * of the tagged value "uncachedControllerActions" of the stereotype "ExtbasePlugin" 
 * which is not null.
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbasePluginUtilizableUncachedControllerActions(MElement this) :
	emHasUtilizableTaggedValueReference( prExtbasePlugin(), prExtbasePluginUncachedControllerActions() );


/**
 * Checks if an element is annotated with the specified value reference
 * of the tagged value "uncachedControllerActions" of the stereotype "ExtbasePlugin".
 *
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginUncachedControllerActions(MElement this, MElement valueReference) :
	emHasTaggedValue( prExtbasePlugin(), prExtbasePluginUncachedControllerActions(), valueReference );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "uncachedControllerActions" of the stereotype "ExtbasePlugin".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbasePluginOwningUncachedControllerActions(MElement this) : 
	emOwningTaggedValues( prExtbasePlugin(), prExtbasePluginUncachedControllerActions() );


/**
 * Returns the list of value references of the multi-valued tagged value "uncachedControllerActions"
 * of the stereotype "ExtbasePlugin".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MOperation] emGetExtbasePluginUncachedControllerActions(MElement this) : 
	emAllTaggedValueReferences( prExtbasePlugin(), prExtbasePluginUncachedControllerActions() );


// -- Xtend scripts for Stereotype "ExtbasePluginConfiguration" --

/**
 * Checks if an element is annotated with the stereotype "ExtbasePluginConfiguration".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExtbasePluginConfigurationStereotype(MElement this) :
	emHasStereotypeAssignment( prExtbasePluginConfiguration() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "ExtbasePluginConfiguration".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginConfigurationTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prExtbasePluginConfiguration(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "ExtbasePluginConfiguration".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginConfigurationTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prExtbasePluginConfiguration(), tag, valueReference );


// -- "switchableControllerActionIndex" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "switchableControllerActionIndex" of the stereotype "ExtbasePluginConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbasePluginConfigurationUtilizableSwitchableControllerActionIndex(MElement this) :
	emHasUtilizableTaggedValue( prExtbasePluginConfiguration(), prExtbasePluginConfigurationSwitchableControllerActionIndex() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "switchableControllerActionIndex" of the stereotype "ExtbasePluginConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginConfigurationSwitchableControllerActionIndex(MElement this, String value) :
	emHasTaggedValue( prExtbasePluginConfiguration(), prExtbasePluginConfigurationSwitchableControllerActionIndex(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "switchableControllerActionIndex" of the stereotype "ExtbasePluginConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbasePluginConfigurationOwningSwitchableControllerActionIndex(MElement this) : 
	emOwningTaggedValues( prExtbasePluginConfiguration(), prExtbasePluginConfigurationSwitchableControllerActionIndex() );


/**
 * Returns the value of the single-valued tagged value "switchableControllerActionIndex"
 * of the stereotype "ExtbasePluginConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetExtbasePluginConfigurationSwitchableControllerActionIndex(MElement this) :
	emGetTaggedValue( prExtbasePluginConfiguration(), prExtbasePluginConfigurationSwitchableControllerActionIndex() );


// -- "switchableControllerActions" --
	
/**
 * Checks if an element has a utilizable value reference
 * of the tagged value "switchableControllerActions" of the stereotype "ExtbasePluginConfiguration" 
 * which is not null.
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasExtbasePluginConfigurationUtilizableSwitchableControllerActions(MElement this) :
	emHasUtilizableTaggedValueReference( prExtbasePluginConfiguration(), prExtbasePluginConfigurationSwitchableControllerActions() );


/**
 * Checks if an element is annotated with the specified value reference
 * of the tagged value "switchableControllerActions" of the stereotype "ExtbasePluginConfiguration".
 *
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasExtbasePluginConfigurationSwitchableControllerActions(MElement this, MElement valueReference) :
	emHasTaggedValue( prExtbasePluginConfiguration(), prExtbasePluginConfigurationSwitchableControllerActions(), valueReference );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "switchableControllerActions" of the stereotype "ExtbasePluginConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetExtbasePluginConfigurationOwningSwitchableControllerActions(MElement this) : 
	emOwningTaggedValues( prExtbasePluginConfiguration(), prExtbasePluginConfigurationSwitchableControllerActions() );


/**
 * Returns the list of value references of the multi-valued tagged value "switchableControllerActions"
 * of the stereotype "ExtbasePluginConfiguration".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MOperation] emGetExtbasePluginConfigurationSwitchableControllerActions(MElement this) : 
	emAllTaggedValueReferences( prExtbasePluginConfiguration(), prExtbasePluginConfigurationSwitchableControllerActions() );


// -- Xtend scripts for Stereotype "ExtbaseUncachedControllerAction" --

/**
 * Checks if an element is annotated with the stereotype "ExtbaseUncachedControllerAction".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExtbaseUncachedControllerActionStereotype(MElement this) :
	emHasStereotypeAssignment( prExtbaseUncachedControllerAction() );


// -- Xtend scripts for Stereotype "FileMount" --

/**
 * Checks if an element is annotated with the stereotype "FileMount".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasFileMountStereotype(MElement this) :
	emHasStereotypeAssignment( prFileMount() );


// -- Xtend scripts for Stereotype "FileMountRepository" --

/**
 * Checks if an element is annotated with the stereotype "FileMountRepository".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasFileMountRepositoryStereotype(MElement this) :
	emHasStereotypeAssignment( prFileMountRepository() );


// -- Xtend scripts for Stereotype "FrontendUser" --

/**
 * Checks if an element is annotated with the stereotype "FrontendUser".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasFrontendUserStereotype(MElement this) :
	emHasStereotypeAssignment( prFrontendUser() );


// -- Xtend scripts for Stereotype "FrontendUserGroup" --

/**
 * Checks if an element is annotated with the stereotype "FrontendUserGroup".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasFrontendUserGroupStereotype(MElement this) :
	emHasStereotypeAssignment( prFrontendUserGroup() );


// -- Xtend scripts for Stereotype "FrontendUserGroupRepository" --

/**
 * Checks if an element is annotated with the stereotype "FrontendUserGroupRepository".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasFrontendUserGroupRepositoryStereotype(MElement this) :
	emHasStereotypeAssignment( prFrontendUserGroupRepository() );


// -- Xtend scripts for Stereotype "FrontendUserRepository" --

/**
 * Checks if an element is annotated with the stereotype "FrontendUserRepository".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasFrontendUserRepositoryStereotype(MElement this) :
	emHasStereotypeAssignment( prFrontendUserRepository() );


// -- Xtend scripts for Stereotype "Repository" --

/**
 * Checks if an element is annotated with the stereotype "Repository".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasRepositoryStereotype(MElement this) :
	emHasStereotypeAssignment( prRepository() );


// PROTECTED REGION ID(accesselement.own.code.438b08e4-1c85-11e3-8460-2388508c54e2) ENABLED START

/**
 * Returns the list of value references of the multi-valued tagged value "controllerActions"
 * of the stereotype "ExtbasePlugin".
 * 
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 */
List[MClass] emGetExtbasePluginControllers(MInterface this) : 
	emGetExtbasePluginControllerActions().collect( ca | ca.classifier ).toSet();


/**
 * Returns the list of value references of the multi-valued tagged value "controllerActions"
 * of the stereotype "ExtbasePlugin".
 * 
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 */
List[MOperation] emGetExtbasePluginControllerActions(MInterface this, MClass controller) : 
	emGetExtbasePluginControllerActions().select( ca | ca.classifier == controller );


/**
 * Returns the list of value references of the multi-valued tagged value "uncachedControllerActions"
 * of the stereotype "ExtbasePlugin".
 *
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 */
List[MClass] emGetExtbasePluginUncachedControllers(MInterface this) : 
	emGetExtbasePluginControllerActions().select( uca | uca.emHasExtbaseUncachedControllerActionStereotype() ).collect( uca | uca.classifier ).toSet();


/**
 * Returns the list of value references of the multi-valued tagged value "uncachedControllerActions"
 * of the stereotype "ExtbasePlugin".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MOperation] emGetExtbasePluginUncachedControllerActions(MInterface this, MClass controller) : 
	emGetExtbasePluginControllerActions().select( uca | uca.classifier == controller && uca.emHasExtbaseUncachedControllerActionStereotype() );


/**
 * Returns the list of value references of the multi-valued tagged value "controllerActions"
 * of the stereotype "ExtbaseModule".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MClass] emGetExtbaseModuleControllers(MInterface this) : 
	emGetExtbaseModuleControllerActions().collect( ca | ca.classifier ).toSet();


/**
 * Returns the list of value references of the multi-valued tagged value "controllerActions"
 * of the stereotype "ExtbaseModule".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MOperation] emGetExtbaseModuleControllerActions(MInterface this, MClass controller) : 
	emGetExtbaseModuleControllerActions().select( ca | ca.classifier == controller );

// PROTECTED REGION END
