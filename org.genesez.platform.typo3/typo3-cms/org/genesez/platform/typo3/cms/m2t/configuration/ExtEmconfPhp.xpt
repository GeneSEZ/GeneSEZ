«REM»
	(c) GeneSEZ Research Group
	All rights reserved.
	
	Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
«ENDREM»

«IMPORT gcore»


«REM»
	Entry point for generating "ext_emconf.php".
	
	@author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
«ENDREM»

«REM» use TYPO3 CMS profile scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3::cms::profile::Typo3CmsAccessElement»


«REM» use TYPO3 CMS file system convention scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3::cms::util::FileSystemConvention»

«REM» use TYPO3 CMS naming convention scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3::cms::util::NamingConvention»


«REM»
	-- Public Templates (THE FOLLOWING TEMPLATES CAN BE INVOKED FROM OUTSIDE OF THIS FILE) ------------------
«ENDREM»

«REM»
	Processes the generation of "ext_emconf.php".
«ENDREM»
«DEFINE Root FOR MModel -»
«FILE filePathExtEmconfPhp() -»
<?php

«EXPAND ExtensionManagementConfiguration -»
«ENDFILE -»
«ENDDEFINE»


«REM»
	-- Private Templates (THE FOLLOWING TEMPLATES SHOULD NOT BE INVOKED FROM OUTSIDE OF THIS FILE) ----------
«ENDREM»

«REM»
	Generates the '$EM_CONF' array to connect a TYPO3 CMS extension to TYPO3 CMS.
«ENDREM»
«DEFINE ExtensionManagementConfiguration FOR MModel -»
$EM_CONF[$_EXTKEY] = array(
	«EXPAND Title -»
	«EXPAND Description -»
	«EXPAND Category -»
	«EXPAND Author -»
	«EXPAND AuthorEmail -»
	«EXPAND AuthorCompany -»
	«EXPAND Shy -»
	«EXPAND Priority -»
	«EXPAND State -»
	«EXPAND Internal -»
	«EXPAND Uploadfolder -»
	«EXPAND CreateDirs -»
	«EXPAND ModifyTables -»
	«EXPAND LockType -»
	«EXPAND ClearCacheOnLoad -»
	«EXPAND Version -»
	«EXPAND Constraints -»
	«EXPAND OwnCode("ext_emconf.php.own.code." + xmiGuid) -»
);
«ENDDEFINE»


«REM»
	Performs the generation of the 'title' field.
«ENDREM»
«DEFINE Title FOR MModel -»
	'title' => '«emGetTypo3ExtensionManagementTitle() -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'description' field.
«ENDREM»
«DEFINE Description FOR MModel -»
	'description' => '«emGetTypo3ExtensionManagementDescription() -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'category' field.
«ENDREM»
«DEFINE Category FOR MModel -»
	'category' => '«emGetTypo3ExtensionManagementCategory().asExtensionCategory() -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'author' field.
«ENDREM»
«DEFINE Author FOR MModel -»
	'author' => '«emGetTypo3ExtensionManagementAuthor() -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'author_email' field.
«ENDREM»
«DEFINE AuthorEmail FOR MModel -»
	'author_email' => '«emGetTypo3ExtensionManagementAuthorEMail() -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'author_company' field.
«ENDREM»
«DEFINE AuthorCompany FOR MModel -»
	'author_company' => '«emGetTypo3ExtensionManagementAuthorCompany() -»', 
«ENDDEFINE»


«REM»
	Performs the generation of the 'shy' field.
«ENDREM»
«DEFINE Shy FOR MModel -»
	'shy' => «emGetTypo3ExtensionManagementShy().asTypo3Boolean() -»,
«ENDDEFINE»


«REM»
	Performs the generation of the 'priority' field.
«ENDREM»
«DEFINE Priority FOR MModel -»
	'priority' => '«emGetTypo3ExtensionManagementPriority().asExtensionPriority() -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'state' field.
«ENDREM»
«DEFINE State FOR MModel -»
	'state' => '«emGetTypo3ExtensionManagementState().asExtensionState() -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'internal' field.
«ENDREM»
«DEFINE Internal FOR MModel -»
	'internal' => «emGetTypo3ExtensionManagementInternal().asTypo3Boolean() -»,
«ENDDEFINE»


«REM»
	Performs the generation of the 'uploadfolder' field.
«ENDREM»
«DEFINE Uploadfolder FOR MModel -»
	'uploadfolder' => «emGetTypo3ExtensionManagementUploadFolder().asTypo3Boolean() -»,
«ENDDEFINE»


«REM»
	Performs the generation of the 'createDirs' field.
«ENDREM»
«DEFINE CreateDirs FOR MModel -»
	'createDirs' => '«FOREACH emGetTypo3ExtensionManagementCreateDirs() AS directory SEPARATOR ", " -»«directory -»«ENDFOREACH -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'modify_tables' field.
«ENDREM»
«DEFINE ModifyTables FOR MModel -»
	'modify_tables' => '«FOREACH emGetTypo3ExtensionManagementModifyTables() AS table SEPARATOR ", " -»«table -»«ENDFOREACH -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'lockType' field.
«ENDREM»
«DEFINE LockType FOR MModel -»
	'lockType' => '«FOREACH emGetTypo3ExtensionManagementLockType() AS lockType SEPARATOR ", " -»«lockType.asExtensionLockType() -»«ENDFOREACH -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'clearCacheOnLoad' field.
«ENDREM»
«DEFINE ClearCacheOnLoad FOR MModel -»
	'clearCacheOnLoad' => «emGetTypo3ExtensionManagementClearCacheOnLoad().asTypo3Boolean() -»,
«ENDDEFINE»


«REM»
	Performs the generation of the 'version' field.
«ENDREM»
«DEFINE Version FOR MModel -»
	'version' => '«emGetTypo3ExtensionManagementVersion() -»',
«ENDDEFINE»


«REM»
	Performs the generation of the 'constraints' field.
«ENDREM»
«DEFINE Constraints FOR MModel -»
	'constraints' => array(
		«EXPAND DependsConstraints -»
		«EXPAND ConflictsConstraints -»
		«EXPAND SuggestsConstraints -»
	),
«ENDDEFINE»


«REM»
	Performs the generation of the 'depends' field.
«ENDREM»
«DEFINE DependsConstraints FOR MModel -»
		'depends' => array(
			«FOREACH emGetTypo3ExtensionManagementDependencies() AS dependsConstraint -»
			«dependsConstraint.asExtensionConstraint()»,
			«ENDFOREACH -»
			«EXPAND OwnDependsConstraints("ext_emconf.php.own.depends.constraints." + xmiGuid) -»
		),
«ENDDEFINE»


«REM»
	Generates a protected region for own depends constraints.
«ENDREM»
«DEFINE OwnDependsConstraints(String id) FOR MModel -»
			«PROTECT CSTART '/* ' CEND ' */' ID (id)»
			// TODO: put your further 'depends' constraints here
			«ENDPROTECT»
«ENDDEFINE»


«REM»
	Performs the generation of the 'conflicts' field.
«ENDREM»
«DEFINE ConflictsConstraints FOR MModel -»
		'conflicts' => array(
			«FOREACH emGetTypo3ExtensionManagementConflicts() AS conflictConstraint -»
			«conflictConstraint.asExtensionConstraint()»,
			«ENDFOREACH -»
			«EXPAND OwnConflictsConstraints("ext_emconf.php.own.conflicts.constraints." + xmiGuid) -»
		),
«ENDDEFINE»


«REM»
	Generates a protected region for own conflict constraints.
«ENDREM»
«DEFINE OwnConflictsConstraints(String id) FOR MModel -»
			«PROTECT CSTART '/* ' CEND ' */' ID (id)»
			// TODO: put your further 'conflicts' constraints here
			«ENDPROTECT»
«ENDDEFINE»


«REM»
	Performs the generation of the 'suggests' field.
«ENDREM»
«DEFINE SuggestsConstraints FOR MModel -»
		'suggests' => array(
			«FOREACH emGetTypo3ExtensionManagementSuggests() AS suggestConstraint -»
			«suggestConstraint.asExtensionConstraint()»,
			«ENDFOREACH -»
			«EXPAND OwnSuggestsConstraints("ext_emconf.php.own.suggests.constraints." + xmiGuid) -»
		),
«ENDDEFINE»


«REM»
	Generates a protected region for own suggests constraints.
«ENDREM»
«DEFINE OwnSuggestsConstraints(String id) FOR MModel -»
			«PROTECT CSTART '/* ' CEND ' */' ID (id)»
			// TODO: put your further 'suggests' constraints here
			«ENDPROTECT»
«ENDDEFINE»


«REM»
	Generates a protected region for own code.
«ENDREM»
«DEFINE OwnCode(String id) FOR MModel -»
	«PROTECT CSTART '/* ' CEND ' */' ID (id)»
	// TODO: put your further code here
	«ENDPROTECT»
«ENDDEFINE»