/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */


/**
 * File system convention scripts for TYPO3 CMS. 
 *
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
 */

// use TYPO3 CMS naming convention scripts
extension org::genesez::platform::typo3::cms::util::NamingConvention;


// use GeneSEZ common conversion scripts
extension org::genesez::util::Conversion;


// -- TYPO3 CMS file extension conventions ------------------------------------------------------------------

/**
 * Getter of the HTML file extension including the beginning dot.
 *
 * @return	The file extension for HTML artefacts ('.html').
 */
String fileExtensionHtml() : 
	fileExtensionSeparator() + "html";


/**
 * Getter of the PHP file extension including the beginning dot.
 *
 * @return	The file extension for PHP artefacts ('.php').
 */
String fileExtensionPhp() : 
	fileExtensionSeparator() + "php";


/**
 * Getter of the SQL file extension including the beginning dot.
 *
 * @return	The file extension for SQL artefacts ('.sql').
 */
String fileExtensionSql() : 
	fileExtensionSeparator() + "sql";


/**
 * Getter of the TypoScript file extension including the beginning dot.
 *
 * @return	The file extension for TypoScript artefacts ('.ts').
 */
String fileExtensionTs() : 
	fileExtensionSeparator() + "ts";


/**
 * Getter of the Text file extension including the beginning dot.
 *
 * @return	The file extension for Text artefacts ('.txt').
 */
String fileExtensionTxt() : 
	fileExtensionSeparator() + "txt";


/**
 * Getter of the XLF file extension including the beginning dot.
 *
 * @return	The file extension for XLF artefacts ('.xlf').
 */
String fileExtensionXlf() : 
	fileExtensionSeparator() + "xlf";


/**
 * Getter of the XML file extension including the beginning dot.
 *
 * @return	The file extension for XML artefacts ('.xml').
 */
String fileExtensionXml() : 
	fileExtensionSeparator() + "xml";


// -- TYPO3 CMS file name + path conventions ----------------------------------------------------------------

/**
 * Gets the file name of "ext_emconf.php".
 *
 * @return	The file name of "ext_emconf.php". 
 */
String fileNameExtEmconfPhp() :
	"ext_emconf" + fileExtensionPhp();


/**
 * Gets the file path of "ext_emconf.php".
 *
 * @return	The file path of "ext_emconf.php". 
 */
String filePathExtEmconfPhp() :
	fileNameExtEmconfPhp();


/**
 * Gets the file name of "ext_localconf.php".
 *
 * @return	The file name of "ext_localconf.php". 
 */
String fileNameExtLocalconfPhp() :
	"ext_localconf" + fileExtensionPhp();


/**
 * Gets the file path of "ext_localconf.php".
 *
 * @return	The file path of "ext_localconf.php". 
 */
String filePathExtLocalconfPhp() :
	fileNameExtLocalconfPhp();


/**
 * Gets the file name of "ext_tables.php".
 *
 * @return	The file name of "ext_tables.php". 
 */
String fileNameExtTablesPhp() :
	"ext_tables" + fileExtensionPhp();


/**
 * Gets the file path of "ext_tables.php".
 *
 * @return	The file path of "ext_tables.php". 
 */
String filePathExtTablesPhp() :
	fileNameExtTablesPhp();


/**
 * Gets the file name of "ext_tables.sql".
 *
 * @return	The file name of "ext_tables.sql". 
 */
String fileNameExtTablesSql() :
	"ext_tables" + fileExtensionSql();


/**
 * Gets the file path of "ext_tables.sql".
 *
 * @return	The file path of "ext_tables.sql". 
 */
String filePathExtTablesSql() :
	fileNameExtTablesSql();


/**
 * Gets the file name of "ext_conf_template.txt".
 *
 * @return	The file name of "ext_conf_template.txt".
 */
String fileNameExtConfTemplateTxt() :
	"ext_conf_template" + fileExtensionTxt();


/**
 * Gets the file path of "ext_conf_template.txt".
 *
 * @return	The file path of "ext_conf_template.txt".
 */
String filePathExtConfTemplateTxt() :
	fileNameExtConfTemplateTxt();


// -- TYPO3 CMS directory path conventions ------------------------------------------------------------------

/**
 * Gets the directory path of the extension upload folder "uploads/tx_<extension key without underscores>".
 * Example for general extensions: If the extension key is "blog_example" then this method returns the directory path "uploads/tx_blogexample".
 * Example for user specific extensions: If the extension key is "user_blog_example" then the method returns the the directoy path "uploads/tx_userblogexample".
 *
 * See http://docs.typo3.org/typo3cms/CodingGuidelinesReference/FileSystemConventions/Typo3DirectoryStructure/Index.html
 * See http://docs.typo3.org/typo3cms/CoreApiReference/ExtensionArchitecture/DeclarationFile/Index.html
 * TODO: It is unclear why user specific extensions are prefixed with tx_? Maybe a TYPO3 CMS bug?
 *
 * @return	The directory path of the extension upload folder "uploads/tx_<extension key without underscores>".
 */
String dirPathExtensionUploadFolder() :
	"uploads/" + "tx_" + extensionKeyWithoutUnderscores();