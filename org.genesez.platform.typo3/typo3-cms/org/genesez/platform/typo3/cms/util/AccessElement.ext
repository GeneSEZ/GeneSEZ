/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */

import gcore;


/**
 * Access element scripts for TYPO3 CMS to simplify access to model elements.
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
 */

// use TYPO3 CMS profile scripts
extension org::genesez::platform::typo3::cms::profile::Typo3CmsProfile;
extension org::genesez::platform::typo3::cms::profile::Typo3CmsAccessElement;

	
// -- TYPO3 CMS Table Configuration Array (TCA) -------------------------------------------------------------

/**
 * Checks if the advanced configuration of a property should be generated for the 'showitem' field.
 * 
 * @return	True, if the advanced configuration of a property should be generated for the 'showitem' field, otherwise false.
 */
Boolean generateAdvancedTcaTypesNumbers(MProperty this) :
	emGetTypo3TcaPropertyTypesAltLabel() != "" 
	|| emGetTypo3TcaPropertyTypesPaletteNumber() != ""	
	|| emGetTypo3TcaPropertyTypesSpecialConfiguration() != "" 
	|| emGetTypo3TcaPropertyTypesFormStyleCodes() != ""
		? true
		: false;


// -- TYPO3 CMS FlexForm ------------------------------------------------------------------------------------

/**
 * Returns the a list of FlexForm sheets for a plugin without the 'DEFAULT' sheet.
 * 
 * @return	The list of FlexForm sheets or an empty list.
 */
List[String] allFlexFormSheetsWithoutDefault(MInterface this) :
	let sheets = {} :
		property.typeSelect(MAttribute).select( e | e.emGetTypo3FlexFormPropertySheet() != "" ).
			collect( e | sheets.add( e.emGetTypo3FlexFormPropertySheet() ) ) ->
		sheets.toSet() ->
		sheets.remove( prTypo3FlexFormSheetDefault() ) ->
		sheets.sortBy( s | s );


/**
 * Returns the a list of attributes for a FlexForm sheet for a plugin.
 * 
 * @param	sheet	The name of the FlexForm sheet.
 * @return	The list of attributes for a FlexForm sheet or an empty list.
 */
List[MAttribute] allFlexFormSheetProperties(MInterface this, String sheet) :
	sheet == "sDEF"
		? property.typeSelect(MAttribute).select( e | e.emGetTypo3FlexFormPropertySheet() == "" || e.emGetTypo3FlexFormPropertySheet() == prTypo3FlexFormSheetDefault() )
		: property.typeSelect(MAttribute).select( e | e.emGetTypo3FlexFormPropertySheet() == sheet );