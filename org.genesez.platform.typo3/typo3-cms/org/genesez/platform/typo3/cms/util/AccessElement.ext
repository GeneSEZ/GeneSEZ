/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */

import gcore;


/**
 * Access element scripts for TYPO3 CMS to simplify access to model elements.
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
 */

// use TYPO3 CMS profile scripts
extension org::genesez::platform::typo3::cms::profile::Typo3CmsProfile;
extension org::genesez::platform::typo3::cms::profile::Typo3CmsAccessElement;

	
// -- TYPO3 CMS FlexForm ------------------------------------------------------------------------------------

/**
 * Returns the a list of FlexForm sheets for a plugin without the 'General' also known as 'sDEF' sheet.
 * 
 * @return	The list of FlexForm sheets or an empty list.
 */
List[String] allFlexFormSheetsWithoutGeneral(MInterface this) :
	let sheets = {} :
		property.typeSelect(MAttribute).select( a | a.emHasTypo3FlexFormElementUtilizableFlexFormSheet() )
			.collect( a | sheets.add( a.emGetTypo3FlexFormElementFlexFormSheet() ) ) ->
		sheets.toSet().remove( prTypo3FlexFormSheetGeneral() ).sortBy( s | s );


/**
 * Returns the a list of elements for a FlexForm sheet for a plugin.
 * 
 * @param	sheetName	The name of the FlexForm sheet.
 * @return	The list of elements for a FlexForm sheet or an empty list.
 */
List[MAttribute] allFlexFormSheetElements(MInterface this, String sheetName) :
	sheetName == prTypo3FlexFormSheetGeneral()
		? property.typeSelect(MAttribute).select( a | !a.emHasTypo3FlexFormElementUtilizableFlexFormSheet() || a.emGetTypo3FlexFormElementFlexFormSheet() == prTypo3FlexFormSheetGeneral() )
		: property.typeSelect(MAttribute).select( a | a.emGetTypo3FlexFormElementFlexFormSheet() == sheetName );