package de.genesez.example.java.car.base;import de.genesez.platforms.java.umlsupport.associations.*;import java.util.*;/* PROTECTED REGION ID(java.type.import._11_5_6340215_1177945913718_872802_139) ENABLED START */// TODO: put your further include + require statements here/* PROTECTED REGION END *//** * A car is a vehicle with four wheels and drives on the road. * @author	dreamer */public class Car extends AbstractVehicle {		// -- generated attribute, constant + association declarations ----------	/**	 * documented here {@link getMaxSpeed()}	 * @generated	attribute definition	 */	private Integer maxSpeed;	/**	 * documented here {@link spare()}	 * @generated	association attribute definition	 */	private Association<Car, Wheel> spare = new OneAssociation<Car, Wheel>(this);	/**	 * @generated	association attribute definition	 */	private AssociationAC<Car, License, Owner> license = new OneAssociationAC<Car, License, Owner>(this, License.class, "car");	/**	 * @generated	association attribute definition	 */	private Association<Car, LicensePlate> licensePlate = new OneAssociation<Car, LicensePlate>(this, LicensePlate.class, "car");	/**	 * @generated	association attribute definition	 */	private Association<Car, Engine> engine = new OneAssociation<Car, Engine>(this, Engine.class, "car");	/**	 * documented here {@link wheels()}	 * @generated	association attribute definition	 */	private Association<Car, Wheel> wheels = new ManyAssociation<Car, Wheel>(this, new LinkedHashSet<Wheel>(), Wheel.class, "mycar");		// -- generated constructors --------------------------------------------	/**	 * constructor of the class car	 * @generated	constructor for class '<em><b>Car</b></em>'	 * @param	mxs	maximum of speed.  * @param	make	i don't know what make do. 		 */	public Car(int mxs, String make) {		/* PROTECTED REGION ID(java.constructor._11_5_6340215_1179229080562_965427_117) ENABLED START */		// TODO: implementation of constructor for class 'Car'		throw new UnsupportedOperationException("The implementation of this generated constructor is missing!");		/* PROTECTED REGION END */	}		// -- generated method stubs for implementations + derived attributes ---	/**	 * @generated	method stub for further implementation	 * @param	distance	. 	 * @return	. 	 * @throws	OutOfFuelException	 * @throws	FlatTireException	 */	public boolean drive(Integer distance) throws OutOfFuelException, FlatTireException {		/* PROTECTED REGION ID(java.implementation._14_0_b6f02e1_1215088972218_727597_762) ENABLED START */		// TODO: implementation of method 'Car.drive(...)'		throw new UnsupportedOperationException("The implementation of this generated method stub is missing!");		/* PROTECTED REGION END */	}		/**	 * count the number of wheels	 * @generated	getter for the attribute '<em><b>noOfWheels</b></em>'	 */	private Integer getNoOfWheels() {		/* PROTECTED REGION ID(java.derived.attribute.implementation._11_5_6340215_1178786244296_257674_121) ENABLED START */		// TODO: implementation of derived (calculated) attribute 'noOfWheels'		throw new UnsupportedOperationException("The implementation of the derived attribute 'noOfWheels' is missing!");		/* PROTECTED REGION END */	}		// -- generated association + attribute accessors -----------------------	/** 	 * reference to the spared wheel	 * @generated	accessor of the association '<em><b>spare</b></em>' to {@link Wheel}	 */	public Association<Car, Wheel> spare() {		return spare;	}		/** 	 * @generated	accessor of the association '<em><b>license</b></em>' to {@link License}	 */	public AssociationAC<Car, License, Owner> license() {		return license;	}		/** 	 * @generated	accessor of the association '<em><b>licensePlate</b></em>' to {@link LicensePlate}	 */	public Association<Car, LicensePlate> licensePlate() {		return licensePlate;	}		/** 	 * @generated	accessor of the association '<em><b>engine</b></em>' to {@link Engine}	 */	public Association<Car, Engine> engine() {		return engine;	}		/** 	 * reference to normal wheels on a car	 * @generated	accessor of the association '<em><b>wheels</b></em>' to {@link Wheel}	 */	public Association<Car, Wheel> wheels() {		return wheels;	}		/**	 * describes the maximum speed of a car	 * 	 * internal bla bla bla	 * @generated	getter for the attribute '<em><b>maxSpeed</b></em>'	 */	public Integer getMaxSpeed() {		return maxSpeed;	}		// -- own code implementation -------------------------------------------	/* PROTECTED REGION ID(java.class.own.code.implementation._11_5_6340215_1177945913718_872802_139) ENABLED START */	// TODO: put your own implementation code here	/* PROTECTED REGION END */}