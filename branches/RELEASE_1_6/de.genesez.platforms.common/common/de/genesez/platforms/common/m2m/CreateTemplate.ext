/**
 * Helper scripts to create GeneSEZ model elements
 * - useful for m2m transformations + model modifications
 * 
 * @author	tobias haubold
 * @date	2008-07-01
 */

// based on genesez meta model
import gcore;

create MPackage createPackage(MPackage container, String xmiGuid, String name) :
	processElement(xmiGuid, name) ->
	container.nestedPackage.add(this) ->
	this;

create MClass createClass(MPackage container, String xmiGuid, String name) :
	processElement(xmiGuid, name) ->
	container.classifier.add(this) ->
	this;

create MExternal createExternal(MModel container, String specification) :
	setSpecification( specification ) ->
	container.externalTypes.add( this ) ->
	this;

create MPrimitiveType createPrimitiveType(MModel container, String name) :
	setXmiGuid(name) ->
	setName(name) ->
	container.primitiveTypes.add(this) ->
	this;

create MOperation createOperation(MClassifier container, String xmiGuid, String name) :
	processElement(xmiGuid, name) ->
	container.operation.add(this) ->
	this;

create MParameter createParameter(MOperation container, String xmiGuid, String name) :
	processElement(xmiGuid, name) ->
	container.parameter.add(this) ->
	this;

create MAttribute createAttribute(MClassifier container, String xmiGuid, String name) :
	processElement(xmiGuid, name) ->
	container.property.add( this ) ->
	this;

create MStereotype createStereotype(MModel container, String xmiGuid, String name) :
	processElement(xmiGuid, name) ->
	container.anyStereotype.add( this ) ->
	this;

create List createList() :
	this;

create MTag createTag(MStereotype container, String name, String type) :
	setName( name ) ->
	setType( type ) ->
	container.property.add( this ) ->
	this;

create MTaggedValue createTaggedValue(MElement container, MTag tag, String value) :
	setValue( value ) ->
	setTag( tag ) ->
	container.taggedValue.add( this ) ->
	this;

create MAspect createAspect(MElement container, String domain, String name) :
	setDomain(domain) ->
	setName(name) ->
	container.aspect.add( this ) ->
	this;


create MPrimitiveType createPrimitiveType(MModel container, String name, String xmiGuid) :
	processElement(xmiGuid, name) ->
	container.primitiveTypes.add(this) ->
	this;

create MClass createClassifier(MPackage container, String xmiGuid, String name) :
	processElement(this, xmiGuid, name) ->
	container.classifier.add(this) ->
	this;	

create MInterface createInterface(MPackage container, String xmiGuid, String name) :
	processElement(this, xmiGuid, name) ->
	container.classifier.add(this) ->
	this;

create MOperation copyOperation(MOperation op, MClassifier container) :
	processOperation(this, op.xmiGuid, op.name, op.parameter, op.visibility, op.abstract, op.final, op.aspect, op.multiplicity, op.ordered, op.ownedComment, op.raisedException, op.returnType, op.static, op.unique) ->
	container.operation.add(this) ->
	this;

create MParameter createParameter(MParameter param) :
	this.setName(param.name) ->
	this.setDefaultvalue(param.defaultvalue) ->
	this.setMultiplicity(param.multiplicity) ->
	this.setOrdered(param.ordered) ->
	//achtung, eins zu n
	this.setOwnedComment(param.ownedComment) ->
	this.setStereotype(param.stereotype) ->
	//achtung, eins zu n
	this.setType(param.type) ->
	this.setXmiGuid(param.xmiGuid) ->
	this;
	
Void copyParameter(MOperation this, MParameter param) :
	this.parameter.add(createParameter(param));
	
MOperation processOperation(MOperation this, String xmiGuid, String name, List[MParameter] parameter, String visibility, Boolean abstract, Boolean final, List aspect, Integer multiplicity, Boolean ordered, List ownedComment, List raisedException, MType returnType, Boolean static, Boolean unique) :
	setVisibility(visibility) ->
	setName(name) ->
	setXmiGuid(xmiGuid) ->
	this.parameter.addAll(parameter.createParameter() ) ->
	this.setAbstract(abstract) ->
	this.setFinal(final) ->
	this.setAspect(aspect) ->
	this.setMultiplicity(multiplicity) ->
	this.setOrdered(ordered) ->
	this.setOwnedComment(ownedComment) ->
	this.setRaisedException(raisedException) ->
	this.setReturnType(returnType) ->
	this.setStatic(static) ->
	this.setUnique(unique) ->
	this;

MClassifier processClassifier(MClassifier this, String visibility, boolean abstract, boolean final) :
	setVisibility(visibility) ->
	setAbstract(abstract) ->
	setFinal(final) ->
	this;

MOperation processOperation(MOperation this, String visibility, boolean static, boolean abstract, boolean final, int multiplicity, boolean unique, boolean ordered) :
	setVisibility(visibility) ->
	setStatic(static) ->
	setAbstract(abstract) ->
	setFinal(final) ->
	setMultiplicity(multiplicity) ->
	setUnique(unique) ->
	setOrdered(ordered) ->
	this;

MParameter processParameter(MParameter this, String defaultValue, String direction, int multiplicity, boolean unique, boolean ordered) :
	setDefaultvalue(defaultvalue) ->
	setDirection(direction) ->
	setMultiplicity(multiplicity) ->
	setUnique(unique) ->
	setOrdered(ordered) ->
	this;

MAttribute processAttribute(MAttribute this, String defaultvalue, boolean static, boolean final) :
	// set attribute values
	setDefaultvalue(defaultvalue) ->
	setStatic(static) ->
	setFinal(final) ->
	this;

MProperty processProperty(MProperty this, String visibility, boolean derived, Integer multiplicity, boolean unique, boolean ordered) :
	setVisibility(visibility) ->
	setDerived(derived) ->
	setMultiplicity(multiplicity) ->
	setUnique(unique) ->
	setOrdered(ordered) ->
	this;

/**
 * processes the given model element and sets all parameters
 * @param	xmiGuid	
 * @param	name	
 */
MElement processElement(MElement this, String xmiGuid, String name) :
	setName(name) ->
	setXmiGuid(xmiGuid) ->
	this;
