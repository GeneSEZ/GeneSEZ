<?xml version="1.0" ?>
<!--
	ant build file for automation of model transformation steps
	@author	dreamer
	
	includes following ant tasks:
	- oaw workflow task to generate *.ecore file from emf uml2 model
	  [ uml2ecore ]
	- ecore code generation task to generate the *.genmodel file and
	  the java metamodel implementation
	  [ ecore2java ]
	- creates a jar library which contains the java metamodel implementation classes
	  [ genesezmm2jar ]
	
	note: it's a kind of an abstract build file
-->

<project name="de.genesez.metamodel" basedir=".." default="">
	
	<!--
		include oaw properties + build properties
	-->
	<property file="config/genesezMM.properties" />
	<property file="build/build.properties" />
	
	<!--
		include genesez metamodel classpath
		provides classpathref 'de.genesez.metamodel.classpath'
	-->
	<import file="build-cp.xml" />
	
	
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	
	<!-- oaw workflow task definition -->
	<taskdef name = "oaw.workflow"
		classname = "org.openarchitectureware.workflow.ant.WorkflowAntTask"
		classpathref = "de.genesez.metamodel.classpath" />
	
	
	<!-- transform emf uml2 models to ecore models using oaw workflow -->
	<target name = "uml2ecore">
		<!-- workflow task is derived from the java ant task -->
		<oaw.workflow file = "${oaw.workflow.file}"
			classpathref="de.genesez.metamodel.classpath"
			fork = "true"
			dir = "${basedir}">
			
			<param name="baseDir" value="${basedir}/" />
		</oaw.workflow>
	</target>
	
	<!-- other method to start oaw workflow with java ant task -->
	<!--target name = "uml2ecore2">
		<java classname = "org.openarchitectureware.workflow.WorkflowRunner"
			classpathref="de.genesez.metamodel.classpath"
			fork = "true"
			dir = "${basedir}">
			
			<classpath>
				<path refid="de.genesez.metamodel.classpath" />
				<pathelement location="${basedir}" />
			</classpath>
			
			<arg value = "-pbaseDir=${basedir}/" />
			<arg value = "genesezMMRun.oaw" />
		</java>
	</target-->
	
	
	<!--
		generate *.genmodel + java code impl from *.ecore model
		note: genModel must be set in task and must be generated!
	-->
	<target name = "ecore2java">
		<emf.Ecore2Java model = "${ecoreMetaModelPath}${ecoreMetaModelFile}"
			genModel = "${genModelPath}/${genModelFile}"
			reconcileGenModel="overwrite"
			
			generateJavaCode="true"
			generateModelProject="false"
			generateEditProject="false"
			generateEditorProject="false"
			
			modelProject = "${basedir}"
			modelProjectFragmentPath = "${ecore2java.path}">
			
			<arg line = "-package ${ecore.package}" />
		</emf.Ecore2Java>
	</target>
	
	<!--
		create jar library
	-->
	<target name="genesezmm2jar"
		description="creates a jar library which contains the genesez metamodel implementation">
		
		<jar destfile="${dist.dir}/genesezmm.jar">
			<fileset dir="${bin.dir}">
				<include name="genesezMM/**" />
			</fileset>
			<manifest>
				<section name="genesezMM">
					<attribute name="Specification-Title" value="GeneSEZ MetaModel"/>
					<attribute name="Specification-Version" value="1.1.0"/>
					<attribute name="Specification-Vendor" value="Zwickau University of Applied Sciences"/>
					<attribute name="Implementation-Title" value="GeneSEZ MetaModel"/>
					<attribute name="Implementation-Version" value="1.1.0"/> 
					<attribute name="Implementation-Vendor" value="Zwickau University of Applied Sciences"/>
				</section>
			</manifest>
		</jar>
	</target>
	
	<!-- cleaning lady -->
	<target name="clean"
			description="clears the distribution directory">
		<delete includeemptydirs="true">
			<fileset dir="${dist.dir}">
				<include name="**/*" />
			</fileset>
		</delete>
	</target>
</project>
