<workflow>
	
	<cartridge
		file="xmiReader.oaw" 
		inputModelFile="../de.genesez.example/model/example.uml"
	/>
		
	<cartridge
		file="uml2genesezMM.oaw"
		metaModelPackage="genesezMM.GenesezMMPackage"
		profile="../de.genesez.example/model/profile.profile.uml"
		excludePackage="UML Standard Profile"
		invokeScript="de::genesez::uml2genesezmm::uml2genesezMM::transform(uml2model)"
	/>
	
	<!--cartridge
		file="pim2psm.oaw"
		metaModelPackage="genesezMM.GenesezMMPackage"
		invokeScript="de::genesez::cartridges::genesezmm::java::extensions::makePSM::convert(generatorModel)"
	/-->
	
	<cartridge
		file="constraintChecker.oaw"
		metaModelPackage="genesezMM.GenesezMMPackage"
		checkScript="de::genesez::cartridges::genesezmm::java::constraints::genesezMMConstraints"
		abortOnError="true"
	/>
	
	<cartridge
		file="xmiWriter.oaw"
		outputModelFile="model/example.ecore"
	/>
	
	<!--cartridge
		file="directoryCleaner.oaw"
		cleaningDirs="src-gen"
	/-->
	
	<cartridge
		file="codeGenerator.oaw"
		metaModelPackage="genesezMM.GenesezMMPackage"
		rootTemplate="de::genesez::cartridges::genesezmm::java::templates::Root::Root FOR generatorModel"
		outputDir="../de.genesez.example/src-gen"
	/>

</workflow>
