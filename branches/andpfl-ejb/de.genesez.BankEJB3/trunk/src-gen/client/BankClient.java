package client;/* PROTECTED REGION ID(java.mclassifier.other.import.code_14_0_590059_1207999711844_745761_1076) ENABLED START *//* TODO put your imports here */import java.lang.String;import server.Bankgroup;import java.util.Properties;import javax.naming.Context;/* PROTECTED REGION END *//** * @author X */public class BankClient {		// ////////////////////////////////////////////////////////////////////////	// generated variable, constant and association declarations	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// generated constructor implementations	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// generated derived attribute method implementations	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// generated association method implementations	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// generated abstract method declaration	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// generated normal method implementations	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// generated getter and setter method implementations	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// own implementations	// ////////////////////////////////////////////////////////////////////////		/* PROTECTED REGION ID(java.mclassifier.implementation.owncode.code._14_0_590059_1207999711844_745761_1076) ENABLED START */	/* TODO put your own implementation code here */	/**	 * @param  args  	 */	public static void main(String[] args) {		Bankgroup bankgroupBean = null;		Properties p = new Properties();		p.put("java.naming.factory.initial", "org.jnp.interfaces.NamingContextFactory");		p.put("java.naming.provider.url", "jnp://localhost:1099");		p.put("java.naming.factory.url.pkgs", "org.jboss.naming:org.jnp.interfaces");				try {			/*			 * Get a reference to the bankgroupBean over JNDI			 */			Context ctx = new javax.naming.InitialContext(p);			bankgroupBean = (Bankgroup) ctx.lookup("BankgroupBean/remote");			System.out.println("BankgroupBean-Referenz: " + bankgroupBean);						//Banken anlegen			int sparkasse = bankgroupBean.createBank("Sparkasse Zwickau");			System.out.println("Sparkasse Zwickau angelegt; BankCode: " + sparkasse);			int commerzbank = bankgroupBean.createBank("Commerzbank Zwickau");			System.out.println("Commerzbank Zwickau angelegt; BankCode: " + commerzbank);						//Kunden anlegen			//zunaechst bei der Sparkasse			bankgroupBean.selectBank(sparkasse);			int customerNumber1 = bankgroupBean.createCustomer("André", "Pflüger", "Äußere Schneeberger Straße 31", "08056", "Zwickau");			System.out.println("Kunde angelegt, Kundennummer: " + customerNumber1);			int customerNumber2 = bankgroupBean.createCustomer("Manfred", "Mustermann", "Leipziger Straße", "08056", "Zwickau");			System.out.println("Kunde angelegt, Kundennummer: " + customerNumber2);			int customerNumber3 = bankgroupBean.createCustomer("Manya", "Musterfrau", "Innere Schneeberger Straße 23", "08056", "Zwickau");			System.out.println("Kunde angelegt, Kundennummer: " + customerNumber3);			//dann denselben Kunden noch einmal bei der Commerzbank			bankgroupBean.selectBank(commerzbank);			int customerNumber4 = bankgroupBean.createCustomer("André", "Pflüger", "Äußere Schneeberger Straße 31", "08056", "Zwickau");			System.out.println("Kunde angelegt, Kundennummer: " + customerNumber1);						//Konten für die 4 Kunden anlegen			bankgroupBean.selectBank(sparkasse);			bankgroupBean.selectCustomer(customerNumber1);			int accountNumber1 = bankgroupBean.createAccount();			System.out.println("Konto erstellen; Kontonummer: " + accountNumber1);			bankgroupBean.selectCustomer(customerNumber2);			int accountNumber2 = bankgroupBean.createAccount();			System.out.println("Konto erstellen; Kontonummer: " + accountNumber2);			bankgroupBean.selectCustomer(customerNumber3);			int accountNumber3 = bankgroupBean.createAccount();			System.out.println("Konto erstellen; Kontonummer: " + accountNumber3);			bankgroupBean.selectBank(commerzbank);			bankgroupBean.selectCustomer(customerNumber4);			int accountNumber4 = bankgroupBean.createAccount();			System.out.println("Konto erstellen; Kontonummer: " + accountNumber4);						//Ausgabe der angelegten Kunden und Konten			bankgroupBean.printCustomers(sparkasse);			bankgroupBean.printCustomers(commerzbank);			bankgroupBean.printAccounts(customerNumber1);			bankgroupBean.printAccounts(customerNumber2);			bankgroupBean.printAccounts(customerNumber3);			bankgroupBean.printAccounts(customerNumber4);						//bewusste Erneuerung des bankgroupBeans			bankgroupBean = null;			System.gc();			bankgroupBean = (Bankgroup) ctx.lookup("BankgroupBean/remote");			System.out.println("bankgroupBean wurde über JNDI neu bezogen.");			//erneute Ausgabe der ueber das vorherige bankgroupBean angelegten Daten			//-> Objektreferenzen sind anders!!! -> Objektreferenzen stammen nicht aus einem Cache, 			//sondern werden ueber den Entitymanager auf jeden Fall gefunden			bankgroupBean.printCustomers(sparkasse);			bankgroupBean.printCustomers(commerzbank);			bankgroupBean.printAccounts(customerNumber1);			bankgroupBean.printAccounts(customerNumber2);			bankgroupBean.printAccounts(customerNumber3);			bankgroupBean.printAccounts(customerNumber4);						//Kontoaktivitaeten fuer Kunde 1 bei der Sparkasse vortaeuschen			String statements = "";			if (bankgroupBean.selectBank(sparkasse)) {				if (bankgroupBean.selectCustomer(customerNumber1)) {					bankgroupBean.deposit(accountNumber1, 500); //, "00000");					bankgroupBean.withdraw(accountNumber1, 200); //, "00000");					bankgroupBean.deposit(accountNumber1, 800); //, "00000");					bankgroupBean.withdraw(accountNumber1, 100); //, "00000");					//Kontoauszug ueber die 4 Aktionen					//-> duerfen dann beim naechsten Kontoauszug nicht mehr auftauchen					statements = bankgroupBean.getStatement(accountNumber1);					System.out.println("Kontoauszug \n-----------\n" + statements);					bankgroupBean.deposit(accountNumber1, 500); //, "00000");					bankgroupBean.withdraw(accountNumber1, 1200); //, "00000");	  										//wieder bewusste Dereferenzierung des BankgroupBeans					//->Nachweis, dass alle Kontowerte (auch Kontoauszugszust�nde (bereits gedruckte werden					//nicht noch einmal gedruckt) persistent sind und nicht in irgendeinem Cache vorliegen					bankgroupBean = null;					System.gc();					bankgroupBean = (Bankgroup) ctx.lookup("BankgroupBean/remote");					System.out.println("bankgroupBean wurde über JNDI neu bezogen.\n");					//hier keine erneute Ueberpruefung, da es oben schon funktioniert hat					bankgroupBean.selectBank(sparkasse);					bankgroupBean.selectCustomer(customerNumber1);										statements = bankgroupBean.getStatement(accountNumber1);					System.out.println("Kontoauszug \n-----------\n" + statements);					statements = bankgroupBean.getStatement(accountNumber1);					System.out.println("Kontoauszug \n-----------\n" + statements);					if (bankgroupBean.getBalance(accountNumber1) == 300) {						System.out.println("Kontostand 1 ist richtig");					} else {						System.err.println("Kontostand 1 ist falsch");					}				} else {					System.out.println("Auswahl des Kunden mit der Nummer " + customerNumber2 + " bei der Bank " + sparkasse + " ist nicht m�glich.");				}			} else {				System.out.println("Bank " + sparkasse + " konnte nicht ausgew�hlt werden.");			}						//erneute Dereferenzierung			bankgroupBean = null;			System.gc();			bankgroupBean = (Bankgroup) ctx.lookup("BankgroupBean/remote");			System.out.println("bankgroupBean wurde über JNDI neu bezogen.\n");			//wieder andere Objektreferenzen, aber alle Daten sind vorhanden			bankgroupBean.printCustomers(sparkasse);			bankgroupBean.printCustomers(commerzbank);			bankgroupBean.printAccounts(customerNumber1);			bankgroupBean.printAccounts(customerNumber2);			bankgroupBean.printAccounts(customerNumber3);			bankgroupBean.printAccounts(customerNumber4);						//Kontoaktivit�ten f�r Kunde 2 bei der Sparkasse vort�uschen			if (bankgroupBean.selectBank(sparkasse)) {				if (bankgroupBean.selectCustomer(customerNumber2)) {					bankgroupBean.deposit(accountNumber2, 500); //, "00000");					bankgroupBean.withdraw(accountNumber2, 200); //, "00000");					bankgroupBean.deposit(accountNumber2, 800); //, "00000");					bankgroupBean.withdraw(accountNumber2, 100); //, "00000");					statements = bankgroupBean.getStatement(accountNumber2);					System.out.println("Kontoauszug \n-----------\n" + statements);					bankgroupBean.deposit(accountNumber2, 500); //, "00000");					bankgroupBean.withdraw(accountNumber2, 500); //, "00000");	      					statements = bankgroupBean.getStatement(accountNumber2);					System.out.println("Kontoauszug \n-----------\n" + statements);					statements = bankgroupBean.getStatement(accountNumber2);					System.out.println("Kontoauszug \n-----------\n" + statements);					if (bankgroupBean.getBalance(accountNumber2) == 1000) {						System.out.println("Kontostand 2 ist richtig");					} else {						System.err.println("Kontostand 2 ist falsch");					}				} else {					System.out.println("Auswahl des Kunden mit der Nummer " + customerNumber2 + " bei der Bank " + sparkasse + " ist nicht m�glich.");				}			} else {				System.out.println("Bank " + sparkasse + " konnte nicht ausgewählt werden.");			}						//Kontoaktivitaeten fuer Kunde 3 vortaeuschen (auch mal ohne vorherige Dereferenzierung)			if (bankgroupBean.selectCustomer(customerNumber3)) {				bankgroupBean.deposit(accountNumber3, 500); //, "00000");				bankgroupBean.withdraw(accountNumber3, 200); //, "00000");				bankgroupBean.deposit(accountNumber3, 800); //, "00000");				bankgroupBean.withdraw(accountNumber3, 100); //, "00000");				statements = bankgroupBean.getStatement(accountNumber3);				System.out.println("Kontoauszug \n-----------\n" + statements);				bankgroupBean.deposit(accountNumber3, 500); //, "00000");				bankgroupBean.withdraw(accountNumber3, 1400); //, "00000");  				statements = bankgroupBean.getStatement(accountNumber3);				System.out.println("Kontoauszug \n-----------\n" + statements);				statements = bankgroupBean.getStatement(accountNumber3);				System.out.println("Kontoauszug \n-----------\n" + statements);				if (bankgroupBean.getBalance(accountNumber3) == 100) {					System.out.println("Kontostand 3 ist richtig");				} else {					System.err.println("Kontostand 3 ist falsch");				}			} else {				System.out.println("Auswahl des Kunden mit der Nummer " + customerNumber3 + " bei der Bank " + sparkasse + " ist nicht möglich.");			}						//Kontoaktivitaeten fuer Kunde 4 vortaeuschen			if (bankgroupBean.selectBank(commerzbank)) {				if (bankgroupBean.selectCustomer(customerNumber4)) {					bankgroupBean.deposit(accountNumber4, 500); //, "00000");					bankgroupBean.withdraw(accountNumber4, 300); //, "00000");					bankgroupBean.deposit(accountNumber4, 800); //, "00000");					bankgroupBean.withdraw(accountNumber4, 100); //, "00000");					statements = bankgroupBean.getStatement(accountNumber4);					System.out.println("Kontoauszug \n-----------\n" + statements);					bankgroupBean.deposit(accountNumber4, 500); //, "00000");					bankgroupBean.withdraw(accountNumber4, 1400); //, "00000");  					statements = bankgroupBean.getStatement(accountNumber4);					System.out.println("Kontoauszug \n-----------\n" + statements);					statements = bankgroupBean.getStatement(accountNumber4);					System.out.println("Kontoauszug \n-----------\n" + statements);					if (bankgroupBean.getBalance(accountNumber4) == 0) {						System.out.println("Kontostand 4 ist richtig\n\n");					} else {						System.err.println("Kontostand 4 ist falsch\n\n");					}				} else {					System.out.println("Auswahl des Kunden mit der Nummer " + customerNumber4 + " bei der Bank " + commerzbank + " ist nicht möglich.");				}			} else {				System.out.println("Bank " + commerzbank + " konnte nicht ausgewählt werden.");			}						//Geldtransfer innerhalb einer Bank			//im bankgroupBean muss die Bank des Quellkontos mit dem entsprechenden Besitzer ausgewaehlt sein	            			bankgroupBean.selectBank(sparkasse);			bankgroupBean.selectCustomer(customerNumber2);			bankgroupBean.bankTransfer(accountNumber2, sparkasse, customerNumber3, accountNumber3, 600.0f); //, "00000");			float balance1 = bankgroupBean.getBalance(accountNumber2);			bankgroupBean.selectCustomer(customerNumber3);			float balance2 = bankgroupBean.getBalance(accountNumber3);			if (balance1 == 400 && balance2 == 700) {				System.out.println("Geldtransfer ist korrekt abgelaufen.");			} else {				System.err.println("Geldtransfer ist fehlgeschlagen.");			}						//Geldtransfer zwischen zwei verschiedenen Banken			bankgroupBean.bankTransfer(accountNumber3, commerzbank, customerNumber4, accountNumber4, 600.0f); //, "00000");       			balance2 = bankgroupBean.getBalance(accountNumber3);			bankgroupBean.selectBank(commerzbank);			bankgroupBean.selectCustomer(customerNumber4);			balance1 = bankgroupBean.getBalance(accountNumber4);			if (balance1 == 600 && balance2 == 100) {				System.out.println("Geldtransfer ist korrekt abgelaufen.");			} else {				System.err.println("Geldtransfer ist fehlgeschlagen.");			}						//die Kontoauszuege dazu			bankgroupBean.selectBank(sparkasse);			bankgroupBean.selectCustomer(customerNumber2);			statements = bankgroupBean.getStatement(accountNumber2);			System.out.println("Kontoauszug \n-----------\n" + statements);			bankgroupBean.selectCustomer(customerNumber3);			statements = bankgroupBean.getStatement(accountNumber3);			System.out.println("Kontoauszug \n-----------\n" + statements);			bankgroupBean.selectBank(commerzbank);			bankgroupBean.selectCustomer(customerNumber4);			statements = bankgroupBean.getStatement(accountNumber4);			System.out.println("Kontoauszug \n-----------\n" + statements);						//mal ein paar Versuche zur Datenkonsistenz			//Auswahl der Sparkasse mit Kunde 4			bankgroupBean.selectBank(sparkasse);			if (bankgroupBean.selectCustomer(customerNumber4)) {				System.err.println("Auswahl des Kunden mit der Nummer " + customerNumber4 + " bei der Bank " + sparkasse + " war erfolgreich.");			} else {				System.out.println("Auswahl des Kunden mit der Nummer " + customerNumber4 + " bei der Bank " + sparkasse + " ist nicht möglich.");			}			//Auswahl der Commerzbank mit Kunde 1 (eigentlich derselbe Kunde, aber nur von den Werten her)			bankgroupBean.selectBank(commerzbank);			if (bankgroupBean.selectCustomer(customerNumber1)) {				System.err.println("Auswahl des Kunden mit der Nummer " + customerNumber1 + " bei der Bank " + commerzbank + " war erfolgreich.");			} else {				System.out.println("Auswahl des Kunden mit der Nummer " + customerNumber1 + " bei der Bank " + commerzbank + " ist nicht möglich.");			}					} catch (Exception e) {			e.printStackTrace();		}			}	/* PROTECTED REGION END */}