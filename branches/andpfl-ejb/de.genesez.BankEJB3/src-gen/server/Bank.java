package server;/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998531406_106008_477OwnManualImports) ENABLED START *//* TODO: put your own source code here */import javax.persistence.GeneratedValue;import javax.persistence.GenerationType;import javax.persistence.CascadeType;import javax.persistence.Entity;import javax.persistence.Table;import javax.persistence.ManyToMany;import java.io.Serializable;import javax.persistence.Id;/* PROTECTED REGION END *//** * The bank class adminstrates bank customers. It has a unique bankcode, a name and contains to a bankgroup. * @author	X */@Entity@Table(name = "tbl_Bank")public class Bank implements Serializable {		/**	 * generated variable, constant and association declarations	 *	 */	/**	 * @generated	attribute definition	 */		@Id	@GeneratedValue(strategy = GenerationType.AUTO)	private int bankcode;	/**	 * @generated	attribute definition	 */		private String name;	/**	 * variable for association to customers	 */		@ManyToMany(cascade = {		CascadeType.ALL	}, mappedBy = "banks")	private java.util.Set<Customer> customers = new java.util.HashSet<Customer>();		/**	 * generated constructor implementations	 *	 */	/**	 * @generated	constructor for class '<em><b>Bank</b></em>'	 * @param	name		 */	public Bank(String name) {		/* PROTECTED REGION ID(java.constructor._14_0_590059_1208003529884_972611_1245) ENABLED START */		// TODO: implementation of constructor for class 'Bank'		this.name = name;		/* PROTECTED REGION END */	}		/**	 * @generated	constructor for class '<em><b>Bank</b></em>'	 */	public Bank() {		/* PROTECTED REGION ID(java.constructor.StandardConstructorBank) ENABLED START */		// TODO: implementation of constructor for class 'Bank'		this.name = "<kein Bankname vergeben>";		/* PROTECTED REGION END */	}		/**	 * generated derived attribute method implementations	 *	 */		/**	 * generated association method implementations	 *	 */	public java.util.Set<Customer> getCustomers() {		return java.util.Collections.unmodifiableSet(customers);	}		/**	 * accessor for association to customers	 */	public void insertInCustomers(Customer customers) {		if (this.customers.contains(customers)) {			return;		}		this.customers.add(customers);		customers.insertInBanks(this);	}		/**	 * accessor for association to customers	 */	public void removeFromCustomers(Customer customers) {		if (!this.customers.contains(customers)) {			return;		}		this.customers.remove(customers);		customers.removeFromBanks(this);	}		/**	 * generated abstract method declaration	 *	 */		/**	 * generated normal method implementations	 *	 */		/**	 * @generated	method stub for further implementation	 * @param	customerNumber		 * @return		 */	protected boolean existCustomer(int customerNumber) {		/* PROTECTED REGION ID(java.implementation._14_0_590059_1208003656336_875743_1252) ENABLED START */		// TODO: implementation of method 'Bank.existCustomer(...)'		boolean returnValue = false;		for (Customer customer : customers) {			if (customer.getCustomerNumber() == customerNumber) {				return true;			}		}		return returnValue;		/* PROTECTED REGION END */	}		/**	 * @generated	method stub for further implementation	 */	protected void printCustomers() {		/* PROTECTED REGION ID(java.implementation._14_0_590059_1208003740366_294383_1261) ENABLED START */		// TODO: implementation of method 'Bank.printCustomers(...)'		System.out.println(customers.toString());		/* PROTECTED REGION END */	}		/**	 * @generated	method stub for further implementation	 * @param	other		 * @return		 */	public boolean equals(Object other) {		/* PROTECTED REGION ID(java.implementation._14_0_590059_1208003793002_954880_1265) ENABLED START */		// TODO: implementation of method 'Bank.equals(...)'		if (!(other instanceof Bank)) {			return false;		} else {			Bank temp = (Bank) other;			return this.name.equals(temp.getName());		}				/* PROTECTED REGION END */	}		/**	 * @generated	method stub for further implementation	 * @param	customerNumber		 * @return		 */	protected Customer getCustomer(int customerNumber) {		/* PROTECTED REGION ID(java.implementation._14_0_590059_1208213860269_352711_491) ENABLED START */		// TODO: implementation of method 'Bank.getCustomer(...)'		Customer returnValue = null;		try {			for (Customer customer : customers) {				if (customer.getCustomerNumber() == customerNumber) {					return customer;				}			}		} catch (NullPointerException npe) {			System.out.println("Kunden heraussuchen: " + npe.toString());			return null;		}		return returnValue;		/* PROTECTED REGION END */	}		/**	 * generated getter and setter method implementations	 *	 */	/**	 * @generated	getter for the attribute '<em><b>bankcode</b></em>'	 */	public int getBankcode() {		return bankcode;	}		/**	 * documented here {@link getBankcode()}	 * @generated	setter method for the attribute '<em><b>bankcode</b></em>'	 */	public void setBankcode(int bankcode) {		this.bankcode = bankcode;	}		/**	 * @generated	getter for the attribute '<em><b>name</b></em>'	 */	public String getName() {		return name;	}		/**	 * documented here {@link getName()}	 * @generated	setter method for the attribute '<em><b>name</b></em>'	 */	public void setName(String name) {		this.name = name;	}		/**	 * generated methods from the implementing interface(s)	 * Serializable	 *	 */		/**	 * own implementations	 *	 */	/* PROTECTED REGION ID(java.mclassifier.implementation.owncode.code._14_0_590059_1207998531406_106008_477) ENABLED START */	/* TODO put your own implementation code here */	/**	 * @param  customerNumber  	 * @return  	 */	//	protected int createAccount(int customerNumber) {	//			//		int returnValue = 0;	//		Customer customer = getCustomer(customerNumber);	//		try {	//			Account account = new Account();	//			if (customer.addAccount(account)) {	//				return account.getAccountNumber();	//			} else {	//				returnValue = -2;	//			}	//		} catch (NullPointerException npe) {	//			System.out.println(npe.toString());	//			return -2;	//		}	//		return returnValue;	//	}	/**	 * @param  customer  	 * @return  	 */	//	protected boolean addCustomer(Customer customer) {	//			//		boolean returnValue = false;	//		if (!customers.contains(customer)) {	//			customers.add(customer);	//			returnValue = true;	//		} else {	//			returnValue = false;	//		}	//		return returnValue;	//	}	/**	 * @param  customerNumber  	 * @return  	 */	//	protected boolean removeCustomer(int customerNumber) {	//			//		boolean returnValue = false;	//		try {	//			Iterator<Customer> it = customers.iterator();	//			while (it.hasNext()) {	//				Customer temp = it.next();	//				if (temp.getCustomerNumber() == customerNumber) {	//					customers.remove(temp);	//					returnValue = true;	//					break;	//				}	//			}	//		} catch (NullPointerException npe) {	//			System.out.println(npe.toString());	//			return false;	//		}	//		return returnValue;	//	}	/* PROTECTED REGION END */}