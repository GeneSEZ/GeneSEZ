package server;/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658OwnManualImports) ENABLED START *//* TODO: put your own source code here */import javax.persistence.FetchType;import javax.persistence.GeneratedValue;import javax.persistence.GenerationType;import javax.persistence.ManyToOne;import javax.persistence.CascadeType;import javax.persistence.Entity;import javax.persistence.Table;import java.io.Serializable;import javax.persistence.Id;import javax.persistence.OneToMany;import java.util.Iterator;/* PROTECTED REGION END *//** * @author X */@Entity@Table(name = "tbl_Customer")public class Customer implements Serializable {		/**	 * generated variable, constant and association declarations	 *	 */		@Id	@GeneratedValue(strategy = GenerationType.AUTO)	private int customerNumber;		private String firstname;		private String sirname;		private String address;		private String postalCode;		private String city;	/**	 * variable for association to accounts	 */		@OneToMany(cascade = {		CascadeType.ALL	}, fetch = FetchType.EAGER, mappedBy = "owner")	private java.util.Set<Account> accounts = new java.util.HashSet<Account>();	/**	 * variable for association to bank	 */		@ManyToOne(cascade = {		CascadeType.ALL	}, fetch = FetchType.EAGER)	private Bank bank;		/**	 * generated constructor implementations	 *	 */	/**	 * @param  firstname  	 * @param  sirname  	 * @param  address  	 * @param  postalCode  	 * @param  city  	 */	public Customer(String firstname, String sirname, String address, String postalCode, String city) {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1208003925192_273415_1281) ENABLED START */		/* TODO put your own implementation code here */		this.firstname = firstname;		this.sirname = sirname;		this.postalCode = postalCode;		this.city = city;		this.address = address;		//this.createCustomerNumber();		/* PROTECTED REGION END */	}		/**	 * @return  	 */	public Customer() {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code.StandardConstructorCustomer) ENABLED START */		/* TODO put your own implementation code here */		this.firstname = "";		this.sirname = "";		this.postalCode = "";		this.city = "";		this.address = "";		//this.createCustomerNumber();		/* PROTECTED REGION END */	}		/**	 * generated derived attribute method implementations	 *	 */		/**	 * generated association method implementations	 *	 */		public java.util.Set<Account> getAccounts() {		return java.util.Collections.unmodifiableSet(accounts);	}		/**	 * accessor for association to accounts	 */	public void insertInAccounts(Account accounts) {		if (this.accounts.contains(accounts)) {			return;		}		this.accounts.add(accounts);		accounts.setOwner(this);	}		/**	 * accessor for association to accounts	 */	public void removeFromAccounts(Account accounts) {		if (!this.accounts.contains(accounts)) {			return;		}		this.accounts.remove(accounts);	}		public Bank getBank() {		return bank;	}		/**	 * accessor for association to bank	 */		/**	 * accessor for association to bank	 */	public void setBank(Bank bank) {		this.bank = bank;	}		/**	 * accessor for association to bank	 */		/**	 * generated abstract method declaration	 *	 */		/**	 * generated normal method implementations	 *	 */		/**	 * @param  accountNumber  	 * @return  	 */	protected boolean existAccount(int accountNumber) {				boolean returnValue = false;		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1208003945391_877977_1288_Customer) ENABLED START */		/* TODO put your own implementation code here */		Iterator<Account> it = accounts.iterator();		while (it.hasNext()) {			Account temp = it.next();			if (temp.getAccountNumber() == accountNumber) {				returnValue = true;			}		}		/* PROTECTED REGION END */		return returnValue;	}		/**	 * @param  other  	 * @return  	 */	public boolean equals(Object other) {				boolean returnValue = false;		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1208003970407_796163_1292_Customer) ENABLED START */		/* TODO put your own implementation code here */		if (other instanceof Customer) {			Customer temp = (Customer) other;			if (this.sirname.equals(temp.getSirname()) && this.firstname.equals(temp.getFirstname())) {				returnValue = true;			}		}		/* PROTECTED REGION END */		return returnValue;	}		/**	 */	protected void printAccounts() {				/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1208213007052_920060_483_Customer) ENABLED START */		/* TODO put your own implementation code here */		System.out.println(accounts.toString());		/* PROTECTED REGION END */	}		/**	 * @param  accountNumber  	 * @return  	 */	protected Account getAccount(int accountNumber) {				Account returnValue = null;		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1208213952221_534951_499_Customer) ENABLED START */		/* TODO put your own implementation code here */		Iterator<Account> it = accounts.iterator();		while (it.hasNext()) {			Account temp = it.next();			if (temp.getAccountNumber() == accountNumber) {				returnValue = temp;			}		}		/* PROTECTED REGION END */		return returnValue;	}		/**	 * generated getter and setter method implementations	 *	 */		public int getCustomerNumber() {		return customerNumber;	}		public String getFirstname() {		return firstname;	}		public void setFirstname(String _firstname) {		firstname = _firstname;	}		public String getSirname() {		return sirname;	}		public void setSirname(String _sirname) {		sirname = _sirname;	}		public String getAddress() {		return address;	}		public void setAddress(String _address) {		address = _address;	}		public String getPostalCode() {		return postalCode;	}		public void setPostalCode(String _postalCode) {		postalCode = _postalCode;	}		public String getCity() {		return city;	}		public void setCity(String _city) {		city = _city;	}		/**	 * generated methods from the implementing interface(s)	 * Serializable	 *	 */		/**	 * own implementations	 *	 */	/* PROTECTED REGION ID(java.mclassifier.implementation.owncode.code._14_0_590059_1207998915198_123982_658) ENABLED START */	/* TODO put your own implementation code here */	/**	 * @param  account  	 * @return  	 */	//	protected boolean addAccount(Account account) {	//			//		boolean returnValue = false;	//		if (account != null && this.accounts.add(account)) {	//			returnValue = true;	//		}	//		return returnValue;	//	}	/**	 * @param  accountNumber  	 * @return  	 */	//	protected boolean removeAccount(int accountNumber) {	//			//		boolean returnValue = false;	//		Iterator<Account> it = accounts.iterator();	//		while (it.hasNext()) {	//			Account temp = it.next();	//			if (temp.getAccountNumber() == accountNumber) {	//				accounts.remove(temp);	//				returnValue = true;	//				break;	//			}	//		}	//		return returnValue;	//	}	/* PROTECTED REGION END */}