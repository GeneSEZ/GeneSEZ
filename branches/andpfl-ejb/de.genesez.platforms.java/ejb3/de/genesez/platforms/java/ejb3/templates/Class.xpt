«REM»
	Template for ejb3-Class
	
	@author	André Pflüger
	@date	2008/04/22
	- todo 1: implement all ejb3 stereotypes
	- todo 2: check use of getter/setter of java5::Class.xpt
	- todo 3: check use of asAttributeName() instead of ids.name
«ENDREM»

«REM» import code gen meta model «ENDREM»
«IMPORT genesezMM»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION de::genesez::io::io»

«EXTENSION de::genesez::common::AccessHelper»
«EXTENSION de::genesez::common::Conversion»
«EXTENSION de::genesez::common::GeneralHelper»
«EXTENSION de::genesez::common::typemapping::TypeMapping»

«EXTENSION de::genesez::platforms::java::scripts::Type»
«EXTENSION de::genesez::platforms::java::scripts::Naming»
«EXTENSION de::genesez::platforms::java::scripts::Conversion»



«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM» evaluate stereotypes for classes «ENDREM»
«DEFINE Annotation FOR MClass»
	«REM» PersistentEntity «ENDREM»
	«IF hasStereotype("ejb3PersistentEntity")»
		@Entity
		@Table(
		«IF !hasTaggedValue("ejb3PersistentEntity", "tableName", "null")-»
			name="«taggedValue.selectFirst(e|e.tag.name == "tableName").value»"
		«ELSE-»
			name="«mapName()»"
		«ENDIF-»
		«IF !hasTaggedValue("ejb3PersistentEntity", "tableCatalog", "null")-»
			, catalog = "«taggedValue.selectFirst(e|e.tag.name == "tableCatalog").value»"
		«ENDIF-»
		«IF !hasTaggedValue("ejb3PersistentEntity", "tableSchema", "null")-»
			, schema = "«taggedValue.selectFirst(e|e.tag.name == "tableSchema").value»"
		«ENDIF-»
		)
	«ENDIF»
	
	«REM» SessionBean «ENDREM»
	«IF hasTaggedValue("ejb3SessionBean", "remote", "true")»
		@Remote
		«IF !hasTaggedValue("ejb3SessionBean", "remoteInterface", "null")-»
			(«taggedValue.selectFirst(e|e.tag.name == "remoteInterface").value».class)
		«ENDIF»
	«ELSEIF hasTaggedValue("ejb3SessionBean", "remote", "false") && !hasTaggedValue("ejb3SessionBean", "localInterface", "null")»
		@Local(«taggedValue.selectFirst(e|e.tag.name == "localInterface").value».class)
	«ENDIF»	
	«IF hasTaggedValue("ejb3SessionBean", "stateful", "true")»
		«IF hasTaggedValue("ejb3SessionBean", "name")»
			@Stateful(name = "«taggedValue.selectFirst(e|e.tag.name == "name").value»") 
 		«ELSE»
			@Stateful
		«ENDIF»
	«ELSEIF hasTaggedValue("ejb3SessionBean", "stateful", "false")»
		«IF hasTaggedValue("ejb3SessionBean", "name")»
			@Stateless(name = "«taggedValue.selectFirst(e|e.tag.name == "name").value»") 
 		«ELSE»
			@Stateless
		«ENDIF»
	«ENDIF»	
	
	«REM» MessageDriven «ENDREM»
	«IF hasStereotype("ejb3MessageDrivenBean")»
		@MessageDriven
	«ENDIF»
	
	«REM» container-managed transaction demarcation «ENDREM»	
	«EXPAND Operation::CMTransactionality»
	
	«REM» primary key «ENDREM»
	«IF hasStereotype("ejb3PrimaryKey")»

		«REM» primary key with extern primary key class «ENDREM»
		«IF !hasTaggedValue("ejb3PrimaryKey", "idClass", "null")»
			@IdClass(«mapName()»PK.class)
			«EXPAND _PrimaryKeyClass»
		«ENDIF»
		«REM» primary key with embedded primary key class «ENDREM»
		«IF hasTaggedValue("ejb3PrimaryKey", "embeddable", "true")»
			@Embeddable
		«ENDIF»		
	«ENDIF»	
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»
«REM» creates a primary key class for stereotype "idClass" «ENDREM»
«DEFINE _PrimaryKeyClass FOR MClass-»
	«FILE getFilename("", "PK")-»
		package «getPackagePath()»;
		public class «mapName()+"PK"-» implements java.io.Serializable {
			«FOREACH property.select(e|e.hasTaggedValue("ejb3PrimaryKey", "id", "true")) AS ids»
				private «ids.type.mapName()» «ids.name»;
			«ENDFOREACH»
			public «mapName()+"PK"-»() {}
			public «mapName()+"PK"-»(
			«FOREACH property.select(e|e.hasTaggedValue("ejb3PrimaryKey", "id", "true")) AS ids SEPARATOR ", "-»
				«ids.type.mapName()» «ids.name»
			«ENDFOREACH-») {
				«FOREACH property.select(e|e.hasTaggedValue("ejb3PrimaryKey", "id", "true")) AS ids SEPARATOR ";"-»
					this.«ids.name» = «ids.name»
				«ENDFOREACH-»;
			}
			
			«FOREACH property.select(e|e.hasTaggedValue("ejb3PrimaryKey", "id", "true")) AS ids»
				public «ids.type.mapName()» «asGetter(ids.name)»() {
					return «ids.name»;
				}
			«ENDFOREACH»
			«FOREACH property.select(e|e.hasTaggedValue("ejb3PrimaryKey", "id", "true")) AS ids»
				public  void «asSetter(ids.name)»(«ids.type.mapName()» «ids.name») {
					this.«ids.name» = «ids.name»;
				}	
			«ENDFOREACH»
			public boolean equals(Object obj){
				if (obj == this) return true;
				if (!(obj instanceof «mapName()+"PK"-»)) return false;
				«mapName()+"PK"-» pk = («mapName()+"PK"-») obj;
				return ( 
				«FOREACH property.select(e|e.hasTaggedValue("ejb3PrimaryKey", "id", "true")) AS ids SEPARATOR "&&"-»
					this.«ids.name»
					«IF isPrimitiveDatatype(ids.type.mapName())-»
						 == pk.«ids.name»
					«ELSE-»
						.equals(pk.«ids.name-»)
					«ENDIF-»
				«ENDFOREACH-»
				);
			}
			
			public int hashCode() {
				return (int)
				«FOREACH property.select(e|e.hasTaggedValue("ejb3PrimaryKey", "id", "true")) AS ids SEPARATOR "+"-»
					this.«ids.name-»
					«IF !isPrimitiveDatatype(ids.type.mapName())-»
						.hashCode()
					«ENDIF-»	
				«ENDFOREACH-»
				;				
			}
		}
	«ENDFILE»
	
	«REM» 
	«FOREACH "[Name, name]".getArrayElements() AS ids SEPARATOR "//und"»
		//«ids»
	«ENDFOREACH»	
	«ENDREM»
«ENDDEFINE»