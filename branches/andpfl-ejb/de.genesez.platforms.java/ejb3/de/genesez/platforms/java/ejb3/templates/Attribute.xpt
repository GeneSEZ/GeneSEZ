«REM»
	Template for ejb3-Attributes
	
	@author		andre pflueger
	@date		2008/09/08
«ENDREM»

«REM» import code gen meta model «ENDREM»
«IMPORT gcore»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION de::genesez::platforms::common::log::Log»

«EXTENSION de::genesez::platforms::common::AccessHelper»
«EXTENSION de::genesez::platforms::common::Conversion»
«EXTENSION de::genesez::platforms::common::GeneralHelper»
«EXTENSION de::genesez::platforms::common::typemapping::TypeMapping»

«EXTENSION de::genesez::platforms::java::scripts::Type»
«EXTENSION de::genesez::platforms::java::scripts::Naming»
«EXTENSION de::genesez::platforms::java::scripts::Conversion»
«EXTENSION de::genesez::platforms::java::ejb3::scripts::Stereotypes»
«EXTENSION de::genesez::platforms::java::ejb3::scripts::SessionBeanInterfaces»
«EXTENSION de::genesez::platforms::java::ejb3::scripts::AccessHelper»
«EXTENSION de::genesez::platforms::java::ejb3::scripts::Conversion»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	generate attributes for a classifier
«ENDREM»
«DEFINE AttributeDecl FOR MClassifier-»
	«EXPAND AttributeDecl FOREACH property.typeSelect(MAttribute).select(e|e.static && !e.derived)-»
	«EXPAND AttributeDecl FOREACH property.typeSelect(MAttribute).select(e|!e.static && !e.derived)-»
«ENDDEFINE»

«REM»
	generate a declaration for an attribute
«ENDREM»
«DEFINE AttributeDecl FOR MAttribute-»
	«EXPAND de::genesez::platforms::java::java5::templates::Comment::Attribute-»	
	«EXPAND _Annotation-»
	«IF multiplicity == 1-»
		«EXPAND de::genesez::platforms::java::java5::templates::Attribute::_Modifier» «type.asTypeName()»«EXPAND de::genesez::platforms::java::java5::templates::Type::Generics» «asAttribute()» «EXPAND de::genesez::platforms::java::java5::templates::Attribute::_DefaultValue»;
	«ELSE-»
		«IF !hasStereotype("ejb3Association")-»
			@org.hibernate.annotations.CollectionOfElements
		«ENDIF-»
		«EXPAND de::genesez::platforms::java::java5::templates::Attribute::_Modifier» «mapType()-»<«this.type.asTypeName()»> «asAttribute()» = new «mapType("Implementation")»<«this.type.asTypeName()»>();
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluates the stereotype ejb3PrimaryKey
	is used by attribute and operation
 «ENDREM»
«DEFINE PrimaryKey(MClassifier classifier) FOR MElement»
	«REM» simple primary key «ENDREM»
	«IF hasStereotype("ejb3PrimaryKey")»
		@Id
	«ENDIF»
	«REM» 
		look for primary key in superclass
		if the names are equal there must be an column annotation with insertable = false
		and updatable = false
		otherwise there will be a mapping error because hibernate tries to map the
		primary key of the superclass and of the subclass in the same column
		Per derfault there is no need for an primary key in the derived class
	«ENDREM»
	«IF classifier.generalization.typeSelect(MClassifier).property.exists(e|e.name == name 
		&& e.hasStereotype("ejb3PrimaryKey"))-»
		«IF !hasStereotype("ejb3Column")-»
			«addColumnForPrimaryKeyInheritance(classifier) -> ""-»
		«ELSE»
			«stereotype.selectFirst(e|e == "ejb3Column").taggedValue.selectFirst(e|e == "insertable").setValue("false")-»
			«stereotype.selectFirst(e|e == "ejb3Column").taggedValue.selectFirst(e|e == "updatable").setValue("false")-»
		«ENDIF»
	«ENDIF»

	«REM» composed primary key «ENDREM»
	«IF hasTaggedValue("ejb3PrimaryKey", "embeddedId", "true")»
		@EmbeddedId
	«ENDIF»
	
	«REM» generation of primary keys «ENDREM»
	«IF hasStereotype("ejb3TableGenerator") && hasUtilizableValue("ejb3TableGenerator", "name")-»
		@TableGenerator(name="«getTaggedValue("ejb3TableGenerator", "name")-»"
		«IF hasUtilizableValue("ejb3TableGenerator", "table")-»
			, table="«getTaggedValue("ejb3TableGenerator", "table")-»"
		«ENDIF-»
		«IF hasUtilizableValue("ejb3TableGenerator", "pkColumnName")-»
			, pkColumnName="«getTaggedValue("ejb3TableGenerator", "pkColumnName")-»"
		«ENDIF-»
		«IF hasUtilizableValue("ejb3TableGenerator", "valueColumnName")-»
			, valueColumnName="«getTaggedValue("ejb3TableGenerator", "valueColumnName")-»"
		«ENDIF-»	
		«IF hasUtilizableValue("ejb3TableGenerator", "pkColumnValue")-»
			, pkColumnValue="«getTaggedValue("ejb3TableGenerator", "pkColumnValue")-»"
		«ENDIF-»	
		«IF hasUtilizableValue("ejb3TableGenerator", "initialValue")-»
			, initialValue = «getTaggedValue("ejb3TableGenerator", "initialValue")-»
		«ENDIF-»
		«IF hasUtilizableValue("ejb3TableGenerator", "allocationSize")-»
			, allocationSize = «getTaggedValue("ejb3TableGenerator", "allocationSize")-»
		«ENDIF»
		)	
	«ENDIF»
	«IF hasStereotype("ejb3SequenceGenerator") && hasUtilizableValue("ejb3SequenceGenerator", "name")-»
		@SequenceGenerator(name="«getTaggedValue("ejb3SequenceGenerator", "name")-»"
		«IF hasUtilizableValue("ejb3SequenceGenerator", "sequenceName")-»
			, sequenceName="«getTaggedValue("ejb3SequenceGenerator", "sequenceName")-»"
		«ENDIF-»	
		«IF hasUtilizableValue("ejb3SequenceGenerator", "initialValue")-»
			, initialValue = «getTaggedValue("ejb3SequenceGenerator", "initialValue")-»
		«ENDIF-»
		«IF hasUtilizableValue("ejb3SequenceGenerator", "allocationSize")-»
			, allocationSize = «getTaggedValue("ejb3SequenceGenerator", "allocationSize")-»
		«ENDIF-»)
	«ENDIF»
	«IF hasTaggedValue("ejb3PrimaryKey", "generatedValue", "true")-»
		@GeneratedValue(strategy=GenerationType.«getTaggedValue("ejb3PrimaryKey", "strategy")-»
		«IF hasTaggedValue("ejb3PrimaryKey", "strategy", "TABLE") || hasTaggedValue("ejb3PrimaryKey", "strategy", "SEQUENCE")-»
			«IF hasUtilizableValue("ejb3PrimaryKey", "generatorName")-»
				, generator="«getTaggedValue("ejb3PrimaryKey", "generatorName")-»"
			«ENDIF-»
		«ENDIF-»	
		)
	«ENDIF»
«ENDDEFINE»

«REM» 
	evaluates the stereotype ejb3Column
	is used by attribute and operation
 «ENDREM»
«DEFINE Column FOR MElement»
	«REM» column «ENDREM»
	«IF hasStereotype("ejb3Column")»
		@Column(
		«IF hasUtilizableValue("ejb3Column", "name")-»
			name="«getTaggedValue("ejb3Column", "name")-»"
		«ELSE-»
			name="«type().asTypeName()-»"
		«ENDIF-»
		«IF hasTaggedValue("ejb3Column", "unique", "true")-»
			, unique=true, nullable=false
		«ENDIF-»
		«IF hasTaggedValue("ejb3Column", "nullable", "false") && !hasTaggedValue("ejb3Column", "unique", "true")-»
			, nullable=false
		«ENDIF-»
		«IF hasTaggedValue("ejb3Column", "insertable", "false")-»
			, insertable=false
		«ENDIF-»
		«IF hasTaggedValue("ejb3Column", "updatable", "false")-»
			, updatable=false
		«ENDIF-»
		«IF hasUtilizableValue("ejb3Column", "columnDefinition")-»
			, columnDefinition="«getTaggedValue("ejb3Column", "columnDefinition")-»"
		«ENDIF-»
		«IF hasUtilizableValue("ejb3Column", "table")-»
			, table="«getTaggedValue("ejb3Column", "table")-»"
		«ENDIF-»
		«IF !hasTaggedValue("ejb3Column", "length", "255")-»
			, length=«taggedValue.selectFirst(e|e.tag.name == "length").value-»
		«ENDIF-»
		«IF !hasTaggedValue("ejb3Column", "precision", "0")-»
			, precision=«taggedValue.selectFirst(e|e.tag.name == "precision").value-»
		«ENDIF-»
		«IF !hasTaggedValue("ejb3Column", "scale", "0")-»
			, scale=«taggedValue.selectFirst(e|e.tag.name == "scale").value-»
		«ENDIF-»
		)		
	«ENDIF»
«ENDDEFINE»

«REM» 
	evaluates the stereotype ejb3DatatypeMapping
	is used by attribute and operation
 «ENDREM»
«DEFINE DatatypeMapping FOR MElement»
	«IF hasStereotype("ejb3DatatypeMapping")»
		«IF hasTaggedValue("ejb3DatatypeMapping", "type", "Basic") && (!hasTaggedValue("ejb3DatatypeMapping", "null", "DEFAULT") || hasTaggedValue("ejb3DatatypeMapping", "optional", "true"))»
			@Basic(fetch=FetchType.«taggedValue.selectFirst(e|e.tag.name == "fetch").value-»
			«IF hasTaggedValue("ejb3DatatypeMapping", "optional", "true")-»
			, optional=true
			«ENDIF-»)
		«ENDIF»
		«IF hasTaggedValue("ejb3DatatypeMapping", "type", "Embeddable")»
			@Embeddable
		«ENDIF»
		«IF hasTaggedValue("ejb3DatatypeMapping", "type", "Lob")»
			@Lob
		«ENDIF»
		«IF hasTaggedValue("ejb3DatatypeMapping", "type", "Temporal")»
			@Temporal
			«IF !hasTaggedValue("ejb3DatatypeMapping", "temporalType", "null")-»
				(TemporalType.«taggedValue.selectFirst(e|e.tag.name == "temporalType").value-»)
			«ENDIF»
		«ENDIF»
		«IF hasTaggedValue("ejb3DatatypeMapping", "type", "Enumerated")»
			@Enumerated
			«IF !hasTaggedValue("ejb3DatatypeMapping", "enumType", "ORDINAL")-»
				(«taggedValue.selectFirst(e|e.tag.name == "enumType").value-»)
			«ENDIF»
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the stereotype "ejb3EJB" for classes, attributes and setter operations
«ENDREM»
«DEFINE EJB FOR MElement»
	«IF hasStereotype("ejb3EJB")-»
		@EJB(name=
		«IF hasUtilizableValue("ejb3EJB", "name")-»
			"«getTaggedValue("ejb3EJB", "name")-»"
		«ELSE-»
			"ejb/«name.toFirstUpper()-»"
		«ENDIF-»
		«IF hasUtilizableValue("ejb3EJB", "beanInterface")-»
			, beanInterface=«getTaggedValue("ejb3EJB", "beanInterface")-».class
		«ENDIF-»
		«IF hasUtilizableValue("ejb3EJB", "beanName")-»
			, beanName="«getTaggedValue("ejb3EJB", "beanName")-»"
		«ENDIF-»
		«IF hasUtilizableValue("ejb3EJB", "description")-»
			, description="«getTaggedValue("ejb3EJB", "description")-»"
		«ENDIF-»
		«IF hasUtilizableValue("ejb3EJB", "mappedName")-»
			, mappedName="«getTaggedValue("ejb3EJB", "mappedName")-»"
		«ENDIF-»)
	«ENDIF-»
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»


«REM» evaluate stereotypes for attributes «ENDREM»
«DEFINE _Annotation FOR MAttribute»
	«EXPAND PrimaryKey(this.classifier)»
	«EXPAND Column»	
	«EXPAND DatatypeMapping»
	«EXPAND _Persistence»
	«REM» stereotype "ejb3DiscriminatorValue" «ENDREM»
	«EXPAND Class::DiscriminatorValue-»	
	«EXPAND _WebParam-»
	«REM» 
		stereotype "ejb3EJB" and automatic annotation of EJB for session bean interfaces
		following the naming convention "I + <Name> + {Remote|Local}" 
	«ENDREM»
	«IF !hasStereotype("ejb3EJB")-»
		«IF isSessionBeanInterface(type.asTypeName())-»
			@EJB
		«ENDIF-»
	«ELSE-»
		«EXPAND EJB-»
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate the stereotype ejb3WebParam 
«ENDREM»
«DEFINE _WebParam FOR MAttribute-»
	«IF hasStereotype("ejb3WebParam")-»
		@WebParam(header=
		«IF hasTaggedValue("ejb3WebParam", "header", "true")-»
			true
		«ELSE-»
			false
		«ENDIF»
		«IF hasUtilizableValue("ejb3WebParam", "name")-»
			, name="«getTaggedValue("ejb3WebParam", "name")-»"
		«ENDIF-»
		«IF hasUtilizableValue("ejb3WebParam", "partName")-»
			, partName="«getTaggedValue("ejb3WebParam", "partName")-»"
		«ENDIF-»
		«IF hasUtilizableValue("ejb3WebParam", "targetNamespace")-»
			, targetNamespace="«getTaggedValue("ejb3WebParam", "targetNamespace")-»"
		«ENDIF-»
		«IF hasUtilizableValue("ejb3WebParam", "mode")-»
			, mode="«getTaggedValue("ejb3WebParam", "mode")-»"
		«ENDIF-»)
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate the stereotype ejb3PersistenceContext and ejb3PersistenceUnit 
«ENDREM»
«DEFINE _Persistence FOR MAttribute»
	«IF hasStereotype("ejb3PersistenceContext") && hasUtilizableValue("ejb3PersistenceContext", "type")»
		@PersistemceContexts
		«FOREACH getTaggedValue("ejb3PersistenceContext", "type").getElements() AS types SEPARATOR ","-»
 			@PersistenceContext (
 				type = PersistenceContextType."«types-»"
 				«IF hasUtilizableValue("ejb3PerssistenceContext", "unitName")-»  						
	 				«LET getTaggedValue("ejb3PersistenceContext", "unitName").getElements().indexOf(types) AS index-»
	 					, unitName = "«getTaggedValue("ejb3PersistenceContext", "unitName").getElements().get(index)-»"
	 				«ENDLET»
	 			«ENDIF»
 				«IF hasUtilizableValue("ejb3PerssistenceContext", "name")-»  						
	 				«LET getTaggedValue("ejb3PersistenceContext", "name").getElements().indexOf(types) AS index-»
	 					, name = "«getTaggedValue("ejb3PersistenceContext", "name").getElements().get(index)-»"
	 				«ENDLET-»
	 			«ENDIF-»)	 			
 		«ENDFOREACH-»)		
	«ELSEIF hasStereotype("ejb3PersistenceContext")-»
		@PersistenceContext
	«ELSEIF hasStereotype("ejb3PersistenceUnit") && hasUtilizableValue("ejb3PersistenceUnit", "name") && hasUtilizableValue("ejb3PersistenceUnit", "unitName")-»
		@PersistenceUnits {
		 «FOREACH getTaggedValue("ejb3PersistenceUnit", "name").getElements() AS names SEPARATOR ","-»
 			@PersistenceUnit(
 				name = "«names-»",  						
 				«LET getTaggedValue("ejb3PersistenceUnit", "unitName").getElements().indexOf(names) AS index-»
 					unitName = "«getTaggedValue("ejb3PersistenceUnit", "unitName").getElements().get(index)-»")
 				«ENDLET»
 		«ENDFOREACH-»)
 		}
 	«ELSEIF hasStereotype("ejb3PersistenceUnit")-»
 		@PersistenceUnit
	«ELSEIF type.asTypeName() == "EntityManager"-»
		@PersistenceContext
	«ELSEIF type.asTypeName() == "EntityManagerFactory"-»
		@PersistenceUnit
	«ENDIF-»
«ENDDEFINE»