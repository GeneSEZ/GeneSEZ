import genesezMM;

extension de::genesez::common::AccessHelper;

	
MElement addColumnForPrimaryKeyInheritance(MElement elem, MClassifier classifier) :
	classifier.property.exists(e|e.name == elem.name) 
		? classifier.property.selectFirst(e|e.name == elem.name).makeColumn(classifier.getModel())
		: "";

create MStereotype makeColumn(MProperty elem, MModel container) :
	setName("ejb3Column") ->
	property.add(makeTag("updatable")) ->
	property.add(makeTag("insertable")) ->
	property.add(makeTag("name")) ->
	property.add(makeTag("scale")) ->
	property.add(makeTag("precision")) ->
	property.add(makeTag("length")) ->
	property.add(makeTag("columnDefinition")) ->
	property.add(makeTag("table")) ->	
	property.add(makeTag("nullable")) ->
	property.add(makeTag("unique")) ->
	container.anyStereotype.add(this) ->
	elem.stereotype.add(this) ->
	elem.taggedValue.add(makeTaggedValue("false", makeTag("updatable"))) ->
	elem.taggedValue.add(makeTaggedValue(elem.name, makeTag("name"))) ->
	elem.taggedValue.add(makeTaggedValue("false", makeTag("unique"))) ->
	elem.taggedValue.add(makeTaggedValue("true", makeTag("nullable"))) ->
	elem.taggedValue.add(makeTaggedValue("255", makeTag("length"))) ->
	elem.taggedValue.add(makeTaggedValue("0", makeTag("precision"))) ->
	elem.taggedValue.add(makeTaggedValue("0", makeTag("scale"))) ->
	elem.taggedValue.add(makeTaggedValue("null", makeTag("columnDefinition"))) ->
	elem.taggedValue.add(makeTaggedValue("null", makeTag("table"))) ->
	elem.taggedValue.add(makeTaggedValue("false", makeTag("insertable")));
	
create MTag makeTag(String name) :
	setName(name);

create MTaggedValue makeTaggedValue(String value, MTag tag) :
	setValue(value) ->
	setTag(tag);