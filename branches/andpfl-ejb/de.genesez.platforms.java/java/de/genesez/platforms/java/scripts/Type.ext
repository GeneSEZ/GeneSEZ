/* 
 * Supports generation of return types and default return values
 * 
 * @author	nico herbig
 * @author	tobias haubold (last)
 * @date	2007-07-16
 * 
 * @todo	move to type mapping, for next release
 */

// based on genesez meta model
import genesezMM;

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * getter for the return type declaration with initialization
 * @param	returnType	name of the type to return
 * @return	string representing the return type declaration with initialization
 */
String getReturnTypeDeclaration(String returnType) :
	switch (returnType) {
		case "boolean" : returnType + " returnValue = false;"
		//case "Boolean" : returnType + " returnValue = false;"
		case "byte" : returnType + " returnValue = 0;"
		//case "Byte" : returnType + " returnValue = 0;"
		case "char" : returnType + " returnValue = '';"
		//case "Char" : returnType + " returnValue = '';"
		case "double" : returnType + " returnValue = 0;"
		//case "Double" : returnType + " returnValue = 0;"
		case "float" : returnType + " returnValue = 0;"
		//case "Float" : returnType + " returnValue = 0;"
		case "int" : returnType + " returnValue = 0;"
		//case "Integer" : returnType + " returnValue = 0;"
		case "long" : returnType + " returnValue = 0;"
		//case "Long" : returnType + " returnValue = 0;"
		case "short" : returnType + " returnValue = 0;"
		//case "Short" : returnType + " returnValue = 0;"
		case "void" : ""
		case "Void" : ""
		default : returnType + " returnValue = null;"
	};

/**
 * getter for the return statement for methods
 * @param	returnType	name of the type to return
 * @return	string representation of the return statement
 */
String getReturnTypeReturn(String returnType) :
	switch (returnType) {
		case "void" : ""
		case "Void" : ""
		default : "return returnValue;"
	};
