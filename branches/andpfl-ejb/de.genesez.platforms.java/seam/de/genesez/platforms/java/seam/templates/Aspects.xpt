«REM»
	JBoss Seam Framework cartridge (version 2.0.2)
	
	description:
	The template is based on the ejb cartridge and evaluates several stereotypes
	to generate annotations of JBoss Seam. Its uses aspects around the methhods
	of the ejb annotations in the Xpand files of the ejb3 cartridge.
	
	@author	André Pflüger
	@date	2008/08/21
	@version 1.0
«ENDREM»

«REM» import code gen meta model «ENDREM»
«IMPORT gcore»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION de::genesez::platforms::common::log::Log»

«EXTENSION de::genesez::platforms::common::AccessHelper»
«EXTENSION de::genesez::platforms::common::Conversion»
«EXTENSION de::genesez::platforms::common::GeneralHelper»
«EXTENSION de::genesez::platforms::common::typemapping::TypeMapping»
«EXTENSION de::genesez::platforms::common::m2t::Helper»

«EXTENSION de::genesez::platforms::java::scripts::Type»
«EXTENSION de::genesez::platforms::java::scripts::Naming»
«EXTENSION de::genesez::platforms::java::scripts::Conversion»
«EXTENSION de::genesez::platforms::java::ejb3::scripts::Conversion»


«REM»
	public functions
«ENDREM»

«REM»
	evaluates Seam class annotations
«ENDREM»
«AROUND de::genesez::platforms::java::ejb3::templates::Class::_Annotation FOR MClass-»
	«EXPAND _Component-»
	«EXPAND _Exceptions-»
	«EXPAND _JSF-»
	«EXPAND _ServletContainerIntegration-»
	«EXPAND _JavaBean-»
	«targetDef.proceed()»
«ENDAROUND»

«REM»
	evaluates Seam operation annotations
«ENDREM»
«AROUND de::genesez::platforms::java::ejb3::templates::Operation::Annotation FOR MOperation-»
	«EXPAND _Operations-»
	«targetDef.proceed()»
«ENDAROUND»

«REM»
	evaluates Seam attribute annotations
«ENDREM»
«AROUND de::genesez::platforms::java::ejb3::templates::Attribute::Annotation FOR MAttribute-»
	«EXPAND _Attributes-»
	«targetDef.proceed()»
«ENDAROUND»

«REM»
	include import statements in import-proReg of ejb3 cartridge
«ENDREM»
«AROUND de::genesez::platforms::java::ejb3::templates::Class::_ImportStatements FOR MClass»
	«EXPAND _Import»
	
	«targetDef.proceed()»
«ENDAROUND»


«REM»
	private functions
«ENDREM»
		
«REM»
	evaluates the stereotypes for attributes only 
«ENDREM»
«DEFINE _Attributes FOR MAttribute-»
	«EXPAND _Bijection-»
	«EXPAND _DataTable-»
	«IF hasStereotype("seam2BijectionLogger")»
		@Logger
		«IF !hasTaggedValue("seam2BijectionLogger", "value", "null")»
			("«taggedValue.selectFirst(e|e.tag.name == "value").value-»")
		«ENDIF»
	«ENDIF»
	«IF hasStereotype("seam2BijectionRequestParameter")»
		@RequestParameter
		«IF !hasTaggedValue("seam2BijectionRequestParamter", "name", "null")»
			("«taggedValue.selectFirst(e|e.tag.name == "name").value-»")
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the stereotypes for operations only 
«ENDREM»
«DEFINE _Operations FOR MOperation-»
	«EXPAND _Bijection-»
	«EXPAND _ContextDemarcation-»
	«EXPAND _Asynchronity-»
	«EXPAND _Remoting-»
	«IF hasTaggedValue("seam2JavaBean", "transactional", "true")»
		@Transactional
	«ENDIF»	
	«IF hasTaggedValue("seam2Component", "readOnly", "true")»
		@ReadOnly
	«ENDIF»	
	«IF !hasStereotype("seam2BijectionUnwrap")»
		@Unwrap
	«ENDIF»
	«IF !hasStereotype("seam2BijectionFactory")»
		@Factory(autocreate=«taggedValue.selectFirst(e|e.tag.name == "autoCreate").value-»
		«IF !hasTaggedValue("seam2BijectionFactory", "scope", "null")-»
			, scope(ScopeType.«taggedValue.selectFirst(e|e.tag.name == "scope").value-»
		«ENDIF-»
		«IF !hasTaggedValue("seam2BijectionFactory", "value", "null")-»
			, "«taggedValue.selectFirst(e|e.tag.name == "value").value-»"
		«ENDIF-»)
	«ENDIF»	
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Bijection
	annotations for operations and attributes
«ENDREM»
«DEFINE _Bijection FOR MElement-»
	«IF !hasStereotype("seam2BijectionIn")»
		@In(create=«taggedValue.selectFirst(e|e.tag.name == "create").value-»
		«IF hasTaggedValue("seam2BijectionIn", "required", "false")-»
			, required=false
		«ENDIF-»
		«IF !hasTaggedValue("seam2BijectionIn", "value", "null")-»
			, value="«taggedValue.selectFirst(e|e.tag.name == "value").value-»"
		«ENDIF-»
		«IF !hasTaggedValue("seam2BijectionIn", "scope", "null")-»
			, scope=ScopeType.«taggedValue.selectFirst(e|e.tag.name == "scope").value-»
		«ENDIF-»)
	«ENDIF»
	«IF !hasStereotype("seam2BijectionOut")»
		@Out(required=«taggedValue.selectFirst(e|e.tag.name == "required").value-»
		«IF !hasTaggedValue("seam2BijectionOut", "scope", "null")-»
			, scope=ScopeType.«taggedValue.selectFirst(e|e.tag.name == "scope").value-»
		«ENDIF-»
		«IF !hasTaggedValue("seam2BijectionOut", "value", "null")-»
			, value="«taggedValue.selectFirst(e|e.tag.name == "value").value-»"
		«ENDIF-»)
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Lifecycle
«ENDREM»
«DEFINE _Lifecycle FOR MOperation-»
	«IF hasStereotype("seam2Lifecycle")»
		«IF hasTaggedValue("seam2Lifecycle", "create", "true")»
			@Create
		«ENDIF»
		«IF hasTaggedValue("seam2Lifecycle", "destroy", "true")»
			@Destroy
		«ENDIF»
	«ENDIF»
	«IF hasStereotype("seam2LifecycleObserver")»
		@Observer(create=«taggedValue.selectFirst(e|e.tag.name == "create").value-»
		«IF (!hasTaggedValue("seam2ComponentObserver", "value", "null") || !hasTaggedValue("seam2ComponentObserver", "value", "[]"))-»
			{«FOREACH taggedValue.select(e|e.tag.name == "value").value.getElements() AS values SEPARATOR ","-»
				"«values-»"
			«ENDFOREACH-»}		
		«ENDIF-»)
	«ENDIF»	
«ENDDEFINE»

«REM»
	evaluates the dataTable stereotypes and databinding 
«ENDREM»
«DEFINE _DataTable FOR MAttribute-»
	«IF hasStereotype("seam2DataModel")-»
		«IF (hasTaggedValue("seam2DataModel", "value", "null") || hasTaggedValue("seam2DataModel", "value", ""))-»
			@DataModel
			«IF (hasTaggedValue("seam2DataModel", "scope", "null") || hasTaggedValue("seam2DataModel", "scope", ""))-»
				(scope=ScopeType.«taggedValue.selectFirst(e|e.tag.name == "scope").value-»)
			«ENDIF»
		«ENDIF-»
		«IF (!hasTaggedValue("seam2DataModel", "value", "null") || !hasTaggedValue("seam2DataModel", "value", ""))-»
			@DataModel("«taggedValue.selectFirst(e|e.tag.name == "value").value-»"
			«IF (hasTaggedValue("seam2DataModel", "scope", "null") || hasTaggedValue("seam2DataModel", "scope", ""))-»
				, scope=ScopeType.«taggedValue.selectFirst(e|e.tag.name == "scope").value-»
			«ENDIF-»)
		«ENDIF-»
		«IF (!hasTaggedValue("seam2DataBinding", "dataBinderClass", "null") || !hasTaggedValue("seam2DataBinding", "dataBinderClass", ""))»
			@DataBinderClass(«taggedValue.selectFirst(e|e.tag.name == "dataBinderClass").value-»)
		«ENDIF»
	«ENDIF»
	«IF (hasStereotype("seam2DataTable") && 
		(!hasTaggedValue("seam2DataTable", "dataModelSelectionIndexValue", "null") || !hasTaggedValue("seam2DataTable", "dataModelSelectionIndexValue", "")))»
		«IF (hasTaggedValue("seam2DataTable", "dataModelSelectionValue", "null") || hasTaggedValue("seam2DataTable", "dataModelSelectionValue", ""))-»
			@DataModelSelection
		«ELSE»
			@DataModelSelection("«taggedValue.selectFirst(e|e.tag.name == "dataModelSelectionValue").value-»")
		«ENDIF-»
		«IF (!hasTaggedValue("seam2DataBinding", "dataSelectorClass", "null") || !hasTaggedValue("seam2DataBinding", "dataSelectorClass", ""))»
			@DataSelectorClass(«taggedValue.selectFirst(e|e.tag.name == "dataSelectorClass").value-»)
		«ENDIF»
	«ENDIF»
	«IF (hasTaggedValue("seam2DataTable", "dataModelSelectionIndexValue", "null") || hasTaggedValue("seam2DataTable", "dataModelSelectionIndexValue", ""))-»
		@DataModelSelectionIndex
	«ELSE»
		@DataModelSelectionIndex("«taggedValue.selectFirst(e|e.tag.name == "dataModelSelectionIndexValue").value-»")
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Remoting
«ENDREM»
«DEFINE _Remoting FOR MOperation-»
	«IF hasStereotype("seam2Remoting")»
		@WebRemote
		«IF (!hasTaggedValue("seam2Remoting", "exclude", "null") || !hasTaggedValue("seam2Remoting", "exclude", "[]"))-»
			{«FOREACH taggedValue.select(e|e.tag.name == "exclude").value.getElements() AS values SEPARATOR ", "-»
				"«values-»"
			«ENDFOREACH-»}	
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Interceptor
«ENDREM»
«DEFINE _Interceptor FOR MClass-»
	«IF hasStereotype("seam2Interceptor")»
		@Interceptor(stateless=«taggedValue.selectFirst(e|e.tag.name == "stateless").value-»
		«IF (!hasTaggedValue("seam2Interceptor", "type", "null") || !hasTaggedValue("seam2Interceptor", "type", ""))-»
			, type=InterceptorType.«taggedValue.selectFirst(e|e.tag.name == "type").value-»	
		«ENDIF-»
		«IF (!hasTaggedValue("seam2Interceptor", "around", "null") || !hasTaggedValue("seam2Interceptor", "around", "[]"))-»
			, around={«FOREACH taggedValue.select(e|e.tag.name == "around").value.getElements() AS values SEPARATOR ", "-»
				«values-»
			«ENDFOREACH-»}	
		«ENDIF-»
		«IF (!hasTaggedValue("seam2Interceptor", "within", "null") || !hasTaggedValue("seam2Interceptor", "within", "[]"))-»
			, within={«FOREACH taggedValue.select(e|e.tag.name == "within").value.getElements() AS values SEPARATOR ", "-»
				«values-»
			«ENDFOREACH-»}	
		«ENDIF-»)
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the JavaBean stereotypes 
	Warning: Not for usage in ejb3 environment!!!
«ENDREM»
«DEFINE _JavaBean FOR MClass-»
	«IF hasStereotype("seam2JavaBean")»
		«IF hasTaggedValue("seam2JavaBean", "transactional", "true")»
			@Transactional
		«ENDIF»
		«IF (!hasTaggedValue("seam2JavaBean", "interceptors", "null") || !hasTaggedValue("seam2JavaBean", "interceptors", "[]"))-»
			@Interceptors(
			{«FOREACH taggedValue.select(e|e.tag.name == "interceptors").value.getElements() AS values SEPARATOR ", "-»
				«values-»
			«ENDFOREACH-»})
		«ENDIF»
		«IF hasStereotype("seam2JavaBeanApplicationException")»
			@ApplicationException(rollback=«taggedValue.selectFirst(e|e.tag.name == "rollback").value-»
			«IF hasTaggedValue("seam2JavaBeanApplicationException", "end", "true")-»
				, end=true
			«ENDIF-»)
		«ENDIF»
	«ENDIF»		
«ENDDEFINE»

«REM»
	evaluates the JSF stereotypes
«ENDREM»
«DEFINE _JSF FOR MClass-»
	«IF hasStereotype("seam2JSFValidator")»
		@Validator
		«IF (!hasTaggedValue("seam2JSFValidator", "id", "null") || !hasTaggedValue("seam2JSFValidator", "id", ""))-»
			{«taggedValue.selectFirst(e|e.tag.name == "id").value-»)	
		«ENDIF»
	«ENDIF»
	«IF hasStereotype("seam2JSFConverter")»
		«IF (hasTaggedValue("seam2JSFConverter", "id", "null") || hasTaggedValue("seam2JSFConverter", "id", ""))-»
			@Converter("«name-»"
		«ELSE»
			@Converter("«taggedValue.selectFirst(e|e.tag.name == "id").value-»"
		«ENDIF-»
		«IF (!hasTaggedValue("seam2JSFConverter", "forClass", "null") || !hasTaggedValue("seam2JSFConverter", "forClass", ""))-»
			, «taggedValue.selectFirst(e|e.tag.name == "forClass").value-»	
		«ENDIF-»
		)		
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2ServletContainerIntegration
«ENDREM»
«DEFINE _ServletContainerIntegration FOR MClass-»
	«IF hasStereotype("seam2ServletContainerIntegration")»
		«IF (!hasTaggedValue("seam2ServletContainerIntegration", "within", "null") || !hasTaggedValue("seam2ServletContainerIntegration", "within", ""))
			|| (!hasTaggedValue("seam2ServletContainerIntegration", "around", "null") || !hasTaggedValue("seam2ServletContainerIntegration", "around", ""))»
			@Filter
			«IF (!hasTaggedValue("seam2ServletContainerIntegration", "around", "null") || !hasTaggedValue("seam2ServletContainerIntegration", "around", ""))-»
				({«FOREACH taggedValue.select(e|e.tag.name == "around").value.getElements() AS values SEPARATOR ", "-»
					"«values-»"
				«ENDFOREACH-»})	
			«ENDIF-»
			«IF (!hasTaggedValue("seam2ServletContainerIntegration", "within", "null") || !hasTaggedValue("seam2ServletContainerIntegration", "within", ""))-»
				({«FOREACH taggedValue.select(e|e.tag.name == "within").value.getElements() AS values SEPARATOR ", "-»
					"«values-»"
				«ENDFOREACH-»})	
			«ENDIF-»
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Asynchronity
«ENDREM»
«DEFINE _Asynchronity FOR MOperation-»
	«IF hasStereotype("seam2Asynchronity")»
		«IF hasTaggedValue("seam2Asynchronity", "asynchronous", "true")»
			@Asynchronous
		«ENDIF»
		«IF hasTaggedValue("seam2Asynchronity", "duration", "true")»
			@Duration
		«ENDIF»
		«IF hasTaggedValue("seam2Asynchronity", "expiration", "true")»
			@Expiration
		«ENDIF»
		«IF hasTaggedValue("seam2Asynchronity", "intervalDuration", "true")»
			@IntervalDuration
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the seam2Exceptions stereotypes 
«ENDREM»
«DEFINE _Exceptions FOR MClass-»
	«IF hasStereotype("seam2ExceptionsRedirect")»
		@Redirect(end=«taggedValue.selectFirst(e|e.tag.name == "end").value-»
		«IF (!hasTaggedValue("seam2ExceptionsRedirect", "viewId", "null") || !hasTaggedValue("seam2ExceptionsRedirect", "viewId", ""))-»
			, viewId="«taggedValue.selectFirst(e|e.tag.name == "viewId").value-»"
		«ENDIF-»
		«IF (!hasTaggedValue("seam2ExceptionsRedirect", "message", "null") || !hasTaggedValue("seam2ExceptionsRedirect", "message", ""))-»
			, message="«taggedValue.selectFirst(e|e.tag.name == "message").value-»"
		«ENDIF-»)
	«ENDIF»
	«IF hasStereotype("seam2ExceptionsHttpError")»
		@HttpError(end=«taggedValue.selectFirst(e|e.tag.name == "end").value-»
		«IF (!hasTaggedValue("seam2ExceptionsHttpError", "errorCode", "null") || !hasTaggedValue("seam2ExceptionsHttpError", "errorCode", "500"))-»
			, errorCode="«taggedValue.selectFirst(e|e.tag.name == "errorCode").value-»"
		«ENDIF-»
		«IF (!hasTaggedValue("seam2ExceptionsHttpError", "message", "null") || !hasTaggedValue("seam2ExceptionsHttpError", "message", ""))-»
			, message="«taggedValue.selectFirst(e|e.tag.name == "message").value-»"
		«ENDIF-»)
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the context demarcation stereotypes
«ENDREM»
«DEFINE _ContextDemarcation FOR MOperation-»
	«IF hasStereotype("seam2ContextDemarcationBegin")»
		@Begin(nested=«taggedValue.selectFirst(e|e.tag.name == "nested").value-»
		«IF (!hasTaggedValue("seam2ContextDemarcationBegin", "flushMode", "null") || !hasTaggedValue("seam2ContextDemarcationBegin", "flushMode", "AUTO"))-»
			, flushMode=FlushModeType.«taggedValue.selectFirst(e|e.tag.name == "flushMode").value-»
		«ENDIF-»
		«IF hasTaggedValue("seam2ContextDemarcationBegin", "join", "true")-»
			, join=«taggedValue.selectFirst(e|e.tag.name == "join").value-»
		«ENDIF-»
		«IF (!hasTaggedValue("seam2ContextDemarcationBegin", "pageflow", "null") || !hasTaggedValue("seam2ContextDemarcationBegin", "pageflow", ""))-»
			, pageflow="«taggedValue.selectFirst(e|e.tag.name == "pageflow").value-»"
		«ENDIF-»
		«IF (!hasTaggedValue("seam2ContextDemarcationBegin", "ifOutcome", "null") || !hasTaggedValue("seam2ContextDemarcationBegin", "ifOutcome", "[]"))-»
			, ifOutcome={«FOREACH taggedValue.select(e|e.tag.name == "ifOutcome").value.getElements() AS values SEPARATOR ","-»
				"«values-»"
			«ENDFOREACH-»}
		«ENDIF-»)		
	«ENDIF»	
	«IF hasStereotype("seam2ContextDemarcationEnd")»
		@End(beforeRedirect=«taggedValue.selectFirst(e|e.tag.name == "beforeRedirect").value-»
		«IF (!hasTaggedValue("seam2ContextDemarcationEnd", "ifOutcome", "null") || !hasTaggedValue("seam2ContextDemarcationEnd", "ifOutcome", "[]"))-»
			, ifOutcome={«FOREACH taggedValue.select(e|e.tag.name == "ifOutcome").value.getElements() AS values SEPARATOR ","-»
				"«values-»"
			«ENDFOREACH-»}
		«ENDIF-»)	
	«ENDIF»		
	«IF hasStereotype("seam2ContextDemarcationStartTask")»
		@StartTask(flushMode=FlushModeType.«taggedValue.selectFirst(e|e.tag.name == "flushMode").value-»
		«IF (!hasTaggedValue("seam2ContextDemarcationStartTask", "id", "null") || hasTaggedValue("seam2ContextDemarcationStartTask", "id", ""))-»
			, id="«taggedValue.selectFirst(e|e.tag.name == "id").value-»"
		«ENDIF-»
		«IF (!hasTaggedValue("seam2ContextDemarcationStartTask", "pageflow", "null") || !hasTaggedValue("seam2ContextDemarcationStartTask", "pageflow", ""))-»
			, pageflow="«taggedValue.selectFirst(e|e.tag.name == "pageflow").value-»"
		«ENDIF-»
		«IF (!hasTaggedValue("seam2ContextDemarcationStartTask", "taskIdParameter", "null") || hasTaggedValue("seam2ContextDemarcationStartTask", "taskIdParameter", "taskId"))-»
			, taskIdParameter="«taggedValue.selectFirst(e|e.tag.name == "taskIdParameter").value-»"
		«ENDIF-»
	«ENDIF»	
	«IF hasStereotype("seam2ContextDemarcationBeginTask")»
		@BeginTask(flushMode=FlushModeType.«taggedValue.selectFirst(e|e.tag.name == "flushMode").value-»
		«IF (!hasTaggedValue("seam2ContextDemarcationBeginTask", "id", "null") || hasTaggedValue("seam2ContextDemarcationBeginTask", "id", ""))-»
			, id="«taggedValue.selectFirst(e|e.tag.name == "id").value-»"
		«ENDIF-»
		«IF (!hasTaggedValue("seam2ContextDemarcationBeginTask", "pageflow", "null") || !hasTaggedValue("seam2ContextDemarcationBeginTask", "pageflow", ""))-»
			, pageflow="«taggedValue.selectFirst(e|e.tag.name == "pageflow").value-»"
		«ENDIF-»
		«IF (!hasTaggedValue("seam2ContextDemarcationBeginTask", "taskIdParameter", "null") || hasTaggedValue("seam2ContextDemarcationBeginTask", "taskIdParameter", "taskId"))-»
			, taskIdParameter="«taggedValue.selectFirst(e|e.tag.name == "taskIdParameter").value-»"
		«ENDIF-»
	«ENDIF»	
	«IF hasStereotype("seam2ContextDemarcationEndTask")»
		@EndTask(beforeRedirect=«taggedValue.selectFirst(e|e.tag.name == "beforeRedirect").value-»
		«IF (!hasTaggedValue("seam2ContextDemarcationEndTask", "ifOutcome", "null") || !hasTaggedValue("seam2ContextDemarcationEndTask", "ifOutcome", "[]"))-»
			, ifOutcome={«FOREACH taggedValue.select(e|e.tag.name == "ifOutcome").value.getElements() AS values SEPARATOR ","-»
				"«values-»"
			«ENDFOREACH-»}
		«ENDIF-»
		«IF (!hasTaggedValue("seam2ContextDemarcationEndTask", "transition", "null") || hasTaggedValue("seam2ContextDemarcationEndTask", "transition", ""))»
			, transition="«taggedValue.selectFirst(e|e.tag.name == "transition").value-»")
		«ENDIF»)	
	«ENDIF»	
	«IF hasStereotype("seam2ContextDemarcation")»
		«IF !hasTaggedValue("seamContextDemarcation", "createProcessDefinition", "null")»
			@CreateProcess(definition="«taggedValue.selectFirst(e|e.tag.name == "createProcessDefinition").value-»")
		«ENDIF»
		«IF !hasTaggedValue("seam2ContextDemarcation", "resumeProcessIdParameter", "null")»
			@ResumeProcess
			«IF !hasTaggedValue("seam2ContextDemarcation", "resumeProcessIdParameter", "processId")-»
				(processIdParameter="«taggedValue.selectFirst(e|e.tag.name == "resumeProcessIdParameter").value-»")
			«ENDIF»
		«ENDIF»
		«IF !hasTaggedValue("seamContextDemarcation", "transition", "null")»
			@Transition("«taggedValue.selectFirst(e|e.tag.name == "transition").value-»")
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Component
	for components (classes) only
«ENDREM»
«DEFINE _Component FOR MClass-»
	«IF hasStereotype("seam2Component")»
		«IF !hasTaggedValue("seam2Component", "name", "null")»
			@Name("«taggedValue.selectFirst(e|e.tag.name == "name").value-»")
		«ENDIF»
		«IF !hasTaggedValue("seam2Component", "scope", "null")»
			@Scope(ScopeType.«taggedValue.selectFirst(e|e.tag.name == "scope").value-»)
		«ENDIF»
		«IF !hasTaggedValue("seam2Component", "jndiName", "null")»
			@JndiName("«taggedValue.selectFirst(e|e.tag.name == "jndiname").value-»")
		«ENDIF»
		«IF hasTaggedValue("seam2Component", "byPassInterceptor", "true")»
			@ByPassInterceptor
		«ENDIF»
		«IF hasTaggedValue("seam2Component", "conversational", "true")»
			@Conversational
		«ENDIF»
		«IF !hasTaggedValue("seam2Component", "intercept", "null")»
			@Intercept(InterceptionType.«taggedValue.selectFirst(e|e.tag.name == "intercept").value-»)
		«ENDIF»
		«IF (!hasTaggedValue("seam2Component", "synchronizedTimeout", "null") && !hasTaggedValue("seam2Component", "synchronizedTimeout", "1000"))»
			@Synchronized(timeout=«taggedValue.selectFirst(e|e.tag.name == "synchronizedTimeout").value-»)
		«ENDIF»
		«IF hasTaggedValue("seam2Component", "readOnly", "true")»
			@ReadOnly
		«ENDIF»	
		«IF hasTaggedValue("seam2Component", "autoCreate", "true")»
			@AutoCreate
		«ENDIF»	
	«ENDIF»
	«IF hasStereotype("seam2ComponentRole") && (
		(!hasTaggedValue("seam2ComponentRole", "name", "null") || !hasTaggedValue("seam2ComponentRole", "name", "[]")) ||
		(!hasTaggedValue("seam2ComponentRole", "scope", "null") || !hasTaggedValue("seam2ComponentRole", "scope", "[]"))
		)»
		@Roles({
		«FOREACH taggedValue.select(e|e.tag.name == "name").value.getElements() AS names SEPARATOR ","-»
			@Role(name="«names-»"
			«LET taggedValue.select(e|e.tag.name == "scope").value.getElements().indexOf(names) AS index-»
				, scope=ScopeType.«taggedValue.select(e|e.tag.name == "roleScope").value.getElements().get(index)-»
			«ENDLET-»)
		«ENDFOREACH»	
		})
	«ENDIF»
	«IF hasStereotype("seam2ComponentInstall")»
		«IF hasTaggedValue("seam2ComponentInstall", "value", "false")»
			@Install(false)
		«ENDIF»		
		«IF (hasTaggedValue("seam2ComponentInstall", "value", "true") && ( 
			hasTaggedValue("seam2ComponentInstall", "installDebug", "true") ||
			(!hasTaggedValue("seam2ComponentInstall", "dependencies", "null") || !hasTaggedValue("seam2ComponentInstall", "dependencies", "[]")) ||
			(!hasTaggedValue("seam2ComponentInstall", "genericDependencies", "null") || !hasTaggedValue("seam2ComponentInstall", "genericDependencies", "[]")) ||
			(!hasTaggedValue("seam2ComponentInstall", "classDependencies", "null") || !hasTaggedValue("seam2ComponentInstall", "classDependencies", "[]")) ||
			(!hasTaggedValue("seam2ComponentInstall", "precedence", "null") && !hasTaggedValue("seam2ComponentInstall", "precedence", "20"))))»
			@Install(debug="«taggedValue.selectFirst(e|e.tag.name == "debug").value-»"
			«IF (!hasTaggedValue("seam2ComponentInstall", "dependencies", "null") || !hasTaggedValue("seam2ComponentInstall", "dependencies", "[]"))-»
				, dependencies={
				«FOREACH taggedValue.select(e|e.tag.name == "dependencies").value.getElements() AS value SEPARATOR ", "-»
					"«value-»"
				«ENDFOREACH-»}				
			«ENDIF-»
			«IF (!hasTaggedValue("seam2ComponentInstall", "installGenericDependencies", "null") || !hasTaggedValue("seam2ComponentInstall", "genericDependencies", "[]"))-»
				, genericDependencies={
				«FOREACH taggedValue.select(e|e.tag.name == "genericDependencies").value.getElements() AS value SEPARATOR ", "-»
					«value-»
				«ENDFOREACH-»}	
			«ENDIF-»
			«IF (!hasTaggedValue("seam2ComponentInstall", "classDependencies", "null") || !hasTaggedValue("seam2ComponentInstall", "classDependencies", "[]"))-»
				, classDependencies={
				«FOREACH taggedValue.select(e|e.tag.name == "classDependencies").value.getElements() AS value SEPARATOR ", "-»
					"«value-»"
				«ENDFOREACH-»}	
			«ENDIF-»
			«IF hasTaggedValue("seam2ComponentInstall", "precedence", "false")»
				, precedence=Install.«taggedValue.selectFirst(e|e.tag.name == "precedence").value-»
			«ENDIF-»)
		«ENDIF»	
	«ENDIF»
	«IF hasStereotype("seam2ComponentStartup")»
		@Startup
		«IF hasTaggedValue("seam2ComponentStartup", "depends", "true")»
			@Startup
			«IF (!hasTaggedValue("seam2ComponentStartup", "depends", "null") || !hasTaggedValue("seam2ComponentStartup", "depends", "[]"))»
				(depends={
				«FOREACH taggedValue.select(e|e.tag.name == "depends").value.getElements() AS value SEPARATOR ", "-»
					"«value-»"
				«ENDFOREACH-»})
			«ENDIF»
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

«REM»
	create import statements
«ENDREM»
«DEFINE _Import FOR MClass-»
	import org.jboss.seam.annotations.*;
«ENDDEFINE»