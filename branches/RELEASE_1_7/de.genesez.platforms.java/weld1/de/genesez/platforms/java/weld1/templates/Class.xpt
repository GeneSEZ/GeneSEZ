«REM»
	template for weld class annotations
	
	@author		nancy doerfel
	6@date		2010-04-19
	@version	1.0
«ENDREM»

«REM» import code gen meta model «ENDREM»
«IMPORT gcore»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION de::genesez::platforms::common::log::Log»

«EXTENSION de::genesez::platforms::common::AccessHelper»
«EXTENSION de::genesez::platforms::common::GeneralHelper»
«EXTENSION de::genesez::platforms::common::Conversion»
«EXTENSION de::genesez::platforms::common::typemapping::TypeMapping»
«EXTENSION de::genesez::platforms::common::m2t::Helper»

«EXTENSION de::genesez::platforms::java::scripts::Type»
«EXTENSION de::genesez::platforms::java::scripts::Naming»
«EXTENSION de::genesez::platforms::java::scripts::Conversion»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»  «ENDREM»
«DEFINE Annotation FOR MClass-»
	«EXPAND Element::ApplicationScoped-»
	«EXPAND Element::SessionScoped-»
	«EXPAND Element::RequestScoped-»
	«EXPAND Element::ConversationScoped-»
	«EXPAND Element::Typed-»
	«EXPAND Element::Alternative-»
	«EXPAND Element::Any-»
	«EXPAND Element::Default-»
	«EXPAND Element::Dependent-»
	«EXPAND Element::Model-»
	«EXPAND Element::Specializes-»
	«EXPAND Element::New-»
	«EXPAND Element::Decorator-»
«ENDDEFINE»

«REM» 
	generates imports
«ENDREM»
«DEFINE ImportStatements FOR MClassifier-»
	«IF hasStereotype("weld1ApplicationScoped")
		|| property.exists(e|e.hasStereotype("weld1ApplicationScoped"))
		|| operation.exists(e|e.hasStereotype("weld1ApplicationScoped"))»
		import javax.enterprise.context.ApplicationScoped;;
	«ENDIF»
	«IF hasStereotype("weld1SessionScoped")
		|| property.exists(e|e.hasStereotype("weld1SessionScoped"))
		|| operation.exists(e|e.hasStereotype("weld1SessionScoped"))»
		import javax.enterprise.context.SessionScoped;
	«ENDIF»
	«IF hasStereotype("weld1RequestScoped")
		|| property.exists(e|e.hasStereotype("weld1RequestScoped"))
		|| operation.exists(e|e.hasStereotype("weld1RequestScoped"))»
		import javax.enterprise.context.RequestScoped;;
	«ENDIF»
	«IF hasStereotype("weld1ConversationScoped")
		|| property.exists(e|e.hasStereotype("weld1ConversationScoped"))
		|| operation.exists(e|e.hasStereotype("weld1ConversationScoped"))»
		import javax.enterprise.context.Conversation;
		import javax.enterprise.context.ConversationScoped;
	«ENDIF»
	«IF hasStereotype("weld1Typed")
		|| property.exists(e|e.hasStereotype("weld1Typed"))
		|| operation.exists(e|e.hasStereotype("weld1Typed"))»
		import javax.enterprise.inject.Typed;
	«ENDIF»	
	«IF property.exists(e|e.hasStereotype("weld1Produces"))
		|| operation.exists(e|e.hasStereotype("weld1Produces"))»
		import javax.enterprise.inject.Produces;
	«ENDIF»		
	«REM»For Stereotypes only«ENDREM»
	«IF hasStereotype("weld1NormalScope")»
		import javax.enterprise.context.NormalScope;
	«ENDIF»		
	«REM»For Stereotypes only«ENDREM»
	«IF hasStereotype("weld1Stereotype")»
		import javax.enterprise.inject.Stereotype;
	«ENDIF»				
	«IF operation.exists(e|e.hasStereotype("weld1Nonbinding"))»
		import javax.enterprise.inject.Nonbinding;
	«ENDIF»		
	«IF hasStereotype("weld1Alternative")
		|| property.exists(e|e.hasStereotype("weld1Alternative"))
		|| operation.exists(e|e.hasStereotype("weld1Alternative"))»
		import javax.enterprise.inject.Alternative;
	«ENDIF»		
	«IF hasStereotype("weld1Any")
		|| property.exists(e|e.hasStereotype("weld1Any"))
		|| operation.exists(e|e.hasStereotype("weld1Any"))
		|| operation.exists(e|e.parameter.exists(p|p.hasStereotype("weld1Any")))»
		import javax.enterprise.inject.Any;
	«ENDIF»		
	«IF hasStereotype("weld1Default")
		|| property.exists(e|e.hasStereotype("weld1Default"))
		|| operation.exists(e|e.hasStereotype("weld1Default"))
		|| operation.exists(e|e.parameter.exists(p|p.hasStereotype("weld1Default")))»
		import javax.enterprise.inject.Default;
	«ENDIF»		
	«IF operation.exists(e|e.parameter.exists(p|p.hasStereotype("weld1Disposes")))»
		import javax.enterprise.inject.Disposes;
	«ENDIF»		
	«IF hasStereotype("weld1Dependend")
		|| property.exists(e|e.hasStereotype("weld1Dependend"))
		|| operation.exists(e|e.hasStereotype("weld1Dependend"))»
		import javax.enterprise.inject.Dependend;
	«ENDIF»
	«IF hasStereotype("weld1Model")
		|| property.exists(e|e.hasStereotype("weld1Model"))
		|| operation.exists(e|e.hasStereotype("weld1Model"))»
		import javax.enterprise.inject.Model;
	«ENDIF»	
	«IF hasStereotype("weld1Specializes")
		|| operation.exists(e|e.hasStereotype("weld1Specializes"))»
		import javax.enterprise.inject.Specializes;
	«ENDIF»		
	«IF hasStereotype("weld1New")
		|| property.exists(e|e.hasStereotype("weld1New"))
		|| operation.exists(e|e.hasStereotype("weld1New"))
		|| operation.exists(e|e.parameter.exists(p|p.hasStereotype("weld1New")))»
		import javax.enterprise.inject.New;		
	«ENDIF»	
	«IF property.exists(e|e.hasStereotype("weld1DecoratorDelegate"))
		|| operation.exists(e|e.parameter.exists(p|p.hasStereotype("weld1DecoratorDelegate")))»
		import javax.decorator.Delegate;		
	«ENDIF»		
	«IF hasStereotype("weld1Decorator")»
		import javax.decorator.Decorator;		
	«ENDIF»
	«IF operation.exists(e|e.parameter.exists(p|p.hasStereotype("weld1Observes")))»
		import javax.enterprise.event.Observes;
		«IF operation.exists(e|e.parameter.exists(p|p.hasUtilizableValue("weld1Observes", "during")))-»	
            import static javax.enterprise.event.TransactionPhase.AFTER_COMPLETION;
            import static javax.enterprise.event.TransactionPhase.AFTER_FAILURE;
            import static javax.enterprise.event.TransactionPhase.AFTER_SUCCESS;
            import static javax.enterprise.event.TransactionPhase.BEFORE_COMPLETION;
            import static javax.enterprise.event.TransactionPhase.IN_PROGRESS;    
        «ENDIF-»
        «IF operation.exists(e|e.parameter.exists(p|p.hasUtilizableValue("weld1Observes", "notifyObserver")))-»
            import static javax.enterprise.event.Reception.ALWAYS;
            import static javax.enterprise.event.Reception.IF_EXISTS;
        «ENDIF-»      			
	«ENDIF»				
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

