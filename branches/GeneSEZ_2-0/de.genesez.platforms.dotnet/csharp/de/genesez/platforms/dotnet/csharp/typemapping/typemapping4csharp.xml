<?xml version="1.0" encoding="UTF-8" ?>
<!--
	default CSharp TypeMapping
	@author	peter huster (last)
	@date	2008-11-27
-->	
<tns:typeMapping xmlns:tns="http://www.genesez.de/typemapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:include>
    <tns:file>de/genesez/platforms/common/typemapping/typemapping.xml</tns:file>
  </tns:include>
  <tns:multiValuedTypes>
    <tns:multiValuedType>
      <tns:default>System.Collections.IList</tns:default>
      <tns:context name="Implementation">System.Collections.ArrayList</tns:context>
    </tns:multiValuedType>
    <tns:multiValuedType ordered="false" unique="false">
      <tns:default>System.Collections.IList</tns:default>
	   <tns:context name="Implementation">System.Collections.ArrayList</tns:context>
    </tns:multiValuedType>
    <tns:multiValuedType unique="false" ordered="true">
       <tns:default>System.Collections.IList</tns:default>
	   <tns:context name="Implementation">System.Collections.ArrayList</tns:context>
    </tns:multiValuedType>
	<tns:multiValuedType ordered="true" unique="false">
      <tns:default>System.Collections.IList</tns:default>
      <tns:context name="Implementation">System.Collections.ArrayList</tns:context>
    </tns:multiValuedType>
	<tns:multiValuedType ordered="true" unique="true">
      <tns:default>System.Collections.IList</tns:default>
      <tns:context name="Implementation">System.Collections.ArrayList</tns:context>
    </tns:multiValuedType>
  </tns:multiValuedTypes>
  <tns:primitiveTypes>
  	<tns:type from="boolean">
		<tns:to>bool</tns:to>
	</tns:type>
	<tns:type from="Boolean">
		<tns:to>bool</tns:to>
	</tns:type>
	<tns:type from="byte">
		<tns:to>byte</tns:to>
	</tns:type>
	<tns:type from="double">
		<tns:to>double</tns:to>
	</tns:type>
	<tns:type from="float">
		<tns:to>float</tns:to>
	</tns:type>
	<tns:type from="int">
		<tns:to>int</tns:to>
	</tns:type>
	<tns:type from="long">
		<tns:to>long</tns:to>
	</tns:type>
	<tns:type from="short">
		<tns:to>short</tns:to>
	</tns:type>
  </tns:primitiveTypes>
  <tns:externalTypes>
  	<tns:type from="Exception">
		<tns:to>Exception</tns:to>
	</tns:type>
  </tns:externalTypes>
</tns:typeMapping>
