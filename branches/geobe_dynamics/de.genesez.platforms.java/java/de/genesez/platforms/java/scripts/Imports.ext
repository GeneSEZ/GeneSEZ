/**
 * Helper to generate imports
 * 
 * @author	nico herbig
 * @author	tobias haubold (last)
 * @date	2007-07-16
 */

// based on genesez meta model
import gcore;

extension de::genesez::platforms::java::scripts::Conversion;
extension de::genesez::platforms::common::typemapping::TypeMapping;

/**
 * determines if an import of a classifier is needed for a classifier
 * @param	supplier	the type to import
 * @return	true, if the import of the classifier is needed, otherwise false
 */
boolean isImportNeeded(MClassifier supplier, MClassifier this) :
	// check if both are in same package
	nestingPackage().packageDeclaration() != supplier.nestingPackage().packageDeclaration();

/**
 * determines if an import of a type is needed for a classifier
 * @param	supplier	the type to import
 * @return	true, if the import of the type is needed, otherwise false
 */
boolean isImportNeeded(MType supplier, MClassifier this) :
	!supplier.mapName("Import").filterImports();

/**
 * filters unnecessary import statements
 * e.g. all imports starting with 'java.lang.' are not needed
 * @return	true, if the import statement is NOT needed, otherwise false
 */
boolean filterImports(String this) : startsWith("java.lang");

/**
 * just there for error free templates ;-)
 * @return	false, so the import is definitely needed
 */
boolean filterImports(MType this) : false;
