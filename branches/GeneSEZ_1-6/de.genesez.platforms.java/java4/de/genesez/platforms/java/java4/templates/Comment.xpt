«REM»
	Performs the generation of javadoc comments
	
	@author	tobias haubold
	@author	nico herbig (last)
	@date	2009-05-26
«ENDREM»

«REM» based on genesez meta model «ENDREM»
«IMPORT gcore»

«REM» useful support fuctions «ENDREM»
«EXTENSION de::genesez::platforms::common::AccessHelper»
«REM» useful helper for current user + timestamp «ENDREM»
«EXTENSION de::genesez::platforms::common::GeneralHelper»
«EXTENSION de::genesez::platforms::common::m2t::Helper»
«EXTENSION de::genesez::platforms::common::typemapping::TypeMapping»

«EXTENSION de::genesez::platforms::java::scripts::Naming»
«EXTENSION de::genesez::platforms::java::scripts::Conversion»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	generates the package documentation
	is used for the package summary
«ENDREM»
«DEFINE Package FOR MPackage -»
«FILE filePath( basePath() ) + fileSeparator() + "package-info.java"»
/**
«comment().format() -»
 */
package «packageDeclaration( basePackage() ) -»;
«ENDFILE»
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	generates a type comment
«ENDREM»
«DEFINE Type FOR MClassifier -»
/**
«IF hasComment() -»
«comment().format() -»
«ENDIF -»
 * @author	«getUserName()»
 */
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	enumeration literals
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»
«DEFINE EnumerationLiteral FOR MLiteral -»
/**
«IF hasComment() -»
«comment().format() -»
«ENDIF -»
 * @generated	enumeration literal definition
 */
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	attributes
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	generates the comment of an attribute definition
	simply delegates to the getter method comment
«ENDREM»
«DEFINE Attribute FOR MAttribute -»
/**
«IF hasComment() -»
 * documented here {@link «asGetter()»()}
«ENDIF -»
 * @generated	attribute definition
 */
«ENDDEFINE»

«REM»
	generates the comment of the 'getter' method
«ENDREM»
«DEFINE Getter FOR MAttribute -»
/**
«IF hasComment() -»
«comment().format() -»
«ENDIF -»
 * @generated	getter for the attribute '<em><b>«asAttribute()»</b></em>'
 */
«ENDDEFINE»

«REM»
	generates the comment of a 'setter' method
	simply delegates to the getter method comment
«ENDREM»
«DEFINE Setter FOR MAttribute -»
/**
 * documented here {@link «asGetter()»()}
 * @generated	setter method for the attribute '<em><b>«asAttribute()»</b></em>'
 */
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	associations
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	generates the comment of the enum definition
«ENDREM»
«DEFINE AssociationEnum FOR MClass -»
/** defines an identifier for each association */
«ENDDEFINE»

«REM»
	generates the comment of an association attribute
«ENDREM»
«DEFINE Association FOR MClassifier -»
/** holds the references to the association objects */
«ENDDEFINE»

«REM»
	generates the comment of the generic accessor method for association objects
«ENDREM»
«DEFINE AssociationGenericAccessor FOR MClassifier -»
	/**
	 * generic accessor for association objects used by the association handling framework
	 * @see de.genesez.platforms.java.umlsupport.associations.AssociationRole#getAssociation(de.genesez.platforms.java.umlsupport.associations.modified.RelatedAssociationRole)
	 */
«ENDDEFINE»

«REM»
	generates the comment of the 'getter' method accessor
«ENDREM»
«DEFINE Accessor FOR MAssociationRole -»
/** 
«IF hasComment() -»
«comment().format() -»
«ENDIF -»
 * @generated	accessor of the association '<em><b>«asAttribute()»</b></em>' to {@link «type.mapName().asTypeName()»}
 */
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	operations
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	generates the comment of a constructor operation
«ENDREM»
«DEFINE Constructor FOR MOperation -»
	/**
	«IF hasComment() -»
	«comment().format() -»
	«ENDIF -»
	 * @generated	constructor for class '<em><b>«classifier.asTypeName()»</b></em>'
	«EXPAND _Params FOREACH parameter -»
	«EXPAND _Exceptions FOREACH raisedException -»
	 */
«ENDDEFINE»

«REM»
	generates the comment of an initializing constructor
	comments instance attributes as parameters
«ENDREM»
«DEFINE InitConstructor FOR MClassifier -»
	/**
	 * constructor which initializes all instance attributes
	 * @generated	initializing constructor for class '<em><b>«asTypeName()»</b></em>'
	«FOREACH allInitializableAttributes() AS a -»
	 * @param	«a.asAttribute()»	{@link «a.type.mapName().asTypeName()».«a.asGetter()»()}
	«ENDFOREACH -»
	 */
«ENDDEFINE»

«REM»
	generates the comment of an initializing constructor for a data type
	comments all attributes as parameters
«ENDREM»
«DEFINE InitConstructor FOR MDataType -»
	/**
	 * constructor which initializes all instance attributes
	 * @generated	initializing constructor for class '<em><b>«asTypeName()»</b></em>'
	«FOREACH getAllAttributes() AS a -»
	 * @param	«a.asAttribute()»	{@link «a.type.mapName().asTypeName()».«a.asGetter()»()}
	«ENDFOREACH -»
	 */
«ENDDEFINE»

«REM»
	generates the comment of an operation
«ENDREM»
«DEFINE Operation FOR MOperation-»
	/**
	«IF hasComment() -»
	«comment().format() -»
	«ENDIF -»
	 * @generated	method stub for further implementation
	«EXPAND _Params FOREACH parameter -»
	«EXPAND _Return -»
	«EXPAND _Exceptions FOREACH raisedException -»
	 */
«ENDDEFINE»

«REM»
	generates the comments of the parameters
«ENDREM»
«DEFINE _Params FOR MParameter -»
 * @param	«asParameter()»	«comment().format("", "")»
«ENDDEFINE»

«REM»
	generates the comment of the return type
«ENDREM»
«DEFINE _Return FOR MOperation -»
«IF hasReturnType() -»
 * @return	«comment().format("", "")»
«ENDIF -»
«ENDDEFINE»

«REM»
	generates the comments of the exceptions an operation can throw
«ENDREM»
«DEFINE _Exceptions FOR MClassifier -»
 * @throws	«asTypeName()»
«ENDDEFINE»

«REM»
	generates the comments of the exceptions an operation can throw
«ENDREM»
«DEFINE _Exceptions FOR MType -»
 * @throws	«mapName().asTypeName()»
«ENDDEFINE»