«REM»
	template for hibernate-class annotations
	
	@author		andre pflueger
	@date		2009-04-20
	@version	1.0
«ENDREM»

«REM» import code gen meta model «ENDREM»
«IMPORT gcore»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION de::genesez::platforms::common::log::Log»

«EXTENSION de::genesez::platforms::common::AccessHelper»
«EXTENSION de::genesez::platforms::common::GeneralHelper»
«EXTENSION de::genesez::platforms::common::Conversion»
«EXTENSION de::genesez::platforms::common::typemapping::TypeMapping»
«EXTENSION de::genesez::platforms::common::m2t::Helper»

«EXTENSION de::genesez::platforms::java::scripts::Type»
«EXTENSION de::genesez::platforms::java::scripts::Naming»
«EXTENSION de::genesez::platforms::java::scripts::Conversion»



«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM» 
	evaluates the stereotype "ejb3DiscriminatorValue" for classes, 
	operations and properties
«ENDREM»
«DEFINE DiscriminatorValue FOR MElement-»	
	«IF hasStereotype("ejb3DiscriminatorValue")-»
		«IF !hasTaggedValue("ejb3DiscriminatorValue", "value", "null")-»
			@DiscriminatorValue("«taggedValue.selectFirst(e|e.tag.name == "value").value-»")
		«ENDIF-»
	«ENDIF»
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»  «ENDREM»
«DEFINE _Annotation FOR MClass-»
	«REM» PersistentEntity «ENDREM»
	«EXPAND _PersistentEntity-»
	
	«REM» primary key «ENDREM»
	«EXPAND _PrimaryKey-»
«ENDDEFINE»

«REM» evaluates the stereotype "ejb3PersistentEntity"«ENDREM»
«DEFINE _PersistentEntity FOR MClass-»
	«IF hasStereotype("ejb3PersistentEntity")»
		@Entity
		«IF	hasUtilizableValue("ejb3PersistentEntity", "name")-»
			(name="«getTaggedValue("ejb3PersistentEntity", "name")-»")
		«ENDIF»
		«REM»@Table is not allowed with SINGLE_TABLE inheritance strategy«ENDREM»
		«IF generalization.isEmpty-»
			«EXPAND _Table-»
		«ENDIF»
		«REM»
			Causes Warnings in Hibernate configuration, no @Table in derived class
			annotation will be ignored, no fatal error occurs
			«ELSE-»
				«FOREACH generalization.typeSelect(MClass) AS classes-»
					«IF !classes.hasStereotype("ejb3Inheritance") && !hasTaggedValue("ejb3Inheritance", "discriminatorType", "SINGLE_TABLE")-»
						«EXPAND _Table-»
					«ENDIF»
				«ENDFOREACH-»
			«ENDIF»
		«ENDREM»
		«REM» inheritance «ENDREM»
		«EXPAND _Inheritance-»
	«ENDIF»
«ENDDEFINE»


«REM»
	evaluates tagged values of @Table in "ejb3PersistentEntity"
«ENDREM»
«DEFINE _Table FOR MClass-»
	@Table(
	«IF hasUtilizableValue("ejb3PersistentEntity", "tableName")-»
		name="tbl_«getTaggedValue("ejb3PersistentEntity", "tableName")-»"
	«ELSE-»
		name="tbl_«asTypeName()-»"
	«ENDIF-»
	«IF hasUtilizableValue("ejb3PersistentEntity", "tableCatalog")-»
		, catalog = "«getTaggedValue("ejb3PersistentEntity", "tableCatalog")-»"
	«ENDIF-»
	«IF hasUtilizableValue("ejb3PersistentEntity", "tableSchema")-»
		, schema = "«getTaggedValue("ejb3PersistentEntity", "tableSchema")-»"
	«ENDIF-»)
«ENDDEFINE»	

«REM» 
	evaluates the stereotype "ejb3Inheritance", "ejb3PrimaryKeyJoinColumn",
	"ejb3DiscriminatorColumn" and "ejb3DiscriminatorValue" 
«ENDREM»
«DEFINE _Inheritance FOR MClass-»
	«IF hasStereotype("ejb3Inheritance")-»
		«REM» Klasse ist selbst die vererbende Klasse «ENDREM»
		@Inheritance(strategy=InheritanceType.«taggedValue.selectFirst(e|e.tag.name == "strategy").value-»)
		«IF hasStereotype("ejb3DiscriminatorColumn")-»
			@DiscriminatorColumn(discriminatorType=DiscriminatorType.«getTaggedValue("ejb3DiscriminatorColumn", "discriminatorType")-»
			«IF hasUtilizableValue("ejb3DiscriminatorColumn", "name") && !hasTaggedValue("ejb3DiscriminatorColumn", "name", "DTYPE")-»
				, name="«getTaggedValue("ejb3DiscriminatorColumn", "name")-»", 
			«ENDIF-»
			«IF hasUtilizableValue("ejb3DiscriminatorColumn", "columnDefinition")-»
				, columnDefinition="«getTaggedValue("ejb3DiscriminatorColumn", "columnDefinition")-»"
			«ENDIF-»
			«IF !hasTaggedValue("ejb3DiscriminatorColumn", "length", "31") && hasTaggedValue("ejb3DiscriminatorColumn", "discriminatorType", "STRING")-»
				, length=«getTaggedValue("ejb3DiscriminatorColumn", "length")-»
			«ENDIF-»)
		«ENDIF-»
		«EXPAND DiscriminatorValue-»		
	«ELSEIF hasStereotype("ejb3DiscriminatorValue") || hasStereotype("ejb3PrimaryKeyJoinColumn")-»
		«REM» class is a derived class «ENDREM»
		«EXPAND DiscriminatorValue-»
		«IF hasStereotype("ejb3PrimaryKeyJoinColumn")-»
			@PrimaryKeyJoinColumns(
			«FOREACH getTaggedValue("ejb3PrimaryKeyJoinColumn", "name").getElements() AS value-»
				@PrimaryKeyJoinColumn(
					name="«value-»"
					«LET getTaggedValue("ejb3PrimaryKeyJoinColumn", "name").getElements().indexOf(value) AS index-»		
						«IF hasUtilizableValue("ejb3PrimaryKeyJoinColumn", "referencedName")-»
 							, referencedColumnName="«getTaggedValue("ejb3PrimaryKeyJoinColumn", "referencedName").getElements().get(index)-»"
	 					«ENDIF-»
						«IF hasUtilizableValue("ejb3PrimaryKeyJoinColumn", "columnDefinition")-»
 							, columnDefinition="«getTaggedValue("ejb3PrimaryKeyJoinColumn", "columnDefinition").getElements().get(index)-»"
 						«ENDIF-»
 					«ENDLET-») 					
			«ENDFOREACH»)
		«ENDIF-»
	«ENDIF»
«ENDDEFINE»

«REM» evaluates the stereotype "ejb3PrimaryKey"«ENDREM»
«DEFINE _PrimaryKey FOR MClass-»
	«IF hasStereotype("ejb3PrimaryKeyClass") && hasTaggedValue("ejb3PrimaryKeyClass", "embeddable", "false")-»
		«REM» primary key with extern primary key class «ENDREM»
		«IF hasUtilizableValue("ejb3PrimaryKeyClass", "name")-»
			@IdClass(«getTaggedValue("ejb3PrimaryKeyClass", "name")-».class)
			«EXPAND _PrimaryKeyClass(getTaggedValue("ejb3PrimaryKeyClass", "name"))-»
		«ELSE-»
			@IdClass(«asTypeName()-»PK.class)
			«EXPAND _PrimaryKeyClass(asTypeName()+"PK")-»
		«ENDIF»
	«ELSEIF hasStereotype("ejb3PrimaryKeyClass") && hasTaggedValue("ejb3PrimaryKeyClass", "embeddable", "true")-»
		«REM» primary key with embedded primary key class «ENDREM»
		@Embeddable
		«REM»«IF hasUtilizableValue("ejb3PrimaryKeyClass", "name")-»
			«EXPAND _PrimaryKeyClass(getTaggedValue("ejb3PrimaryKeyClass", "name"))-»
		«ELSE-»
			«EXPAND _PrimaryKeyClass(asTypeName()+"PK")-»
		«ENDIF»
		«FOREACH property AS id-»
			«IF id.hasStereotype("ejb3PrimaryKey")-»
				«property.remove(id)-»
			«ENDIF-»
		«ENDFOREACH-»
		«IF hasUtilizableValue("ejb3PrimaryKeyClass", "name")-»
			«property.add(makeAttribute(getTaggedValue("ejb3PrimaryKeyClass", "name").toFirstLower(), getTaggedValue("ejb3PrimaryKeyClass", "name"), 1, false, false, false))->""-»
			«property.selectFirst(e|e.name == getTaggedValue("ejb3PrimaryKeyClass", "name").toFirstLower()).addPrimaryKeyStereotype("true", "null", "false", "AUTO")->""-»
		«ELSE-»
			«property.add(makeAttribute(asTypeName().toLowerCase()+"Pk", asTypeName()+"PK", 1, false, false, false))->""-»
			«property.selectFirst(e|e.name == asTypeName().toLowerCase()+"Pk").addPrimaryKeyStereotype("true", "null", "false", "AUTO")->""-»
		«ENDIF-»
		//properties: «property.name»
		//Stereotype: «property.stereotype.name»
		//taggedValue namen: «property.taggedValue.tag.name»
		//taggedvalue werte: «property.taggedValue.value»«ENDREM»
	«ENDIF»	
«ENDDEFINE»

«REM» creates a primary key class for stereotype "idClass" «ENDREM»
«DEFINE _PrimaryKeyClass(String filename) FOR MClass-»
	«FILE filePath( filename + ".java", basePath() )-»
		/**
		  *	generated primary key class of the ejb3 cartridge
		  *
		  * @author		andre pflueger
		  *	@date		2008 May 18
		  * @version	1.0
		  *
		  */	
		package «packageDeclaration( basePackage() ) -»;
		
		/**
		  * generated primary key class for "«asTypeName()-»"
		  *
		  */
		public class «filename-» implements java.io.Serializable {
			«FOREACH property.select(e|e.hasStereotype("ejb3PrimaryKey")) AS ids»
				private «ids.type.mapName()» «ids.name»;
			«ENDFOREACH»
			public «filename-»() {}
			public «filename-»(
			«FOREACH property.select(e|e.hasStereotype("ejb3PrimaryKey")) AS ids SEPARATOR ", "-»
				«ids.type.asTypeName()» «ids.name»
			«ENDFOREACH-») {
				«FOREACH property.select(e|e.hasStereotype("ejb3PrimaryKey")) AS ids SEPARATOR ";"-»
					this.«ids.name» = «ids.name»
				«ENDFOREACH-»;
			}
			
			«FOREACH property.typeSelect(MAttribute).select(e|e.hasStereotype("ejb3PrimaryKey")) AS ids»
				public «ids.type.asTypeName()» «ids.asGetter()»() {
					return «ids.name»;
				}
			«ENDFOREACH»
			«FOREACH property.typeSelect(MAttribute).select(e|e.hasStereotype("ejb3PrimaryKey")) AS ids»
				public  void «ids.asSetter()»(«ids.type.asTypeName()» «ids.name») {
					this.«ids.name» = «ids.name»;
				}	
			«ENDFOREACH»
			public boolean equals(Object obj){
				if (obj == this) return true;
				if (!(obj instanceof «filename-»)) return false;
				«filename-» pk = («filename-») obj;
				return ( 
				«FOREACH property.select(e|e.hasStereotype("ejb3PrimaryKey")) AS ids SEPARATOR "&&"-»
					this.«ids.name»
					«IF ids.type.isPrimitiveType()-»
						 == pk.«ids.name»
					«ELSE-»
						.equals(pk.«ids.name-»)
					«ENDIF-»
				«ENDFOREACH-»
				);
			}
			
			public int hashCode() {
				return (int) 
				«FOREACH property.select(e|e.hasStereotype("ejb3PrimaryKey")) AS ids SEPARATOR " + "-»
					this.«ids.name-»
					«IF !isPrimitiveType(ids.type)-»
						.hashCode()
					«ELSEIF ids.type.mapName() == "String"-»
						.hashCode()
					«ENDIF-»	
				«ENDFOREACH-»
				;				
			}
		}
	«ENDFILE»
«ENDDEFINE»

«REM» 
	generates import proReg and statements for hibernate classes
	is used by aspects to extend´import generation of java5 cartridge
«ENDREM»
«DEFINE _ImportStatements FOR MClassifier-»
	«IF hasStereotype("ejb3PersistentEntity")-»
		import javax.persistence.Entity;
		import javax.persistence.Table;
		import java.io.Serializable;
		import javax.persistence.Inheritance;
		import javax.persistence.InheritanceType;
	«ENDIF»
	«IF property.exists(e|e.hasStereotype("ejb3Persistence")) 
		|| property.exists(e|e.type.mapName().asTypeName() == "EntityManager")
		|| property.exists(e|e.type.mapName().asTypeName() == "EntityManagerFactory")-»
		import javax.persistence.EntityManager;
		import javax.persistence.PersistenceUnit;
		import javax.persistence.PersistenceContext;
	«ENDIF»	
	«IF operation.exists(e|e.hasStereotype("ejb3Association")) || property.exists(e|e.hasStereotype("ejb3Association"))-»
		import javax.persistence.OneToMany;
		import javax.persistence.ManyToOne;
		import javax.persistence.OneToOne;
		import javax.persistence.ManyToMany;
		import javax.persistence.CascadeType;
	«ENDIF»
	«IF operation.exists(e|e.hasStereotype("ejb3PrimaryKey")) || property.exists(e|e.hasStereotype("ejb3PrimaryKey"))-»
		import javax.persistence.Id;
		import javax.persistence.IdClass;
		import javax.persistence.EmbeddedId;
		import javax.persistence.GeneratedValue;
		import javax.persistence.GenerationType;
	«ENDIF»
	import javax.persistence.*;
«ENDDEFINE»

«REM» 
	generates a protected region for own implementations
«ENDREM»
«DEFINE _OwnCodeImpl(String proRegId) FOR MClass-»
	/* «PROTECT CSTART "" CEND "" ID (proRegId)» */
	/* TODO: put your own source code here */
	
	/* «ENDPROTECT» */
«ENDDEFINE»