/**
 * General naming conventions for TYPO3 Extbase
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de>
 * @date	2011-07-20
 */

// based on genesez meta model
import gcore;

// use TYPO3 profile
extension de::genesez::platform::typo3v4::profile::Profile;


/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	GENERAL TYPO3 conventions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Formats a string value into a TYPO3 Category value.
 *
 * @param	category	The category to format.
 * @return	The TYPO3 category.
 */

String asT3Category(String category) :
	category.toLowerCase();


/**
 * Formats a string value into a TYPO3 Lock type value.
 *
 * @param	lockType	The lock type to format.
 * @return	The TYPO3 lock type.
 */
String asT3LockType(String lockType) :
	lockType.subString(0, 1);


/**
 * Formats a string value into a TYPO3 Priority value.
 *
 * @param	priority	The priority to format.
 * @return	The TYPO3 priority.
 */

String asT3Priority(String priority) :
	switch (priority) {
		case prT3PriorityEmpty() :
			""
		default :
			priority.toLowerCase()
	};
	

/**
 * Formats a string value into a TYPO3 State value.
 *
 * @param	state	The state to format.
 * @return	The TYPO3 state.
 */
String asT3State(String state) :
	switch (state) {
		case prT3StateExcludeFromUpdates() :
			"excludeFromUpdates"
		default :
			state.toLowerCase()
	};
	

/**
 * Formats a string value into a TYPO3 associative array item.
 * 
 * Having a trailing comma after the last defined array entry, while unusual, 
 * is a valid syntax. 
 * See http://php.net/manual/en/function.array.php
 *
 * When using this latter declaration, we encourage using a trailing comma for 
 * the last item in the array; this minimizes the impact of adding new items 
 * on successive lines, and helps to ensure no parse errors occur due to a 
 * missing comma. 
 * See http://framework.zend.com/manual/en/coding-standard.coding-style.html
 *
 * @param	item	The item to format.
 * @return	The TYPO3 associative array item.
 */
List[String] asT3AssociativeArrayItem(String item) :
	item.contains("=")
		? (	let kv = item.replaceFirst("=", "=>").split("=>") :
				"'" + kv.get(0).trim() + "' => " + kv.get(1).trim() + ","
		) : "";