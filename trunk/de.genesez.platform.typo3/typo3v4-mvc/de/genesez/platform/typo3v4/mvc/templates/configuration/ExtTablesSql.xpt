«IMPORT gcore»
«REM»
	Entry point for generating "ext_tables.sql".
	
	@author	Nico Herbig <nico.herbig@fh-zwickau.de>
	@date	2011-07-14
«ENDREM»

«REM» use TYPO3 MVC Extbase profile access helper scripts «ENDREM»
«EXTENSION de::genesez::platform::typo3v4::mvc::profile::ExtbaseAccessHelper»

«REM» use TYPO3 naming context and common naming scripts «ENDREM»
«EXTENSION de::genesez::platforms::common::naming::Naming»
«EXTENSION de::genesez::platform::typo3v4::mvc::convention::NamingContext»

«REM» use TYPO3 MVC conversion scripts «ENDREM»
«EXTENSION de::genesez::platform::typo3v4::mvc::convention::Conversion»

«REM» use TYPO3 MVC naming scripts «ENDREM»
«EXTENSION de::genesez::platform::typo3v4::mvc::convention::Naming»

«REM» use TYPO3 MVC access helper scripts which overrides «ENDREM»
«REM» common access helper scripts if script name is equal «ENDREM»
«EXTENSION de::genesez::platform::typo3v4::mvc::scripts::AccessHelper»
«EXTENSION de::genesez::platforms::common::AccessHelper»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	Processes the generation of "ext_tables.sql".
«ENDREM»
«DEFINE Root FOR MModel -»
«EXPAND ContextSettings -»

«FILE extTablesSQLFileNamePath() -»

«EXPAND CreateConcreteTableDefinition FOREACH allConreteTableInheritances().sortBy( e | e.name ) -»
«EXPAND CreateSingleTableDefinition FOREACH allSingleTableInheritances().sortBy( e | e.name ) -»
«EXPAND CreateMappingTableDefinition FOREACH allMappingTables().sortBy( e | e.name ) -»
«EXPAND ConcreteIntermediateTables FOREACH allConreteTableInheritances().sortBy ( e | e.name ) -»
«EXPAND SingleIntermediateTables FOREACH allSingleTableInheritances().sortBy ( e | e.name ) -»
«EXPAND MappingIntermediateTables FOREACH allMappingTables().sortBy ( e | e.name ) -»

«EXPAND OwnSQLDeclaration("ext_tables.sql.own.sql.declaration." + xmiGuid) -»
«ENDFILE»
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	Sets the naming and type mapping context for this part of generation. 
«ENDREM»
«DEFINE ContextSettings FOR MModel -»
«setNamingContext( namingContextPersistence() ) -»
«setTypeMappingContext( typeMappingContextSQLColumnDefinition() ) -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CreateConcreteTableDefinition FOR MClass -»
«EXPAND CreateTableComment -»
CREATE TABLE «name() -» (
	«EXPAND CreateConcreteTableColumns -»
);
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CreateSingleTableDefinition FOR MClass -»
«EXPAND CreateTableComment -»
CREATE TABLE «name() -» (
	«EXPAND CreateSingleTableColumns -»
);
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CreateMappingTableDefinition FOR MClass -»
«EXPAND CreateTableComment -»
CREATE TABLE «name() -» (
	«EXPAND CreateMappingTableColumns -»
);
«ENDDEFINE»


«DEFINE CreateTableComment FOR MClass -»
#
# Table structure for table '«name( namingContextConfiguration() ) -»'
#
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CreateConcreteTableColumns FOR MClass -»
	«EXPAND InternalManagementColumns -»
	
	«EXPAND AttributeColumn FOREACH allInstanceAttributes() -»
	«EXPAND AssociationColumn FOREACH allInstanceAssociationRoles() -»
	
	«EXPAND AccessControlColumns -»
	
	«EXPAND LocalizationColumns -»
	
	«EXPAND VersioningColumns -»
	
	«EXPAND KeyManagement -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CreateSingleTableColumns FOR MClass -»
	«EXPAND RecordTypeColumn -»
	
	«EXPAND AttributeColumn FOREACH  owningInitializableAttributes().select( e | !e.hasT3ExtbaseColumnMappingStereotype() ) -»
	«EXPAND AssociationColumn FOREACH owningInitializableAssociationRoles().select( e | !e.hasT3ExtbaseColumnMappingStereotype() ) -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CreateMappingTableColumns FOR MClass -»
	«EXPAND RecordTypeColumn -»
	
	«EXPAND AttributeColumn FOREACH  owningInitializableAttributes().select( e | !e.hasT3ExtbaseColumnMappingStereotype() ) -»
	«EXPAND AssociationColumn FOREACH owningInitializableAssociationRoles().select( e | !e.hasT3ExtbaseColumnMappingStereotype() ) -»
«ENDDEFINE»


«REM»
	Generates TYPO3 specific columns for internal management.
«ENDREM»
«DEFINE InternalManagementColumns FOR MClass -»
	uid int(11) NOT NULL auto_increment,
	pid int(11) DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generates TYPO3 specific record type column for single table inheritance or table mapping.
«ENDREM»
«DEFINE RecordTypeColumn FOR MClass -»
	«getPersistenceRecordTypeColumnName() -» varchar(255) DEFAULT '' NOT NULL,
«ENDDEFINE»


«REM»
	Generate a column for an attribute.
	It depends on the attribute type.
«ENDREM»
«DEFINE AttributeColumn FOR MAttribute -»
«IF !type.isClassifier() -»
	«EXPAND ColumnDefault -»
«ELSE -»
«IF isOneToOneUnidirectional() -»
	«EXPAND ColumnOneToOneUnidirectional -»
«ELSE -»
	«EXPAND ColumnOneToManyUnidirectional -»
«ENDIF -»
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnDefault FOR MAttribute -»
	«name() -» «type.name() -»,
«ENDDEFINE»


«REM»
	Generate the necessary columns if the attribute is 1:1 unidirectional.
«ENDREM»
«DEFINE ColumnOneToOneUnidirectional FOR MAttribute -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generate the necessary columns if the attribute is 1:n unidirectional.
	
	An intermediate table will be generated and inside this column a counter is set.
«ENDREM»
«DEFINE ColumnOneToManyUnidirectional FOR MAttribute -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generate a column for an association role.
	It depends on the association type.
«ENDREM»
«DEFINE AssociationColumn FOR MAssociationRole -»
«IF isOneToOneUnidirectional() -»
	«EXPAND ColumnOneToOneUnidirectional -»
«ELSEIF isOneToOneBidirectional() -»
	«EXPAND ColumnOneToOneBidirectional -»
«ELSEIF isOneToManyUnidirectional() -»
	«EXPAND ColumnOneToManyUnidirectional -»
«ELSEIF isOneToManyBidirectional() -»
	«EXPAND ColumnOneToManyBidirectional -»
«ELSEIF isManyToOneUnidirectional() -»
	«EXPAND ColumnManyToOneUnidirectional -»
«ELSEIF isManyToOneBidirectional() -»
	«EXPAND ColumnManyToOneBidirectional -»
«ELSEIF isManyToManyUnidirectional() -»
	«EXPAND ColumnManyToManyUnidirectional -»
«ELSEIF isManyToManyBidirectional() -»
	«EXPAND ColumnManyToManyBidirectional -»
«ENDIF -»
«ENDDEFINE»


«REM»
	Generate the necessary columns if the association is 1:1 unidirectional.
«ENDREM»
«DEFINE ColumnOneToOneUnidirectional FOR MAssociationRole -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generate the necessary columns if the association is 1:1 bidirectional.
«ENDREM»
«DEFINE ColumnOneToOneBidirectional FOR MAssociationRole -»
«IF classifier.name.compareTo( type.name() ) < 0 || !type.isClassifier() -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDIF -»
«ENDDEFINE»


«REM»
	Generate the necessary columns if the association is 1:n unidirectional.
	
	An intermediate table will be generated and inside this column a counter is set.
«ENDREM»
«DEFINE ColumnOneToManyUnidirectional FOR MAssociationRole -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generate the necessary columns if the association is 1:n bidirectional.
	
	Inside this column a counter is set.
«ENDREM»
«DEFINE ColumnOneToManyBidirectional FOR MAssociationRole -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generate the necessary columns if the association is n:1 unidirectional.
«ENDREM»
«DEFINE ColumnManyToOneUnidirectional FOR MAssociationRole -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generate the necessary columns if the association is n:1 bidirectional.
«ENDREM»
«DEFINE ColumnManyToOneBidirectional FOR MAssociationRole -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generate the necessary columns if the association is m:n unidirectional.
	
	An intermediate table will be generated and inside this column a counter is set.
«ENDREM»
«DEFINE ColumnManyToManyUnidirectional FOR MAssociationRole -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generate the necessary columns if the association is m:n bidirectional.
	
	An intermediate table will be generated and inside this column a counter is set.
«ENDREM»
«DEFINE ColumnManyToManyBidirectional FOR MAssociationRole -»
	«name() -» int(11) unsigned DEFAULT '0' NOT NULL,
«ENDDEFINE»


«REM»
	Generates TYPO3 specific columns for access control.
«ENDREM»
«DEFINE AccessControlColumns FOR MClass -»
	tstamp int(11) unsigned DEFAULT '0' NOT NULL,
	crdate int(11) unsigned DEFAULT '0' NOT NULL,
	deleted tinyint(4) unsigned DEFAULT '0' NOT NULL,
	hidden tinyint(4) unsigned DEFAULT '0' NOT NULL,
«IF createStarttimeField() -»
	starttime int(11) unsigned DEFAULT '0' NOT NULL,
«ENDIF -»
«IF createEndtimeField() -»
	endtime int(11) unsigned DEFAULT '0' NOT NULL,
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates TYPO3 specific columns for localization.
«ENDREM»
«DEFINE LocalizationColumns FOR MClass -»
«IF createLocalizationFields() -»
	sys_language_uid int(11) DEFAULT '0' NOT NULL,
	l10n_parent int(11) DEFAULT '0' NOT NULL,
	l10n_diffsource mediumblob NOT NULL,
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates TYPO3 specific columns for versioning.
«ENDREM»
«DEFINE VersioningColumns FOR MClass -»
«IF createVersioningFields() -»
	t3ver_oid int(11) DEFAULT '0' NOT NULL,
	t3ver_id int(11) DEFAULT '0' NOT NULL,
	t3ver_wsid int(11) DEFAULT '0' NOT NULL,
	t3ver_label varchar(30) DEFAULT '' NOT NULL,
	t3ver_state tinyint(4) DEFAULT '0' NOT NULL,
	t3ver_stage tinyint(4) DEFAULT '0' NOT NULL,
	t3ver_count int(11) DEFAULT '0' NOT NULL,
	t3ver_tstamp int(11) DEFAULT '0' NOT NULL,
	t3ver_move_id int(11) DEFAULT '0' NOT NULL,
	t3_origuid int(11) DEFAULT '0' NOT NULL,
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates TYPO3 specific key management.
«ENDREM»
«DEFINE KeyManagement FOR MClass -»
	PRIMARY KEY (uid),
	KEY parent (pid),
«IF createVersioningFields() -»
	KEY t3ver_oid (t3ver_oid,t3ver_wsid),
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ConcreteIntermediateTables FOR MClass -»
	«EXPAND IntermediateTable(this) FOREACH allInstanceAttributes() -»
	«EXPAND IntermediateTable(this) FOREACH allInstanceAssociationRoles() -»
«ENDDEFINE»

«REM»
«ENDREM»
«DEFINE SingleIntermediateTables FOR MClass -»
	«EXPAND IntermediateTable(this) FOREACH owningInitializableAttributes() -»
	«EXPAND IntermediateTable(this) FOREACH owningInitializableAssociationRoles() -»
«ENDDEFINE»

«REM»
«ENDREM»
«DEFINE MappingIntermediateTables FOR MClass -»
	«EXPAND IntermediateTable(this) FOREACH owningInitializableAttributes() -»
	«EXPAND IntermediateTable(this) FOREACH owningInitializableAssociationRoles() -»
«ENDDEFINE»


«REM»
	Checks if a intermediate table needs to be created.
	If the attribute type is a classifier and the attribute is a multi valued type.   
«ENDREM»
«DEFINE IntermediateTable(MClass class) FOR MAttribute -»
	«IF type.isClassifier() &&  isOneToManyUnidirectional()-»
		«EXPAND CreateIntermediateTableDefinitionUnidirectional(class) -»
	«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE IntermediateTable(MClass class) FOR MAssociationRole -»
	«IF isOneToManyUnidirectional() || isManyToManyUnidirectional() -»
		«EXPAND CreateIntermediateTableDefinitionUnidirectional(class) -»
	«ELSEIF isManyToManyBidirectional() && ( classifier.name().compareTo( type.name() ) < 0 || !type.isClassifier() ) -»
		«EXPAND CreateIntermediateTableDefinitionBidirectional(class) -»
	«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CreateIntermediateTableDefinitionUnidirectional(MClass class) FOR MProperty -»
#
# Intermediate table structure for table '«asIntermediateTableName(class) -»'
#
CREATE TABLE «asIntermediateTableName(class) -» (
	uid_local int(11) unsigned DEFAULT '0' NOT NULL,
	uid_foreign int(11) unsigned DEFAULT '0' NOT NULL,
	sorting int(11) unsigned DEFAULT '0' NOT NULL,
	
	KEY uid_local (uid_local),
	KEY uid_foreign (uid_foreign)
);
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CreateIntermediateTableDefinitionBidirectional(MClass class) FOR MProperty -»
#
# Intermediate table structure for table '«asIntermediateTableName(class) -»'
#
CREATE TABLE «asIntermediateTableName(class) -» (
	uid_local int(11) unsigned DEFAULT '0' NOT NULL,
	uid_foreign int(11) unsigned DEFAULT '0' NOT NULL,
	sorting int(11) unsigned DEFAULT '0' NOT NULL,
	sorting_foreign int(11) unsigned DEFAULT '0' NOT NULL,
	
	KEY uid_local (uid_local),
	KEY uid_foreign (uid_foreign)
);
«ENDDEFINE»


«REM»
	Generates a region for own SQL declarations.
«ENDREM»
«DEFINE OwnSQLDeclaration(String id) FOR MModel -»
«PROTECT CSTART '# ' CEND '' ID (id)»
# TODO: put your further code implementations here
«ENDPROTECT»
«ENDDEFINE»