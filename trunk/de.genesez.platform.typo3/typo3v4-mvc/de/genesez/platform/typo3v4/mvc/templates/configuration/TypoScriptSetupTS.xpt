«IMPORT gcore»
«REM»
	Performs the generation of TypoScript "ext_typoscript_setup.txt".

	@author	Nico Herbig <nico.herbig@fh-zwickau.de>
	@date	2011-07-14
«ENDREM»

«REM» use TYPO3 MVC Extbase profile access helper scripts «ENDREM»
«EXTENSION de::genesez::platform::typo3v4::mvc::profile::ExtbaseAccessHelper»

«REM» use TYPO3 naming context and common naming scripts «ENDREM»
«EXTENSION de::genesez::platforms::common::naming::Naming»
«EXTENSION de::genesez::platform::typo3v4::mvc::convention::NamingContext»

«REM» use TYPO3 Extbase convention and conversion scripts «ENDREM»
«EXTENSION de::genesez::platform::typo3v4::mvc::convention::Convention»
«EXTENSION de::genesez::platform::typo3v4::mvc::convention::Conversion»

«REM» use TYPO3 Extbase access helper scripts «ENDREM»
«EXTENSION de::genesez::platform::typo3v4::mvc::scripts::AccessHelper»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	Processes the generation of "ext_typoscript_setup.txt".
«ENDREM»
«DEFINE Root FOR MModel -»
«EXPAND ContextSettings -»

«LET fullQualifiedExtensionNameToLowerCase() AS extensionName -»

«FILE extTypoScriptSetupTSFileNamePath() -»
«EXPAND PluginConfiguration(extensionName) -»

«EXPAND ModuleConfiguration(extensionName) -»

«EXPAND OwnTypoScriptDeclaration("setup.txt.own.typoscript.declaration." + xmiGuid) -»
«ENDFILE»

«ENDLET -»
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	Sets the naming context for this part of generation.
	The type mapping context is not needed for this part. 
«ENDREM»
«DEFINE ContextSettings FOR MModel -»
«setNamingContext( namingContextConfiguration() ) -»
«ENDDEFINE»


«DEFINE PluginConfiguration(String extensionName) FOR MModel -»
«IF !allPlugins().isEmpty -»
plugin.«extensionName -» {
	«EXPAND PluginPersistence(extensionName) -»
	«EXPAND PluginView(extensionName) -»
	«EXPAND OwnPluginTypoScriptDeclaration("setup.txt.own.plugin.typoscript.declaration." + xmiGuid) -»
}
«ENDIF -»
«ENDDEFINE»


«DEFINE ModuleConfiguration(String extensionName) FOR MModel -»
«IF !allModules().isEmpty -»
module.«extensionName -» {
	«EXPAND ModulePersistence(extensionName) -»
	«EXPAND ModuleView(extensionName) -»
	«EXPAND OwnModuleTypoScriptDeclaration("setup.txt.own.module.typoscript.declaration." + xmiGuid) -»
}
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE PluginPersistence(String extensionName) FOR MModel -»
	persistence {
		storagePid = {$plugin.«extensionName -».persistence.storagePid}
		«EXPAND PersistenceClassesMapping -»
	}
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ModulePersistence(String extensionName) FOR MModel -»
	persistence {
		storagePid = {$module.«extensionName -».persistence.storagePid}
		«EXPAND PersistenceClassesMapping -»
	}
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE PluginView(String extensionName) FOR MModel -»
	view {
		templateRootPath = {$plugin.«extensionName -».view.templateRootPath}
		partialRootPath = {$plugin.«extensionName -».view.partialRootPath}
		layoutRootPath = {$plugin.«extensionName -».view.layoutRootPath}
	}
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ModuleView(String extensionName) FOR MModel -»
	view {
		templateRootPath = {$module.«extensionName -».view.templateRootPath}
		partialRootPath = {$module.«extensionName -».view.partialRootPath}
		layoutRootPath = {$module.«extensionName -».view.layoutRootPath}
	}
«ENDDEFINE»


«DEFINE PersistenceClassesMapping FOR MModel -»
«setNamingContext( namingContextGeneral() ) -»
«IF !allEntitiesAndValueObjects().select( e | e.hasT3ExtbaseTableMappingStereotype() ).isEmpty -»
		classes {
			«EXPAND PersistenceClassMapping FOREACH allEntitiesAndValueObjects().select( e | e.hasT3ExtbaseTableMappingStereotype() ) -»
		}
«ENDIF -»
«revertNamingContext() -»
«ENDDEFINE»


«DEFINE PersistenceClassMapping FOR MClass -»
			«name() -» {
				mapping {
					tableName = «getT3ExtbaseTableMappingTableName()»
					recordType = «name()»
					«EXPAND PersistenceColumnsMapping -»
				}
			}
«ENDDEFINE»


«DEFINE PersistenceColumnsMapping FOR MClass -»
«IF !property.select( e | e.hasT3ExtbaseColumnMappingStereotype() ).isEmpty -»
					columns {
						«EXPAND PersistenceColumnMapping FOREACH property.select( e | e.hasT3ExtbaseColumnMappingStereotype() ) -»
					}
«ENDIF -»
«ENDDEFINE»


«DEFINE PersistenceColumnMapping FOR MProperty -»
						«getT3ExtbaseColumnMappingMapOnProperty() -».mapOnProperty = «name()»
«ENDDEFINE»



«REM»
	Generates a region for own TypoScript declarations.
«ENDREM»
«DEFINE OwnTypoScriptDeclaration(String id) FOR MModel -»
«PROTECT CSTART '// ' CEND '' ID (id)»
// TODO: put your further TypoScript declarations here
«ENDPROTECT»
«ENDDEFINE»


«REM»
	Generates a region for own plugin TypoScript declarations.
«ENDREM»
«DEFINE OwnPluginTypoScriptDeclaration(String id) FOR MModel -»
	«PROTECT CSTART '// ' CEND '' ID (id)»
	// TODO: put your further plugin TypoScript declarations here
	«ENDPROTECT»
«ENDDEFINE»


«REM»
	Generates a region for own module TypoScript declarations.
«ENDREM»
«DEFINE OwnModuleTypoScriptDeclaration(String id) FOR MModel -»
	«PROTECT CSTART '// ' CEND '' ID (id)»
	// TODO: put your further module TypoScript declarations here
	«ENDPROTECT»
«ENDDEFINE»