«IMPORT gcore»
«REM»
	Handles everything about attriutes.
	
	currently implemented:
	- 
	
	@author	Nico Herbig <nico.herbig@fh-zwickau.de>
	@date	2011-03-21
«ENDREM»

«REM» use TYPO3 Extbase naming scripts «ENDREM»
«EXTENSION de::genesez::platform::typo3::extbase::convention::Naming»

«REM» use common access helper scripts «ENDREM»
«EXTENSION de::genesez::platforms::common::AccessHelper»

«REM» use common model 2 text helper scripts «ENDREM»
«EXTENSION de::genesez::platforms::common::m2t::Helper»

«REM» use type mapping scripts «ENDREM»
«EXTENSION de::genesez::platforms::common::typemapping::TypeMapping»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	Processes the attributes of a classifier.
	Order: constants (static + final), static, non static
«ENDREM»
«DEFINE Declaration FOR MClassifier -»
	«EXPAND Const FOREACH property.typeSelect(MAttribute).select( e| e.final && e.static && e.hasDefaultValue() ) -»
	«EXPAND Declaration FOREACH property.typeSelect(MAttribute).select( e| e.static && !e.final && !e.derived ) -»
	«EXPAND Declaration FOREACH property.typeSelect(MAttribute).select( e| !e.static && !e.final && !e.derived ) -»
«ENDDEFINE»


«REM»
	Processes the derived attributes of a classifier.
	Order: static, non static
«ENDREM»
«DEFINE Derived FOR MClass -»
	«EXPAND Derived FOREACH property.typeSelect(MAttribute).select( e| e.static && e.derived ) -»
	«EXPAND Derived FOREACH property.typeSelect(MAttribute).select( e| !e.static && e.derived ) -»
«ENDDEFINE»


«REM»
	Processes the accessors for attributes of a classifier.
«ENDREM»
«DEFINE Accessors FOR MClass -»
«FOREACH property.typeSelect(MAttribute).select( e| !e.final && !e.derived ) AS attribute -»
	«EXPAND Getter FOR attribute -»
	«EXPAND Setter FOR attribute -»
	«EXPAND InsertIn FOR attribute -»
	«EXPAND RemoveFrom FOR attribute -»
«ENDFOREACH -»
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	Generates an attribute declaration as a class constant.
«ENDREM»
«DEFINE Const FOR MAttribute -»
	«EXPAND Comment::Attribute -»
	const «name() -»«EXPAND DefaultValue -»;
«ENDDEFINE»


«REM»
	Generates an attribute declaration.
«ENDREM»
«DEFINE Declaration FOR MAttribute -»
	«EXPAND Comment::Attribute -»
	«EXPAND Modifier -» $«name() -»«EXPAND DefaultValue -»;
«ENDDEFINE»


«REM»
	Generates the accessor method for an derived attribute.
«ENDREM»
«DEFINE Derived FOR MAttribute -»
	«EXPAND Comment::Getter -»
	«EXPAND ModifierAccessor -» function «asGetterName() -»() {
		«EXPAND OwnCodeImplementation("php.derived.attribute.implementation." + xmiGuid) -»
	}
«ENDDEFINE»


«REM»
	Generates the getter method for an attribute.
«ENDREM»
«DEFINE Getter FOR MAttribute -»
	«EXPAND Comment::Getter -»
	«EXPAND ModifierAccessor -» function «asGetterName() -»() {
		return $this->«name() -»;
	}
«ENDDEFINE»


«REM»
	Generates the setter method for an attribute.
«ENDREM»
«DEFINE Setter FOR MAttribute -»
	«EXPAND Comment::Setter -»
	«EXPAND ModifierAccessor -» function «asSetterName() -»(«EXPAND TypeHintSetter -»$«name() -») {
		$this->«name() -» = $«name() -»;
	}
«ENDDEFINE»


«REM»
	Generates the insert in method for an attribute with a collection type.
«ENDREM»
«DEFINE InsertIn FOR MAttribute -»
«IF isMultiValuedType() -»
	«EXPAND Comment::InsertIn -»
	«EXPAND ModifierAccessor -» function «asInsertInName() -»(«EXPAND TypeHintInsertInRemoveFrom -»$toAdd) {
		$this->«name() -»->attach($toAdd);
	}
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates the remove from method for an attribute with a collection type.
«ENDREM»
«DEFINE RemoveFrom FOR MAttribute -»
«IF isMultiValuedType() -»
	«EXPAND Comment::RemoveFrom -»
	«EXPAND ModifierAccessor -» function «asRemoveFromName() -»(«EXPAND TypeHintInsertInRemoveFrom -»$toRemove) {
		$this->«name() -»->detach($toRemove);
	}
«ENDIF -»
«ENDDEFINE»


«REM»
	Processes the modifiers of an attribute.
«ENDREM»
«DEFINE Modifier FOR MAttribute -»
	«visibility -»«IF static -» static«ENDIF -»
«ENDDEFINE»


«REM»
	Processes the modifiers of an attribute accessor method.
«ENDREM»
«DEFINE ModifierAccessor FOR MAttribute -»
	public«IF static -» static«ENDIF -»
«ENDDEFINE»


«REM»
	Generates type hints for setter methods.
«ENDREM»
«DEFINE TypeHintSetter FOR MAttribute -»
«IF type.isClassifier() || type.isExternalType() -»
«IF isSingleValuedType() -»«type.mapName().name() -» «ELSE -»«mapType() -» «ENDIF -»
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates type hints for insert in and remove from methods.
«ENDREM»
«DEFINE TypeHintInsertInRemoveFrom FOR MAttribute -»
«IF type.isClassifier() || type.isExternalType() -»«type.mapName().name() -» «ENDIF -»
«ENDDEFINE»


«REM»
	Processes the default value of an attribute.
«ENDREM»
«DEFINE DefaultValue FOR MAttribute -»
«IF hasDefaultValue() -» = «defaultvalue -»«ENDIF -»
«ENDDEFINE»


«REM»
	Generates the protected region of an operation.
	
	@param	id	protected region id
«ENDREM»
«DEFINE OwnCodeImplementation(String id) FOR MAttribute -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: implementation of method «asGetterName() -» for class «classifier.name()»
		throw new Exception('The implementation of the method «asGetterName() -» for class «classifier.name() -» is missing !');
		«ENDPROTECT»
«ENDDEFINE»
