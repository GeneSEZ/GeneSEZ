import gcore;

/**
 * 	functions for creating new MStereotypes, MTags, MTaggedValues and for changing the value
 *	of an MTaggedValue 
 * 
 * 
 * @author	andre pflueger
 * @date	2011-03-24
 */

extension de::genesez::platforms::common::AccessHelper;
extension de::genesez::platforms::common::m2m::CreateTemplate;

/**
 *	function to add an "jwsWebService" stereotype to a MClassifier
 *	default values are not set by this function!
 *
 *	@param		this				instance of MClassifier
 *	@param		name				name of the web service
 *	@param		portName			name of the web service port
 *	@param		endpointInterface	endpoint interface
 *	@param		serviceName			name of the service
 *	@param		targetNamespace		namespace of the target
 *	@param		wsdlLocation		location of the WSDL file
 *
 */
Void addWebServiceStereotype(MClassifier this, String name, String portName, String endpointInterface, String serviceName, String targetNamespace, String wsdlLocation) :
	let s = makeWebServiceStereotype(this) :
		this.stereotype.add(s) ->
		createTaggedValue(this, createTag(s, "name", "String"), name) ->
		createTaggedValue(this, createTag(s, "portName", "String"), portName) ->
		createTaggedValue(this, createTag(s, "endpointInterface", "String"), endpointInterface) ->
		createTaggedValue(this, createTag(s, "serviceName", "String"), serviceName) ->
		createTaggedValue(this, createTag(s, "targetNamespace", "String"), targetNamespace) ->
		createTaggedValue(this, createTag(s, "wsdlLocation", "String"), wsdlLocation);

/**
 *	function to add an "jwsWebService" stereotype to a MClassifier
 *	default values are not set by this function!
 *	function requires existence of stereotype "jwsWebService" on classifier
 *
 *	@param		this			instance of MClassifier
 *
 */
Void addWebServiceStereotype(MClassifier this, MClassifier c) :
	let s = makeWebServiceStereotype(this) :
		this.stereotype.add(s) ->
		createTaggedValue(this, createTag(s, "name", "String"), c.getTaggedValue("jwsWebService", "name")) ->
		createTaggedValue(this, createTag(s, "portName", "String"), c.getTaggedValue("jwsWebService", "portName")) ->
		createTaggedValue(this, createTag(s, "endpointInterface", "String"), c.getTaggedValue("jwsWebService", "endpointInterface")) ->
		createTaggedValue(this, createTag(s, "serviceName", "String"), c.getTaggedValue("jwsWebService", "serviceName")) ->
		createTaggedValue(this, createTag(s, "targetNamespace", "String"), c.getTaggedValue("jwsWebService", "targetNamespace")) ->
		createTaggedValue(this, createTag(s, "wsdlLocation", "String"), c.getTaggedValue("jwsWebService", "wsdlLocation"));

/**
 *	function to create an "jwsWebService" stereotype
 *	default values are not set by this function!
 *	function adds MStereotype only to anyStereotype list of MModel
 *
 *	@param		container			instance of MClassifier
 *	@param		name				name of the web service
 *	@param		portName			name of the web service port
 *	@param		endpointInterface	endpoint interface
 *	@param		serviceName			name of the service
 *	@param		targetNamespace		namespace of the target
 *	@param		wsdlLocation		location of the WSDL file
 *
 */
MStereotype makeWebServiceStereotype(MClassifier container) :
	let s = createStereotype(container.package().getModel(), "jwsWebService", "jwsWebService") :
		s.property.add(createTag(s, "name", "String")) ->
		s.property.add(createTag(s, "portName", "String")) ->
		s.property.add(createTag(s, "endpointInterface", "String")) ->
		s.property.add(createTag(s, "serviceName", "String")) ->
		s.property.add(createTag(s, "targetNamespace", "String")) ->
		s.property.add(createTag(s, "wsdlLocation", "String")) ->
		s;
		
/**
 *	function to add an "jwsSOAPBinding" stereotype to a MClassifier
 *	default values are not set by this function!
 *	function requires existence of stereotype "jwsSOAPBinding" on classifier
 *
 *	@param		this				instance of MClassifier
 *
 */
Void addSOAPBindingStereotype(MClassifier this, MClassifier c) :
	let s = makeSOAPBindingStereotype(this) :
		this.stereotype.add(s) ->
		createTaggedValue(this, createTag(s, "style", "String"), c.getTaggedValue("jwsSOAPBinding", "style")) ->
		createTaggedValue(this, createTag(s, "parameterStyle", "String"), c.getTaggedValue("jwsSOAPBinding", "parameterStyle"));

/**
 *	function to add an "jwsSOAPBinding" stereotype to a MClassifier
 *	default values are not set by this function!
 *
 *	@param		this				instance of MClassifier
 *	@param		style				style of calling web service functions
 *	@param		parameterStyle		style of transmitting parameters
 *
 */
Void addSOAPBindingStereotype(MClassifier this, String style, String parameterStyle) :
	let s = makeSOAPBindingStereotype(this) :
		this.stereotype.add(s) ->
		createTaggedValue(this, createTag(s, "style", "String"), style) ->
		createTaggedValue(this, createTag(s, "parameterStyle", "String"), parameterStyle);

/**
 *	function to create an "jwsSOAPBinding" stereotype
 *	default values are not set by this function!
 *	function adds MStereotype only to anyStereotype list of MModel
 *
 *	@param		container			instance of MClassifier
 *
 */
MStereotype makeSOAPBindingStereotype(MClassifier container) :
	let s = createStereotype(container.package().getModel(), "jwsSOAPBinding", "jwsSOAPBinding") :
		s.property.add(createTag(s, "style", "String")) ->
		s.property.add(createTag(s, "parameterStyle", "String")) ->
		s;
		
/**
 *	function to add an "jwsHandlerChain" stereotype to a MClassifier
 *	default values are not set by this function!
 *	function requires existence of stereotype "jwsHandlerChain" on classifier
 *
 *	@param		this				instance of MClassifier
 *
 */
Void addHandlerChainStereotype(MClassifier this, MClassifier c) :
	let s = makeHandlerChainStereotype(this) :
		this.stereotype.add(s) ->
		createTaggedValue(this, createTag(s, "file", "String"), c.getTaggedValue("jwsHandlerChain", "file"));

/**
 *	function to add an "jwsHandlerChain" stereotype to a MClassifier
 *	default values are not set by this function!
 *
 *	@param		this	instance of MClassifier
 *	@param		file 
 *
 */
Void addHandlerChainStereotype(MClassifier this, String file) :
	let s = makeHandlerChainStereotype(this) :
		this.stereotype.add(s) ->
		createTaggedValue(this, createTag(s, "file", "String"), file);

/**
 *	function to create an "jwsWebService" stereotype
 *	default values are not set by this function!
 *	function adds MStereotype only to anyStereotype list of MModel
 *
 *	@param		container			instance of MClassifier
 *
 */
MStereotype makeHandlerChainStereotype(MClassifier container) :
	let s = createStereotype(container.package().getModel(), "jwsHandlerChain", "jwsHandlerChain") :
		s.property.add(createTag(s, "file", "String")) ->
		s;