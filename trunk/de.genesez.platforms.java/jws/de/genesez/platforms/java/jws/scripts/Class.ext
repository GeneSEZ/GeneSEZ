import gcore;

extension de::genesez::platforms::common::log::Log;
extension de::genesez::platforms::common::AccessHelper;
extension de::genesez::platforms::common::m2m::CreateTemplate;
extension de::genesez::platforms::java::scripts::Naming;
extension de::genesez::platforms::java::jws::scripts::Stereotypes;

/**
 *	checks if WebServiceClient stereotype is available and adds
 *	MExternal "javax.xml.ws.Service" if this class has no other 
 * 	generalization
 *
 *	@param	this		instance of MClass
 */
Void checkWebServiceClientSuperClass(MClass this) :
	hasStereotype("jwsWebServiceClient") 
	&& generalization.isEmpty
		? generalization.add(createExternal(this.model(), "javax.xml.ws.Service")) 
		: "";

/**
  *	adds copy of stereotype jwsWebService to the associated remote business interface
  *	add copies of stereoytypes jwsSOAPBinding and jwsHandlerChain to the associated
  * remote buesiness interface if these stereotypes are available 
  *
  *	@param 	this		instance of MClass
  *
  */
Void checkWebServiceInterface(MClass this) :
	hasStereotype("jwsWebService")
		? (
			let i = realization.typeSelect(MInterface).selectFirst(e|e.hasStereotype("ejb3Remote")) :
			 	i.addWebServiceStereotype(this) ->
			 	hasStereotype("jwsSOAPBinding") 
			 		? i.addSOAPBindingStereotype(this)
			 		: "" ->
			 	hasStereotype("jwsHandlerChain")
			 		? i.addHandlerChainStereotype(this)
			 		: ""
		)
		: "";
		
/** 
  *	checks the tagged value name of stereotype jwsWebService and assigns
  *	the class name if there is no value available
  *
  *	@param	this	instance of MClass
  */
Void checkWebServiceName(MClass this) :
	!hasUtilizableValue("jwsWebService", "name")
		? setTaggedValue("jwsWebService", "name", this.asTypeName())
		: "";
		
/** 
  *	checks the tagged value name of stereotype jwsWebServiceClient and assigns
  *	the class name if there is no value available
  *
  *	@param	this	instance of MClass
  */
Void checkWebServiceClientName(MClass this) :
	!hasUtilizableValue("jwsWebServiceClient", "name")
		? setTaggedValue("jwsWebServiceClient", "name", this.asTypeName())
		: "";