«REM»
	Performs the generation of interfaces
	
	@author	nico herbig
	@author	tobias haubold (last)
	@date	2007-07-13
«ENDREM»

«REM» based on genesez meta model «ENDREM»
«IMPORT gcore»

«REM» useful support functions «ENDREM»
«EXTENSION de::genesez::platforms::common::AccessHelper»

«REM» use java naming conventions «ENDREM»
«EXTENSION de::genesez::platforms::java::scripts::Naming»
«REM» use java conversions «ENDREM»
«EXTENSION de::genesez::platforms::java::scripts::Conversion»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	processes an interface
«ENDREM»
«DEFINE Root FOR MInterface -»
package «packageDeclaration() -»;
«EXPAND Import::Import -»
«EXPAND Comment::Type -»
public interface «asTypeName() -» «EXPAND Type::Generics -» «EXPAND Type::Generalization -» {
	
	«IF hasAttributes() || hasAssociationRoles() -»
	// -- generated attribute, constant + association declarations ----------
	«ENDIF -»
	«EXPAND Attribute::Declaration -»
	«EXPAND Association::Declaration -»
	
	«IF hasOperationDeclarations() -»
	// -- generated method declarations -------------------------------------
	«ENDIF -»
	«EXPAND Operation::Declaration -»
	
	«IF hasAssociationRoles() -»
	// -- generated association accessors -----------------------------------
	«ENDIF -»
	«EXPAND Association::Accessors -»
	
	// -- own code implementation -------------------------------------------
	«EXPAND Type::OwnCodeImpl("java.interface.own.code.declaration." + xmiGuid)-»
}
«ENDDEFINE»
