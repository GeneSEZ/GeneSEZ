/**
 * QF-Test script steps
 *
 * @author	Gerrit Beine
 * @date	2008-08-04
 */

//      based on genesez testing meta model
import gtesting;

// use logging
extension de::genesez::platforms::common::log::Log;

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	RootStep related xTend functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * generates the RootStep
 */
Void rootStep(TTestSuite this) :
	trace("Creating RootStep for " + name ) -> 
	qfRootStep() ->
	testSet();

/**
 * generates the TestSet
 */
Void testSet(TTestSuite this) :
	trace("Creating TestSet for " + name ) -> 
	qfTestSet() ->
	testcase.testCase();

/**
 * generates a TestCase
 */
Void testCase(TTestCase this) :
	trace("Creating TestCase for " + name ) ->
	qfTestCase() ->
	testcase.testCase() ->
	test.sequence() ->
	qfReset();

/**
 * generates a Sequence
 */
Void sequence(TTest this) :
	trace("Creating Sequence for " + name ) ->
	qfSequence() ->
	action.actionStep() ->
	qfReset();

Void actionStep(TKeyEvent this) :
	trace("Creating KeyEventStep for " + name ) ->
	qfKeyEventStep();

Void actionStep(TMouseEvent this) :
	trace("Creating MouseEventStep for " + name ) ->
	qfMouseEventStep();

Void actionStep(TMouseMove this) :
	trace("Creating MouseEventStep for " + name ) ->
	qfMouseEventStep();

Void actionStep(TAction this) :
	trace("...");

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	mapping to java functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * create the root step
 * @param	t	the Test Suite
 * @return	void
 */
private Void qfRootStep(TTestSuite t) :
	JAVA de.genesez.platforms.qftest.QftFile.qfRootStep(de.genesez.testing.gtesting.TTestSuite);

/**
 * create the test set
 * @param	t	the Test Suite
 * @return	void
 */
private Void qfTestSet(TTestSuite t) :
	qfElement(t, "TestSet");

/**
 * create a test case
 * @param	t	the Test Case
 * @return	void
 */
private Void qfTestCase(TTestCase t) :
	qfElement(t, "TestCase");

/**
 * create a sequence
 * @param	t	the Test
 * @return	void
 */
private Void qfSequence(TTest t) :
	qfElement(t, "BasicSequence");

/**
 * create a key event
 * @param	t	the KeyEvent
 * @return	void
 */
private Void qfKeyEventStep(TKeyEvent t) :
	JAVA de.genesez.platforms.qftest.QftFile.qfKeyEventStep(de.genesez.testing.gtesting.TKeyEvent);

/**
 * create a mouse event
 * @param	t	the MouseEvent
 * @return	void
 */
private Void qfMouseEventStep(TMouseEvent t) :
	JAVA de.genesez.platforms.qftest.QftFile.qfMouseEventStep(de.genesez.testing.gtesting.TMouseEvent);

/**
 * create a mouse move
 * @param	t	the MouseMove
 * @return	void
 */
private Void qfMouseEventStep(TMouseMove t) :
	JAVA de.genesez.platforms.qftest.QftFile.qfMouseEventStep(de.genesez.testing.gtesting.TMouseMove);

/**
 * creates a QF Test XML Element
 * @param	t	the test model element
 * @param	s	the tag name of the element
 * return	void
 */
private Void qfElement(TElement t, String s) :
 	JAVA de.genesez.platforms.qftest.QftFile.qfElement(de.genesez.testing.gtesting.TElement, java.lang.String);

/**
 * resets the active element
 * @return	void
 */
private Void qfReset() :
	JAVA de.genesez.platforms.qftest.QftFile.qfReset();
