package de.genesez.j2meframework.sensors;/* PROTECTED REGION ID(java.mclassifier.other.import.code_12_5_8a7027a_1184754703767_466983_906) ENABLED START *//* TODO put your imports here */import java.lang.String;/* PROTECTED REGION END *//** * This abstrct class represents a measure sensor. This sensor can measure manual of in a specificated cycletime automatic. * @author nicher */public abstract class Sensor implements ISensor {		// ////////////////////////////////////////////////////////////////////////	// generated variable, constant and association declarations	// ////////////////////////////////////////////////////////////////////////		/** @see {@link getAddress} */	protected String address;	protected float rangeMin = 0;	protected float rangeMax = 100;	protected float gradient = 1;	protected float offset = 0;	/**	 * variable for association to sensorController	 * @see {@link getSensorController}	 */	protected ISensorController sensorController;		// ////////////////////////////////////////////////////////////////////////	// generated constructor implementations	// ////////////////////////////////////////////////////////////////////////		/**	 * @param  address  	 * @return  	 */	public Sensor(String address) {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_8a7027a_1203503869365_567728_1433) ENABLED START */		/* TODO put your own implementation code here */		this.address = address;		/* PROTECTED REGION END */	}		/**	 * @param  address  	 * @param  rangeMin  	 * @param  rangeMax  	 * @return  	 */	public Sensor(String address, float rangeMin, float rangeMax) {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._12_5_8a7027a_1188991545820_140894_1317) ENABLED START */		/* TODO put your own implementation code here */		this(address);		this.rangeMin = rangeMin;		this.rangeMax = rangeMax;		/* PROTECTED REGION END */	}		/**	 * @param  address  	 * @param  rangeMin  	 * @param  rangeMax  	 * @param  gradient  	 * @param  offset  	 * @return  	 */	public Sensor(String address, float rangeMin, float rangeMax, float gradient, float offset) {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_8a7027a_1203518092265_103241_1128) ENABLED START */		/* TODO put your own implementation code here */		this(address, rangeMin, rangeMax);		this.gradient = gradient;		this.offset = offset;		/* PROTECTED REGION END */	}		// ////////////////////////////////////////////////////////////////////////	// generated derived attribute method implementations	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// generated association method implementations	// ////////////////////////////////////////////////////////////////////////		/**	 * accessor for association to sensorController	 * Reference to the measure controller.	 */	public ISensorController getSensorController() {		return sensorController;	}		/**	 * accessor for association to sensorController	 * @see {@link getSensorController}	 */	public void insertInSensorController(ISensorController _in) {		if (sensorController == _in) {			return;		}		sensorController = _in;	}		/**	 * accessor for association to sensorController	 * @see {@link getSensorController}	 */	public void removeFromSensorController(ISensorController _ex) {		if (sensorController != _ex) {			return;		}		sensorController = null;	}		// ////////////////////////////////////////////////////////////////////////	// generated abstract method declaration	// ////////////////////////////////////////////////////////////////////////		/**	 */	public abstract void measure();		// ////////////////////////////////////////////////////////////////////////	// generated normal method implementations	// ////////////////////////////////////////////////////////////////////////		/**	 * @param  measureValue  	 * @return  	 */	public float correctMeasuredValue(float measureValue) {				float returnValue = 0;		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_8a7027a_1203502958481_204686_1425) ENABLED START */		/* TODO put your own implementation code here */		returnValue = gradient * measureValue + offset;		/* PROTECTED REGION END */		return returnValue;	}		// ////////////////////////////////////////////////////////////////////////	// generated getter and setter method implementations	// ////////////////////////////////////////////////////////////////////////		/**	 * Address of the sensor.	 */	public String getAddress() {		return address;	}		/** 	 * @see {@link getAddress} 	 */	public void setAddress(String _address) {		address = _address;	}		public float getRangeMin() {		return rangeMin;	}		public void setRangeMin(float _rangeMin) {		rangeMin = _rangeMin;	}		public float getRangeMax() {		return rangeMax;	}		public void setRangeMax(float _rangeMax) {		rangeMax = _rangeMax;	}		public float getGradient() {		return gradient;	}		public void setGradient(float _gradient) {		gradient = _gradient;	}		public float getOffset() {		return offset;	}		public void setOffset(float _offset) {		offset = _offset;	}		// ////////////////////////////////////////////////////////////////////////	// own implementations	// ////////////////////////////////////////////////////////////////////////		/* PROTECTED REGION ID(java.mclassifier.implementation.owncode.code._12_5_8a7027a_1184754703767_466983_906) ENABLED START */	/* TODO put your own implementation code here */	/* PROTECTED REGION END */}