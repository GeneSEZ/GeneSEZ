«IMPORT gcore»

«REM»
	Template for jpa annotations according to attributes
	
	@author	andre pflueger
	@date	2009-02-22
«ENDREM»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION org::genesez::platform::common::log::Log»

«EXTENSION org::genesez::platform::common::AccessHelper»
«EXTENSION org::genesez::platform::common::Conversion»
«EXTENSION org::genesez::platform::common::typemapping::TypeMapping»

«EXTENSION org::genesez::platform::java::scripts::Type»
«EXTENSION org::genesez::platform::java::scripts::Naming»
«EXTENSION org::genesez::platform::java::scripts::Conversion»
«EXTENSION org::genesez::platform::java::jpa::scripts::Stereotypes»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM» evaluate stereotypes for attributes «ENDREM»
«DEFINE Annotation FOR MAttribute»
	«EXPAND Element::PrimaryKey-»
	«EXPAND Element::Column-»	
	«EXPAND Element::DatatypeMapping-»
	«EXPAND _Persistence-»
	«EXPAND Element::OptimisticLocking-»
	«EXPAND Class::DiscriminatorValue-»	
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM» 
	evaluate the stereotype jpaPersistenceContext and jpaPersistenceUnit 
«ENDREM»
«DEFINE _Persistence FOR MAttribute-»
	«IF !this.hasStereotype("seam2Injection")-»
		«IF hasStereotype("jpaPersistenceContext") && hasUtilizableValue("jpaPersistenceContext", "type")-»
			«IF getTaggedValueList("jpaPersistenceContext", "type").size > 1-»
				@PersistenceContexts(
			«ENDIF-»
			«FOREACH getTaggedValueList("jpaPersistenceContext", "type") AS types SEPARATOR ","-»
	 			@PersistenceContext (
	 				type = PersistenceContextType.«types-»
	 				«IF hasUtilizableValue("jpaPerssistenceContext", "unitName")-»  						
		 				«LET getTaggedValueList("jpaPersistenceContext", "unitName").indexOf(types) AS index-»
		 					, unitName = "«getTaggedValueList("jpaPersistenceContext", "unitName").get(index)-»"
		 				«ENDLET»
		 			«ENDIF»
	 				«IF hasUtilizableValue("jpaPerssistenceContext", "name")-»  						
		 				«LET getTaggedValueList("jpaPersistenceContext", "name").indexOf(types) AS index-»
		 					, name = "«getTaggedValueList("jpaPersistenceContext", "name").get(index)-»"
		 				«ENDLET-»
		 			«ENDIF-»)	 			
	 		«ENDFOREACH-»
	 		«IF getTaggedValueList("jpaPersistenceContext", "type").size > 1-»
	 			)
	 		«ENDIF-»		
		«ELSEIF hasStereotype("jpaPersistenceContext")-»
			@PersistenceContext
		«ELSEIF hasStereotype("jpaPersistenceUnit") && hasUtilizableValue("jpaPersistenceUnit", "name") && hasUtilizableValue("jpaPersistenceUnit", "unitName")-»
			«IF getTaggedValueList("jpaPersistenceUnit", "name").size > 1-»
				@PersistenceUnits {
			«ENDIF-»
			 «FOREACH getTaggedValueList("jpaPersistenceUnit", "name") AS names SEPARATOR ","-»
	 			@PersistenceUnit(
	 				name = "«names-»",  						
	 				«LET getTaggedValueList("jpaPersistenceUnit", "unitName").indexOf(names) AS index-»
	 					unitName = "«getTaggedValueList("jpaPersistenceUnit", "unitName").get(index)-»")
	 				«ENDLET»
	 		«ENDFOREACH-»)
	 		«IF getTaggedValueList("jpaPersistenceUnit", "name").size > 1-»
				}
			«ENDIF-»
	 	«ELSEIF hasStereotype("jpaPersistenceUnit")-»
	 		@PersistenceUnit
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»