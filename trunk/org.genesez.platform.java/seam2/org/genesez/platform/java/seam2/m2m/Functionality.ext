/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 * 
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */
import gcore;

/**
 * 	modificates the metamodel before generation of the source code  
 *  
 * 	@author	andre pflueger <andre.pflueger@fh-zwickau.de>
 */

extension org::genesez::util::logging::Logging;
extension org::genesez::metamodel::core::util::AccessElement;
extension org::genesez::platform::java::util::Naming;
extension org::genesez::platform::java::seam2::m2m::Class;
extension org::genesez::platform::java::seam2::m2m::Attribute;
extension org::genesez::platform::java::seam2::m2m::Property;
extension org::genesez::platform::java::seam2::m2m::Operation;
extension org::genesez::platform::java::seam2::m2m::Interface;

MModel additions(MModel this) :
	this.nestedPackage.additions() ->
	this.classifier.typeSelect(MClass).additions() ->
	this;

Void additions(MPackage this) :
	this.nestedPackage.additions() ->
	this.classifier.typeSelect(MClass).additions();
	
Void additions(MClass this) :
	addStandardConstructor() ->
	addValidator() -> 
	addConverter() ->
	addFilter() ->
	addLoggerAttribute() ->
	checkDestroyMethod() ->
	checkCreateMethod() ->
	checkJasyptEncryptionStereotype() ->
	this.property.typeSelect(MAttribute).additions() ->
	this.operation.typeSelect(MOperation).additions();
	
Void additions(MOperation this) :
	addFactoryValue();

Void additions(MAttribute this) :
	addDataModelValue() ->
	addDataModelSelectionValue() ->
	addDataModelSelectionIndexValue() ->
	addFactoryMethodForDataModelAttributes();

MModel modifications(MModel this) :
	this.nestedPackage.modifications() ->
	this.classifier.typeSelect(MClass).modifications() ->
	this;
	
Void modifications(MPackage this) :
	this.nestedPackage.modifications() ->
	this.classifier.typeSelect(MClass).modifications() ->
	this.classifier.typeSelect(MInterface).modifications();
	
Void modifications(MClass this) :
	checkAbstractClassesForComponentStereotype() ->
	this.property.typeSelect(MAttribute).modifications() ->
	this.property.typeSelect(MAssociationRole).modifications();
	
Void modifications(MAttribute this) :
	setupSeamManagedPersistence() ->
	checkLogger() ->
	checkFacesMessages() ->
	checkIdentity() ->
	checkEvents() ->
	checkCredentials() ->
	checkJasyptEncryptionStereotype() ->
	checkAttributesWithInjectionStereotype() ->
	checkAccessStereotypeOfSeamStereotypedAttributes() ->
	addAccessorStereotype();

Void modifications(MAssociationRole this) :
	addAccessorStereotype();
	
Void modifications(MInterface this) :
	"";

MModel getterSetter(MModel this) :
	this.nestedPackage.getterSetter() ->
	this.classifier.typeSelect(MInterface).getterSetter() ->
	this;

Void getterSetter(MPackage this) :
	this.nestedPackage.getterSetter() ->
	this.classifier.typeSelect(MInterface).getterSetter();

Void getterSetter(MInterface this) :
	addGetterAndSetterOperations();