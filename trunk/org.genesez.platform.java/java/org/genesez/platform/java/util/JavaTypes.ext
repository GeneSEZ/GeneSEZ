/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */
import gcore;

/**
 * Provides java types as external types.
 * 
 * @author	tobias haubold <toh@fh-zwickau.de> (maintainer)
 */
extension org::genesez::metamodel::core::util::m2m::CreateElement;


/**
 * Returns the primitive type boolean.
 */
MExternal typeBooleanPrimitive(MModel this) : ensureExternalTypeExistence("boolean", "boolean");

/**
 * Returns the primitive type int.
 */
MExternal typeIntPrimitive(MModel this) : ensureExternalTypeExistence("int", "int");

/**
 * Returns the type 'java.lang.Object'.
 */
MExternal typeObject(MModel this) : ensureExternalTypeExistence("java.lang.Object", "Object");

/**
 * Returns the type 'java.util.HashSet'.
 */
MExternal typeHashSet(MModel this) : ensureExternalTypeExistence("java.util.HashSet", "HashSet");

/**
 * Returns the type 'java.util.HashMap'.
 */
MExternal typeHashMap(MModel this) : ensureExternalTypeExistence("java.util.HashMap", "HashMap");
