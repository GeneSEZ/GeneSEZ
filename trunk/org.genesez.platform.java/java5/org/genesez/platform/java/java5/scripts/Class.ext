/**
 * 	functions for adding elements to class elements 
 * 
 * @author	andre pflueger
 * @date	2011-09-13
 */

// based on genesez meta model
import gcore;

extension org::genesez::platform::common::m2m::MakeElement;
extension org::genesez::platform::common::m2m::CreateTemplate;
extension org::genesez::platform::common::m2m::CreateBasics;
extension org::genesez::platform::common::AccessHelper;
extension org::genesez::platform::java::java5::scripts::Stereotypes;
extension org::genesez::platform::java::scripts::Naming;


/**
  *	evaluates the stereotype "singleton"
  *	adds an attribute "instance" and a private constructor
  *	if constructors are available, the visibility is changed to "private"
  *	singleton class is marked as final because all constructors are private
  *
  *	getInstance operation is added in Xpand if not available	
  *
  *	@param	this	instance of MClass
  */
Void addSingletonElements(MClass this) :
	this.hasStereotype("singleton")
		? (
			!this.property.exists(e|e.name.matches("instance"))
				? (
					//add static volatile attribute with no accessors 
					let a = createAttribute(this.xmiGuid + ".instanceAttributeForSingleton", "instance") :
					 	a.setVisibility("private") ->
					 	a.setStatic(true) -> 
					 	a.setType(this) ->
					 	a.setUpperBoundMultiplicity(1) ->
					 	a.setLowerBoundMultiplicity(1) ->
						a.addInternalStereotype("volatile") -> 
						a.createAccessor("false", "false")
				)
				: "" ->
			//change visibility of all constructors to private
			//add a private constructor with no protected region
			//if no constructor exists
			this.operation.exists(e|e.isConstructor()) 
				? this.operation.select(e|e.isConstructor()).setVisibility("private")
				:  makeStandardConstructor("private") ->
			this.setFinal(true)
		)
		: "";

/**
  * creates a standard constructor with no arguments
  *	this constructor does not have a protected region
  *
  *	the modeller has to model a constructor with no 
  *	arguments explicitly if a protected region is desired
  */
Void makeStandardConstructor(MClass container, String visibility) :
	let sc = container.makeOperation(container.name(), container.name()+"_StandardConstructor", visibility) :
		sc.addInternalStereotype("http://www.genesez.org/StandardConstructor");

/**
  *	adds equals and hashCode operation to class
  *	if stereotype "java5EqualsOperation" is available
  * and those operations are not available
  */
Void addEqualsOperation(MClass this) :
	this.hasStereotype("java5EqualsOperation") && 
	(this.generalization.typeSelect(MClass).size > 0 &&
	!this.generalization.typeSelect(MClass).first().hasStereotype("java5EqualsOperation")) &&	
	!this.property.exists(e|e.hasStereotype("java5EqualsProperty"))	 
		? (
			!this.operation.exists(e|e.name == "equals")
				? (
					let op = this.makeOperation("equals", "public") :
						op.parameter.add(op.makeParameter("other", "in", this.model().createExternal("Object"))) ->
						op.setReturn(op.makeParameter("", "out", this.model().createPrimitiveTypeBoolean()))
				)
				: "" ->
			!this.operation.exists(e|e.name == "hashCode")
				? (
					let op = this.makeOperation("hashCode", "public") :
						op.setReturn(op.makeParameter("", "out", this.model().createPrimitiveType("int")))
				)
				: ""
		)
		: "";