«IMPORT gcore»

«REM»
	Template for jbv and jhv elements
	
	@author		andre pflueger
	@date		2012-03-17
«ENDREM»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION org::genesez::util::logging::Logging»

«EXTENSION org::genesez::platform::common::AccessHelper»
«EXTENSION org::genesez::platform::common::Conversion»

«EXTENSION org::genesez::platform::java::scripts::Naming»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM» 
	evaluate stereotype "jhvType"
«ENDREM»
«DEFINE Type FOR MElement-»
	«IF hasStereotype("jhvType")-»
		@Type«IF hasUtilizableValue("jhvType", "type") || (hasUtilizableValue("jhvType", "parameterNames") && hasUtilizableValue("jhvType", "parameterValues"))-»(
			«IF hasUtilizableValue("jhvType", "type")-»
				type="«getTaggedValue("jhvType", "type")-»"«IF hasUtilizableValue("jhvType", "parameterNames") && hasUtilizableValue("jhvType", "parameterValues")-»,«ENDIF-»
			«ENDIF-»
			«IF hasUtilizableValue("jhvType", "parameterNames") && hasUtilizableValue("jhvType", "parameterValues")-»
				parameters={			
				«FOREACH getTaggedValueList("jhvType", "parameterNames") AS name SEPARATOR ", "-»
					@Parameter(name="«name-»", value="«getTaggedValueList("jhvType", "parameterValues").get(getTaggedValueList("jhvType", "parameterNames").indexOf(name))-»")
				«ENDFOREACH-»}
			«ENDIF-»
		)«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate stereotype "jhvTypeDef"
«ENDREM»
«DEFINE TypeDef FOR MElement-»
	«IF hasStereotype("jhvTypeDef")-»
		@TypeDef«IF hasUtilizableValue("jhvTypeDef", "name") || hasUtilizableValue("jhvTypeDef", "typeClass") || (hasUtilizableValue("jhvTypeDef", "parameterNames") && hasUtilizableValue("jhvTypeDef", "parameterValues")) -»(
			«IF hasUtilizableValue("jhvTypeDef", "name")-»
				name="«getTaggedValue("jhvTypeDef", "name")-»"«IF hasUtilizableValue("jhvTypeDef", "typeClass") || (hasUtilizableValue("jhvTypeDef", "parameterNames") && hasUtilizableValue("jhvTypeDef", "parameterValues"))-»,«ENDIF-»
			«ENDIF-»		
			«IF hasUtilizableValue("jhvTypeDef", "typeClass")-»
				typeClass=«getTaggedValue("jhvTypeDef", "typeClass")-»«IF !getTaggedValue("jhvTypeDef", "typeClass").contains(".class")-».class«ENDIF-»«IF (hasUtilizableValue("jhvTypeDef", "parameterNames") && hasUtilizableValue("jhvTypeDef", "parameterValues"))-»,«ENDIF-»
			«ENDIF-»		
			«IF hasUtilizableValue("jhvTypeDef", "parameterNames") && hasUtilizableValue("jhvTypeDef", "parameterValues")-»
				parameters={
				«FOREACH getTaggedValueList("jhvTypeDef", "parameterNames") AS name SEPARATOR ", "-»
					@Parameter(name="«name-»", value="«getTaggedValueList("jhvTypeDef", "parameterValues").get(getTaggedValueList("jhvTypeDef", "parameterNames").indexOf(name))-»")
				«ENDFOREACH-»}
			«ENDIF-»
		)«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate stereotype "jbvDate"
«ENDREM»
«DEFINE Date FOR MElement-»
	«IF hasStereotype("jbvDate")-»
		«IF getTaggedBooleanValue("jbvDate", "past")-»@Past«IF hasUtilizableValue("jbvDate", "message")-»(
			message="«getTaggedValue("jbvDate", "message")-»")«ENDIF-»
		«ENDIF-»			
		«IF getTaggedBooleanValue("jbvDate", "future")-»@Future«IF hasUtilizableValue("jbvDate", "message")-»(
			message="«getTaggedValue("jbvDate", "message")-»")«ENDIF-»
		«ENDIF-»	
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate stereotype "jhvEmail"
«ENDREM»
«DEFINE Email FOR MElement-»
	«IF hasStereotype("jhvEmail")-»
		@Email«IF hasUtilizableValue("jhvEmail", "message")-»(
			message="«getTaggedValue("jhvEmail", "message")-»")
		«ENDIF»		
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate stereotype "jhvCreditCardNumber"
«ENDREM»
«DEFINE CreditCardNumber FOR MElement-»
	«IF hasStereotype("jhvCreditCardNumber")-»
		@CreditCardNumber«IF hasUtilizableValue("jhvCreditCardNumber", "message")-»(
			message="«getTaggedValue("jhvCreditCardNumber", "message")-»")
		«ENDIF»		
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate stereotype "jhvRange"
«ENDREM»
«DEFINE Range FOR MElement-»
	«IF hasStereotype("jhvRange")-»
		@Range«IF hasUtilizableValue("jhvRange", "message") || hasUtilizableValue("jhvRange", "min") || hasUtilizableValue("jhvRange", "max")-»(
			«IF hasUtilizableValue("jhvRange", "message")-»
				message="«getTaggedValue("jhvRange", "message")-»"«IF hasUtilizableValue("jhvRange", "min") || hasUtilizableValue("jhvRange", "max")-»,«ENDIF-»
			«ENDIF-»
			«IF hasUtilizableValue("jhvRange", "min")-»
				min=«getTaggedValue("jhvRange", "min")-»«IF hasUtilizableValue("jhvRange", "max")-»,«ENDIF-»
			«ENDIF-»
			«IF hasUtilizableValue("jhvRange", "max")-»
				max=«getTaggedValue("jhvRange", "max")-»
			«ENDIF-»
		)
		«ENDIF»		
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate stereotype "jhvLength"
«ENDREM»
«DEFINE Length FOR MElement-»
	«IF hasStereotype("jhvLength")-»
		@Length«IF hasUtilizableValue("jhvLength", "message") || hasUtilizableValue("jhvLength", "min") || hasUtilizableValue("jhvLength", "max")-»(
			«IF hasUtilizableValue("jhvLength", "message")-»
				message="«getTaggedValue("jhvLength", "message")-»"«IF hasUtilizableValue("jhvLength", "min") || hasUtilizableValue("jhvLength", "max")-»,«ENDIF-»
			«ENDIF-»
			«IF hasUtilizableValue("jhvLength", "min")-»
				min=«getTaggedValue("jhvLength", "min")-»«IF hasUtilizableValue("jhvLength", "max")-»,«ENDIF-»
			«ENDIF-»
			«IF hasUtilizableValue("jhvLength", "max")-»
				max=«getTaggedValue("jhvLength", "max")-»
			«ENDIF-»
		)
		«ENDIF»		
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate stereotype "jbvSize"
«ENDREM»
«DEFINE Size FOR MElement-»
	«IF hasStereotype("jbvSize")-»
		@Size«IF hasUtilizableValue("jbvSize", "min") || hasUtilizableValue("jbvSize", "max") || hasUtilizableValue("jbvSize", "message")-»(
			«IF hasUtilizableValue("jbvSize", "min")-»
				min=«getTaggedValue("jbvSize", "min").asInteger()-»«IF hasUtilizableValue("jbvSize", "max") || hasUtilizableValue("jbvSize", "message")-»,«ENDIF-»
			«ENDIF-»
			«IF hasUtilizableValue("jbvSize", "max")-»
				max=«getTaggedValue("jbvSize", "max").asInteger()-»«IF hasUtilizableValue("jbvSize", "message")-»,«ENDIF-»
			«ENDIF-»
			«IF hasUtilizableValue("jbvSize", "message")-»
				message="«getTaggedValue("jbvSize", "message")-»"
			«ENDIF-»)
		«ENDIF»		
	«ENDIF-»
«ENDDEFINE»

«REM» 
	evaluate stereotype "jbvPattern"
«ENDREM»
«DEFINE Pattern FOR MElement-»
	«IF hasStereotype("jbvPattern")-»
		@Pattern«IF hasUtilizableValue("jbvPattern", "regex") || hasUtilizableValue("jbvPattern", "message")-»(
			«IF hasUtilizableValue("jbvPattern", "regex")-»
				regex="«getTaggedValue("jbvPattern", "regex")-»"«IF hasUtilizableValue("jbvPattern", "message")-»,«ENDIF-»
			«ENDIF-»
			«IF hasUtilizableValue("jbvPattern", "message")-»
				message="«getTaggedValue("jbvPattern", "message")-»"
			«ENDIF-»)
		«ENDIF»		
	«ENDIF-»
«ENDDEFINE»