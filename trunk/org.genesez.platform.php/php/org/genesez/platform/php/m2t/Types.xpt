«IMPORT gcore»
«REM»
	Handles classifiers, creates files and delegates the transformation of types to specific templates
	
	currently delegated:
	- class, interface, enumeration
	- require_once statements for imports of other php files
	
	@author	tobias haubold
	@date	2008-03-27
	@todo	data type
«ENDREM»



«REM» use logging «ENDREM»
«EXTENSION org::genesez::util::logging::Logging»
«REM» use helper to access information «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::AccessHelper»
«REM» use conversion functions «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::Conversion»
«REM» neat m2t helper functions «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::m2t::Helper»
«REM» use the type mapping «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::mapping::TypeMapping»

«REM» use php naming conventions «ENDREM»
«EXTENSION org::genesez::platform::php::util::Naming»
«REM» need import helper «ENDREM»
«EXTENSION org::genesez::platform::php::util::Import»
«EXTENSION org::genesez::platform::php::util::CodeGen»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	processes the generation of a type
	every type is contained in a single source file
	@context	a type to transform into text
«ENDREM»
«DEFINE Root FOR MClassifier»
«FILE filePath( asFileName(), basePath() ) -»
<?php
«REM»«EXPAND Comment::File -»«ENDREM»«EXPAND _ -»
«EXPAND _Imports -»

«EXPAND _OwnImports("php.own.imports." + xmiGuid) -»

«EXPAND _TypeDef -»
«EXPAND _Init -»
?>
«ENDFILE»
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	simply a placeholder for aspects to generate code after a type definition
«ENDREM»
«DEFINE _Init FOR MClassifier -»
«ENDDEFINE»

«REM»
	processes the generation of a class
«ENDREM»
«DEFINE _TypeDef FOR MClass -»
«EXPAND Class::Root -»
«ENDDEFINE»

«REM»
	processes the generation of an interface
«ENDREM»
«DEFINE _TypeDef FOR MInterface -»
«EXPAND Interface::Root -»
«ENDDEFINE»

«REM»
	processes the generation of an enumeration
«ENDREM»
«DEFINE _TypeDef FOR MEnumeration -»
«EXPAND Enumeration::Root -»
«ENDDEFINE»

«REM»
	processes the generation of a data type
«ENDREM»
«DEFINE _TypeDef FOR MDataType -»
// TODO: «logFatal("generation of 'MDataType's is currently not supported")»
«ENDDEFINE»

«REM»
	because the fact, 'MClassifier' is abstract, an object of type MClassifier cannot exist!
«ENDREM»
«DEFINE _TypeDef FOR MClassifier -»
// TODO: «logFatal("generation of 'MClassifier's is currently not supported")»
«ENDDEFINE»


«REM» - - import generation - - - - - - - - - - - - - - - - - - - - - - - - - - - «ENDREM»

«REM»
	generate import statements for referenced classes from other php files
«ENDREM»
«DEFINE _Imports FOR MClassifier -»
«IF generateIncludes() -»
«FOREACH supplier.select(e|e.isImportNeeded(this)) AS s -»
	«EXPAND _Require(s) -»
«ENDFOREACH -»
«ENDIF -»
«ENDDEFINE»

«REM»
	generates the require path for an classifier to include
	@param	used	the classifier which is required
«ENDREM»
«DEFINE _Require(MClassifier used) FOR MClassifier -»
require_once '«used.includePath(this) + used.asFileName() -»';
«ENDDEFINE»

«REM»
	generates the require path for an type to include
	- only for external types important!
	- if include is empty no require statement is generated
	@param	used	the type which is required
«ENDREM»
«DEFINE _Require(MType used) FOR MClassifier -»
«LET used.mapName("import").toString().toString() AS inc -»
«IF inc.length > 0 -»
«IF used.name() == inc -»
require_once '«inc.replaceAll("_", "/") -».php';
«ELSE -»
require_once '«inc -»';
«ENDIF -»
«ENDIF -»
«ENDLET -»
«ENDDEFINE»

«REM»
	generates a region for own import declarations
	@param	id	protected region id
«ENDREM»
«DEFINE _OwnImports(String id) FOR MClassifier -»
«PROTECT CSTART '/* ' CEND ' */' ID (id)»
// TODO: put your further include + require statements here
«ENDPROTECT»
«ENDDEFINE»


«REM»
	generates nothing but removes all whitespace within a line
	- e.g. used after a comment suppresses the generation of an empty line
	  (which is usually generated for a XPand comment)
«ENDREM»
«DEFINE _ FOR MElement -»
«ENDDEFINE»
