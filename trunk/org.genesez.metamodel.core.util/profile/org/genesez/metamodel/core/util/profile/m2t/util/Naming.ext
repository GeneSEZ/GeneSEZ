/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */

import gcore;


/**
 * Naming conventions for profile generation.
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
 */

extension org::genesez::metamodel::core::util::profile::m2t::util::GlobalVar;


// -- Script name conventions for classifiers ---------------------------------------------------------------


private String asScriptName(MClass this) :
	name.replaceFirst(globalVarStereotypeNamePrefix(), "").toFirstUpper();
	

private String asScriptName(MEnumeration this) :
	name.replaceFirst(globalVarEnumerationNamePrefix(), "").toFirstUpper();


private String asScriptName(MClassifier this) :
	name.toFirstUpper();


// -- Script name conventions for attributes and literals ---------------------------------------------------


private String asScriptName(MAttribute this) : 
	name.toFirstUpper();


private String asScriptName(MLiteral this) :
	name.toLowerCase().split("_").collect( e | e.toFirstUpper() ).toString("");
	

// -- Script name conventions for profile -------------------------------------------------------------------


String asProfileScriptName(MClassifier this) :
	"pr" + asScriptName();


String asProfileScriptName(MAttribute this) :
	classifier.asProfileScriptName() + asScriptName(); 


String asProfileScriptName(MLiteral this) :
	owningEnumeration.asProfileScriptName() + asScriptName();


// -- Script name conventions for access helper -------------------------------------------------------------


String asAccessHelperHasStereotype(MClassifier this) :
	"emHas" + asScriptName() + "Stereotype";


String asAccessHelperHasTaggedValue(MClassifier this) :
	"emHas" + asScriptName() + "TaggedValue";


String asAccessHelperHasTaggedValue(MAttribute this) :
	"emHas" + classifier.asScriptName() + asScriptName();
	

String asAccessHelperHasUtilizableTaggedValue(MAttribute this) :
	"emHas" + classifier.asScriptName() + "Utilizable" + asScriptName();


String asAccessHelperGetTaggedValue(MAttribute this) :
	"emGet" + classifier.asScriptName() + asScriptName();


String asAccessHelperSetTaggedValue(MAttribute this) :
	"emSet" + classifier.asScriptName() + asScriptName();
	
	
String asAccessHelperIsTaggedValue(MAttribute this, MLiteral l) :
	"emIs" + classifier.asScriptName() + asScriptName() + l.asScriptName();
