/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */

import gcore;


/**
 * Simplifies access to "GeneSEZ Persistence Profile" profile and makes working with them more easier.
 * 
 * HINT: All scripts for extension mechanism are available under the prefix 'em'.
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer) 
 */

// use profile scripts
extension org::genesez::metamodel::core::util::profile::GenesezPersistenceProfile;

// use GeneSEZ common extension mechanism scripts
extension org::genesez::metamodel::core::util::AccessElement;


// -- Xtend scripts for Stereotype "Association" --

/**
 * Checks if an element is annotated with the stereotype "Association".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasAssociationStereotype(MElement this) :
	emHasStereotypeAssignment( prAssociation() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "Association".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAssociationTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prAssociation(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "Association".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAssociationTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prAssociation(), tag, valueReference );


// -- "cascadeType" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "cascadeType" of the stereotype "Association" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasAssociationUtilizableCascadeType(MElement this) :
	emHasUtilizableTaggedValue( prAssociation(), prAssociationCascadeType() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "cascadeType" of the stereotype "Association".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAssociationCascadeType(MElement this, String value) :
	emHasTaggedValue( prAssociation(), prAssociationCascadeType(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "cascadeType" of the stereotype "Association".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetAssociationOwningCascadeType(MElement this) : 
	emOwningTaggedValues( prAssociation(), prAssociationCascadeType() );


/**
 * Returns the value of the single-valued tagged value "cascadeType"
 * of the stereotype "Association".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetAssociationCascadeType(MElement this) :
	emGetTaggedValue( prAssociation(), prAssociationCascadeType() );


// -- "fetchType" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "fetchType" of the stereotype "Association" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasAssociationUtilizableFetchType(MElement this) :
	emHasUtilizableTaggedValue( prAssociation(), prAssociationFetchType() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "fetchType" of the stereotype "Association".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAssociationFetchType(MElement this, String value) :
	emHasTaggedValue( prAssociation(), prAssociationFetchType(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "fetchType" of the stereotype "Association".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetAssociationOwningFetchType(MElement this) : 
	emOwningTaggedValues( prAssociation(), prAssociationFetchType() );


/**
 * Returns the value of the single-valued tagged value "fetchType"
 * of the stereotype "Association".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetAssociationFetchType(MElement this) :
	emGetTaggedValue( prAssociation(), prAssociationFetchType() );


// -- Xtend scripts for Stereotype "ColumnMapping" --

/**
 * Checks if an element is annotated with the stereotype "ColumnMapping".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasColumnMappingStereotype(MElement this) :
	emHasStereotypeAssignment( prColumnMapping() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "ColumnMapping".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasColumnMappingTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prColumnMapping(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "ColumnMapping".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasColumnMappingTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prColumnMapping(), tag, valueReference );


// -- "columnName" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "columnName" of the stereotype "ColumnMapping" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasColumnMappingUtilizableColumnName(MElement this) :
	emHasUtilizableTaggedValue( prColumnMapping(), prColumnMappingColumnName() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "columnName" of the stereotype "ColumnMapping".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasColumnMappingColumnName(MElement this, String value) :
	emHasTaggedValue( prColumnMapping(), prColumnMappingColumnName(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "columnName" of the stereotype "ColumnMapping".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetColumnMappingOwningColumnName(MElement this) : 
	emOwningTaggedValues( prColumnMapping(), prColumnMappingColumnName() );


/**
 * Returns the value of the single-valued tagged value "columnName"
 * of the stereotype "ColumnMapping".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetColumnMappingColumnName(MElement this) :
	emGetTaggedValue( prColumnMapping(), prColumnMappingColumnName() );


// -- Xtend scripts for Stereotype "Inheritance" --

/**
 * Checks if an element is annotated with the stereotype "Inheritance".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasInheritanceStereotype(MElement this) :
	emHasStereotypeAssignment( prInheritance() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "Inheritance".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasInheritanceTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prInheritance(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "Inheritance".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasInheritanceTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prInheritance(), tag, valueReference );


// -- "inheritanceType" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "inheritanceType" of the stereotype "Inheritance" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasInheritanceUtilizableInheritanceType(MElement this) :
	emHasUtilizableTaggedValue( prInheritance(), prInheritanceInheritanceType() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "inheritanceType" of the stereotype "Inheritance".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasInheritanceInheritanceType(MElement this, String value) :
	emHasTaggedValue( prInheritance(), prInheritanceInheritanceType(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "inheritanceType" of the stereotype "Inheritance".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetInheritanceOwningInheritanceType(MElement this) : 
	emOwningTaggedValues( prInheritance(), prInheritanceInheritanceType() );


/**
 * Returns the value of the single-valued tagged value "inheritanceType"
 * of the stereotype "Inheritance".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetInheritanceInheritanceType(MElement this) :
	emGetTaggedValue( prInheritance(), prInheritanceInheritanceType() );


// -- "typeColumn" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "typeColumn" of the stereotype "Inheritance" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasInheritanceUtilizableTypeColumn(MElement this) :
	emHasUtilizableTaggedValue( prInheritance(), prInheritanceTypeColumn() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "typeColumn" of the stereotype "Inheritance".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasInheritanceTypeColumn(MElement this, String value) :
	emHasTaggedValue( prInheritance(), prInheritanceTypeColumn(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "typeColumn" of the stereotype "Inheritance".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetInheritanceOwningTypeColumn(MElement this) : 
	emOwningTaggedValues( prInheritance(), prInheritanceTypeColumn() );


/**
 * Returns the value of the single-valued tagged value "typeColumn"
 * of the stereotype "Inheritance".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetInheritanceTypeColumn(MElement this) :
	emGetTaggedValue( prInheritance(), prInheritanceTypeColumn() );


// -- Xtend scripts for Stereotype "TableMapping" --

/**
 * Checks if an element is annotated with the stereotype "TableMapping".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasTableMappingStereotype(MElement this) :
	emHasStereotypeAssignment( prTableMapping() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "TableMapping".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTableMappingTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prTableMapping(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "TableMapping".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTableMappingTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prTableMapping(), tag, valueReference );


// -- "tableName" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "tableName" of the stereotype "TableMapping" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTableMappingUtilizableTableName(MElement this) :
	emHasUtilizableTaggedValue( prTableMapping(), prTableMappingTableName() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "tableName" of the stereotype "TableMapping".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTableMappingTableName(MElement this, String value) :
	emHasTaggedValue( prTableMapping(), prTableMappingTableName(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "tableName" of the stereotype "TableMapping".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTableMappingOwningTableName(MElement this) : 
	emOwningTaggedValues( prTableMapping(), prTableMappingTableName() );


/**
 * Returns the value of the single-valued tagged value "tableName"
 * of the stereotype "TableMapping".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTableMappingTableName(MElement this) :
	emGetTaggedValue( prTableMapping(), prTableMappingTableName() );


// -- "typeColumn" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "typeColumn" of the stereotype "TableMapping" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTableMappingUtilizableTypeColumn(MElement this) :
	emHasUtilizableTaggedValue( prTableMapping(), prTableMappingTypeColumn() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "typeColumn" of the stereotype "TableMapping".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTableMappingTypeColumn(MElement this, String value) :
	emHasTaggedValue( prTableMapping(), prTableMappingTypeColumn(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "typeColumn" of the stereotype "TableMapping".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTableMappingOwningTypeColumn(MElement this) : 
	emOwningTaggedValues( prTableMapping(), prTableMappingTypeColumn() );


/**
 * Returns the value of the single-valued tagged value "typeColumn"
 * of the stereotype "TableMapping".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTableMappingTypeColumn(MElement this) :
	emGetTaggedValue( prTableMapping(), prTableMappingTypeColumn() );


// -- Xtend scripts for Stereotype "Transient" --

/**
 * Checks if an element is annotated with the stereotype "Transient".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasTransientStereotype(MElement this) :
	emHasStereotypeAssignment( prTransient() );


// PROTECTED REGION ID(accesselement.own.code.8091e22d-1c81-11e3-8460-2388508c54e2) ENABLED START
// TODO: put your further code here
// PROTECTED REGION END
