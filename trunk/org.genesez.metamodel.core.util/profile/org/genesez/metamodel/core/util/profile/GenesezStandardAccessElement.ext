/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */

import gcore;


/**
 * Simplifies access to "GeneSEZ Standard Profile" profile and makes working with them more easier.
 * 
 * HINT: All scripts for extension mechanism are available under the prefix 'em'.
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer) 
 */


// use metamodel core extension mechanism scripts
extension org::genesez::metamodel::core::util::AccessElement;

// use profile scripts
extension org::genesez::metamodel::core::util::profile::GeneSEZStandardProfile;


// -- Xtend scripts for Stereotype "accessor" --

/**
 * Checks if an element is annotated with the stereotype "accessor".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasAccessorStereotype(MElement this) :
	emHasStereotypeAssignment( prAccessor() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "accessor".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAccessorTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prAccessor(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "accessor".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAccessorTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prAccessor(), tag, valueReference );


// -- "add" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "add" of the stereotype "accessor" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasAccessorUtilizableAdd(MElement this) :
	emHasUtilizableTaggedValue( prAccessor(), prAccessorAdd() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "add" of the stereotype "accessor".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAccessorAdd(MElement this, String value) :
	emHasTaggedValue( prAccessor(), prAccessorAdd(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "add" of the stereotype "accessor".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetAccessorOwningAdd(MElement this) : 
	emOwningTaggedValues( prAccessor(), prAccessorAdd() );


/**
 * Returns the value of the single-valued tagged value "add"
 * of the stereotype "accessor".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetAccessorAdd(MElement this) :
	emGetTaggedValue( prAccessor(), prAccessorAdd() );


// -- "getter" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "getter" of the stereotype "accessor" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasAccessorUtilizableGetter(MElement this) :
	emHasUtilizableTaggedValue( prAccessor(), prAccessorGetter() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "getter" of the stereotype "accessor".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAccessorGetter(MElement this, String value) :
	emHasTaggedValue( prAccessor(), prAccessorGetter(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "getter" of the stereotype "accessor".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetAccessorOwningGetter(MElement this) : 
	emOwningTaggedValues( prAccessor(), prAccessorGetter() );


/**
 * Returns the value of the single-valued tagged value "getter"
 * of the stereotype "accessor".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetAccessorGetter(MElement this) :
	emGetTaggedValue( prAccessor(), prAccessorGetter() );


// -- "remove" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "remove" of the stereotype "accessor" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasAccessorUtilizableRemove(MElement this) :
	emHasUtilizableTaggedValue( prAccessor(), prAccessorRemove() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "remove" of the stereotype "accessor".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAccessorRemove(MElement this, String value) :
	emHasTaggedValue( prAccessor(), prAccessorRemove(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "remove" of the stereotype "accessor".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetAccessorOwningRemove(MElement this) : 
	emOwningTaggedValues( prAccessor(), prAccessorRemove() );


/**
 * Returns the value of the single-valued tagged value "remove"
 * of the stereotype "accessor".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetAccessorRemove(MElement this) :
	emGetTaggedValue( prAccessor(), prAccessorRemove() );


// -- "setter" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "setter" of the stereotype "accessor" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasAccessorUtilizableSetter(MElement this) :
	emHasUtilizableTaggedValue( prAccessor(), prAccessorSetter() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "setter" of the stereotype "accessor".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasAccessorSetter(MElement this, String value) :
	emHasTaggedValue( prAccessor(), prAccessorSetter(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "setter" of the stereotype "accessor".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetAccessorOwningSetter(MElement this) : 
	emOwningTaggedValues( prAccessor(), prAccessorSetter() );


/**
 * Returns the value of the single-valued tagged value "setter"
 * of the stereotype "accessor".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetAccessorSetter(MElement this) :
	emGetTaggedValue( prAccessor(), prAccessorSetter() );


// -- Xtend scripts for Stereotype "exclude" --

/**
 * Checks if an element is annotated with the stereotype "exclude".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExcludeStereotype(MElement this) :
	emHasStereotypeAssignment( prExclude() );


// -- Xtend scripts for Stereotype "external" --

/**
 * Checks if an element is annotated with the stereotype "external".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasExternalStereotype(MElement this) :
	emHasStereotypeAssignment( prExternal() );


// -- Xtend scripts for Stereotype "primitive" --

/**
 * Checks if an element is annotated with the stereotype "primitive".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasPrimitiveStereotype(MElement this) :
	emHasStereotypeAssignment( prPrimitive() );


// PROTECTED REGION ID(accesselement.own.code.implementation._14_0_b6f02e1_1212566546718_389908_139) ENABLED START
// TODO: put your further code implementations here
// PROTECTED REGION END
