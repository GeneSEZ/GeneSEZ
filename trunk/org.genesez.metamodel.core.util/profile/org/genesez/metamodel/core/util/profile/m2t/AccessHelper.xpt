«REM»
	(c) GeneSEZ Research Group
	All rights reserved.
	
	Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
«ENDREM»

«IMPORT gcore»


«REM»
	Generation of a access helper profile file.
		
	@author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
«ENDREM»

«EXTENSION org::genesez::metamodel::core::util::AccessElement»

«EXTENSION org::genesez::metamodel::core::util::profile::m2t::util::AccessHelper»
«EXTENSION org::genesez::metamodel::core::util::profile::m2t::util::GlobalVar»
«EXTENSION org::genesez::metamodel::core::util::profile::m2t::util::Naming»


«REM»
	-- Public Templates (THE FOLLOWING TEMPLATES CAN BE CALLED FROM OUTSIDE OF THIS FILE) -------------------
«ENDREM»

«REM»
«ENDREM»
«DEFINE Root FOR MModel -»
«FILE globalVarAccessHelperFileName() -»
«EXPAND Comment::CopyrightNotice -»

import gcore;


«EXPAND Comment::AccessHelperFile -»


// use metamodel core extension mechanism scripts
extension org::genesez::metamodel::core::util::AccessElement;

// use profile scripts
extension «globalVarXtendFilePath() -»::«globalVarProfileFileName().replaceFirst(".ext", "") -»;


«EXPAND StereotypeElement FOREACH allNestedClassifiers().typeSelect(MClass).sortBy( c | c.name ) -»
«ENDFILE -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE StereotypeElement FOR MClass -»
«EXPAND Comment::StereotypeSection -»

«EXPAND HasStereotype -»
«EXPAND HasTaggedValue -»
«EXPAND HasTaggedValueReference -»
«FOREACH property.typeSelect( MAttribute ).sortBy( a | a.name ) AS a -»
	«EXPAND Comment::TaggedValueSection FOR a -»
	
	«EXPAND HasUtilizableTaggedValue FOR a -»
	«EXPAND HasTaggedValue FOR a -»
	«EXPAND GetOwningTaggedValues FOR a -»
	«EXPAND GetTaggedValue FOR a -»
	«REM»«EXPAND SetTaggedValue FOR a -»«ENDREM»«"" -»
	«REM»«EXPAND IsTaggedValue  FOR a -»«ENDREM»«"" -»
«ENDFOREACH -»
«ENDDEFINE»


«REM»
	-- Private Templates (THE FOLLOWING TEMPLATES SHOULD NOT BE INVOKED FROM OUTSIDE OF THIS FILE) ----------
«ENDREM»

«REM»
«ENDREM»
«DEFINE HasStereotype FOR MClass -»
«EXPAND Comment::HasStereotype -»
boolean «asAccessHelperHasStereotype() -»(MElement this) :
	emHasStereotypeAssignment( «asProfileScriptName() -»() );


«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE HasTaggedValue FOR MClass -»
«IF hasAttributes() -»
«EXPAND Comment::HasTaggedValue -»
boolean «asAccessHelperHasTaggedValue() -»(MElement this, String tag, String value) :
	emHasTaggedValue( «asProfileScriptName() -»(), tag, value );


«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE HasTaggedValueReference FOR MClass -»
«IF hasAttributes() -»
«EXPAND Comment::HasTaggedValueReference -»
boolean «asAccessHelperHasTaggedValue() -»(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( «asProfileScriptName() -»(), tag, valueReference );


«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE HasTaggedValue FOR MAttribute -»
«EXPAND Comment::HasTaggedValue -»
«IF !isTaggedValueReference() -»
boolean «asAccessHelperHasTaggedValue() -»(MElement this, String value) :
	emHasTaggedValue( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»(), value );
«ELSE -»
boolean «asAccessHelperHasTaggedValue() -»(MElement this, MElement valueReference) :
	emHasTaggedValue( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»(), valueReference );
«ENDIF -»


«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE HasUtilizableTaggedValue FOR MAttribute -»
«EXPAND Comment::HasUtilizableTaggedValue -»
«IF !isTaggedValueReference() -»
boolean «asAccessHelperHasUtilizableTaggedValue() -»(MElement this) :
	emHasUtilizableTaggedValue( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»() );
«ELSE -»
boolean «asAccessHelperHasUtilizableTaggedValue() -»(MElement this) :
	emHasUtilizableTaggedValueReference( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»() );
«ENDIF -»


«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE GetOwningTaggedValues FOR MAttribute -»
«EXPAND Comment::GetOwningTaggedValues -»
List[MTaggedValue] «asAccessHelperGetOwningTaggedValues() -»(MElement this) : 
	emOwningTaggedValues( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»() );


«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE GetTaggedValue FOR MAttribute -»
«EXPAND Comment::GetTaggedValue -»
«IF multiplicity.isSingleValued() -»
«IF !isTaggedValueReference() -»
String «asAccessHelperGetTaggedValue() -»(MElement this) :
	emGetTaggedValue( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»() );
«ELSE -»
MElement «asAccessHelperGetTaggedValue() -»(MElement this) :
	emGetTaggedValueReference( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»() );
«ENDIF -»
«ELSE -»
«IF !isTaggedValueReference() -»
List[String] «asAccessHelperGetTaggedValue() -»(MElement this) : 
	emAllTaggedValues( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»() );
«ELSE -»
List[MElement] «asAccessHelperGetTaggedValue() -»(MElement this) : 
	emAllTaggedValueReferences( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»() );
«ENDIF -»
«ENDIF -»


«ENDDEFINE»


«REM»
«ENDREM»
«REM»
«DEFINE SetTaggedValue FOR MAttribute -»
«EXPAND Comment::SetTaggedValue -»
«IF !isTaggedValueReference() -»
Void «asAccessHelperSetTaggedValue() -»(MElement this, String value) :
	setTaggedValue( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»(), value );
«ELSE -»
Void «asAccessHelperSetTaggedValue() -»(MElement this, MElement valueReference) :
	setTaggedValue( «classifier.asProfileScriptName() -»(), «asProfileScriptName() -»(), valueReference );
«ENDIF -»


«ENDDEFINE»
«ENDREM»