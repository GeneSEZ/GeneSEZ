/**
 * Adds the method definition of interface realizations and abstract methods of base classes to non abstract classes.
 * 
 * - if class has generalizations with abstract methods, these are added as non abstract
 * - if class has generalizations, only the direct realizations are added
 * - if class has no generalizations, the realizations are added recursivly, i.e. the
 *   interfaces and recursively all generalizations of the interfaces
 * 
 * No further searches in the inheritance hierarchy is done
 * 
 * @author	tobias haubold <toh@fh-zwickau.de>
 */
import gcore;

extension org::genesez::util::logging::Logging;
extension org::genesez::metamodel::core::util::AccessHelper;
extension org::genesez::metamodel::core::util::m2m::CloneElement;

/**
 * Performs the model transformation to add operations of interfaces to classes.
 */
MPackage realize(MPackage this) :
	useLogger("org.genesez.metamodel.core.util.m2m.Realization") ->
	nestedPackage.realize() ->
	classifier.check() ->
	this;

/**
 * Processes the realization of operations of a classifier.
 */
MClassifier check(MClassifier this) :
	metaType == MClass && !abstract
		? ( generalization.isEmpty
			? realization.typeSelect(MInterface).recursiveRealize( (MClass)this )
			: (
				generalization.typeSelect(MClassifier).realize( this ) ->
				realization.typeSelect(MInterface).realize( ((MClass)this) )
			)
		) : this ->
	this;

/**
 * Adds abstract operations of the base class as non abstract operations.
 */
MClass realize(MClassifier base, MClassifier this) :
	base.operation.select(e|e.abstract).cloneOperation( this ).setAbstract(false) ->
	this;

/**
 * Adds the operations of the interface to the list of operations of the class.
 */
MClass realize(MInterface realize, MClass this) :
	realize.operation.cloneOperation( this ).setAbstract(false) ->
	this;

/**
 * Adds the operations of the interface to the list of operations of the class
 * and additionally performs a recursive call with all generalizations of the interface
 */
MClass recursiveRealize(MInterface realize, MClass this) :
	realize.realize( this ) ->
	realize.generalization.typeSelect(MInterface).recursiveRealize( this ) ->
	this;
