/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */
import gcore;

/**
 * Helper scripts to clone GeneSEZ Core meta model elements.
 * 
 * @author	Tobias Haubold <tobias.haubold@fh-zwickau.de> (maintainer)
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
 */
extension org::genesez::metamodel::core::util::m2m::CreateElement;
extension org::genesez::util::logging::Logging;

MOperation cloneOperation(MOperation source, MClassifier container) :
	let op = createOperation(container, source.cloneXmiGuid(container), source.name) :
		source.logTrace("cloning: " + source.metaType + ": ") ->
		op.processOperation(source.visibility, source.static, source.abstract, source.final) ->
		// references
		op.raisedException.addAll( source.raisedException ) ->
		// containments
		op.parameter.addAll( source.parameter.cloneParameter(op) ) ->
		source.return != null
			? op.setReturn(
				source.return.cloneParameter(source)
				.processParameter( source.return.defaultvalue, source.return.direction, source.return.lowerBoundMultiplicity, source.return.upperBoundMultiplicity, source.return.unique, source.return.ordered )
			) : op ->
		// deprecated
		op.setReturnType( source.returnType ) ->
		op;

MParameter cloneParameter(MParameter source, MOperation container) :
	let clone = createParameter( container, source.cloneXmiGuid(container), source.name ) :
		source.logTrace("cloning: " + source.metaType + ": ") ->
		source.processParameter( source.defaultvalue, source.direction, source.lowerBoundMultiplicity, source.upperBoundMultiplicity, source.unique, source.ordered) ->
		// references
		clone.setType( source.type ) ->
		clone;


String cloneXmiGuid(MElement elem, MElement container) :
	container.xmiGuid + "_" + elem.xmiGuid;

String cloneXmiGuid(MComment comment, MElement container) :
	container.xmiGuid + "_" + comment.xmiGuid;

String cloneXmiGuid(MComment comment, MComment container) :
	container.xmiGuid + "_" + comment.xmiGuid;
