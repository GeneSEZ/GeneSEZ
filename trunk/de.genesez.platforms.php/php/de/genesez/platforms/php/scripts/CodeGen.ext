import gcore;

extension org::genesez::platforms::common::AccessHelper;
extension org::genesez::platforms::common::log::Log;
extension org::genesez::platforms::common::m2t::Helper;

boolean isApiAccessorStyle() : accessorStyle() == "api" ? true : false;
boolean isMagicAccessorStyle() : accessorStyle() == "magic" ? true : false;
boolean accessorStyle() : GLOBALVAR accessorStyle == null ? "magic" : GLOBALVAR accessorStyle;

boolean useOldAssociationHandling() : GLOBALVAR useOldAssociationHandling == null ? false : GLOBALVAR useOldAssociationHandling;

List[MProperty] magicGet(MClassifier this) :
	let p = {} :
		p.addAll( property.typeSelect(MAttribute).select( e|e.generateGetter() ) ) ->
		p.addAll( allInitializableAssociationRoles() ) ->
		p;

String filterType(String this) :
	switch (this) {
		case "mixed" : ""
		case "array" : ""
		default : this
	};

/**
 * determines if a type hint should be generated for the specified type
 */
boolean generateTypeHint(MType this) :
	switch (metaType) {
//		case MClassifier : hasStereotype((MClassifier)this, "di")
//		case MExternal : false
		case MClassifier : true
		case MClass : true
		case MInterface : true
		case MExternal : true
		case MPrimitiveType : false
		case MGeneric : false
		default : false
	};
