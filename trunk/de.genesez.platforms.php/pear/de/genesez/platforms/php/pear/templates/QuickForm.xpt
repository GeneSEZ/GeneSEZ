«REM»
	generates a html formular definition based on PEAR::HTML_QuickForm
	
	currently covered:
	- just text fields for simple types + a submit button
	
	TODO:
	- customizable output folder for form classes
	- remove static 'password' field check
	- 
	
	@version	alpha
«ENDREM»


«REM» based on genesez meta model «ENDREM»
«IMPORT genesezMM»

«REM» use logging «ENDREM»
«EXTENSION de::genesez::io::io»
«REM» neat m2t helper functions «ENDREM»
«EXTENSION de::genesez::common::m2t::Helper»
«REM» use conversion functions «ENDREM»
«EXTENSION de::genesez::common::Conversion»
«REM» use the type mapping «ENDREM»
«EXTENSION de::genesez::common::typemapping::TypeMapping»

«REM» use pear naming conventions «ENDREM»
«EXTENSION de::genesez::platforms::php::pear::scripts::Naming»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	processes the contents of a model to generate forms from classes
	@param	this	a model
«ENDREM»
«DEFINE Root FOR MModel»
	«enableLogging("finest")»
	«EXPAND Root FOREACH nestedPackage.rejectIgnoredPackages()»
«ENDDEFINE»

«REM»
	processes the contents of a package
	reject all data types from further processing
	@context	a package
«ENDREM»
«DEFINE Root FOR MPackage»
	«EXPAND Root FOREACH nestedPackage»
	«EXPAND Root FOREACH classifier.reject( e| e.metaType == MDataType || e.metaType == MEnumeration )»
«ENDDEFINE»

«REM»
	interfaces are not mapped to QuickForm fomular definitions!
«ENDREM»
«DEFINE Root FOR MInterface»
	«severe("'MInterfaces's are not mapped to a QuickForm formular definitions!")»
«ENDDEFINE»

«REM»
	should not happend, because 'MClassifier' is an abstract class!
	it's just there for error-free templates :-)
«ENDREM»
«DEFINE Root FOR MClassifier»
	«severe("'MClassifier's are currently not supported by the QuickForm formular definition templates!")»
«ENDDEFINE»

«REM»
	generates the formular definition
«ENDREM»
«DEFINE Root FOR MClass»
«FILE asFormFileName() -»
<?php

require_once 'HTML/QuickForm.php';
«EXPAND _Class -»
?>
«ENDFILE»
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	generates a form class
«ENDREM»
«DEFINE _Class FOR MClass -»
class «asFormTypeName()» {
	«EXPAND _BuildForm -»
}
«ENDDEFINE»

«REM»
	generates a method which builds the form
«ENDREM»
«DEFINE _BuildForm FOR MClass -»
	public static function buildForm( $defaultValues = array() ) {
		$form = new HTML_QuickForm('«asFormName()»');
		$form->setDefaults( $defaultValues );
		
		$form->addElement('hidden', 'id');
		«EXPAND _Element FOREACH property.select( e| e.multiplicity == 1 ) -»
		
		«EXPAND _Filter FOREACH property.select( e| e.multiplicity == 1 ) -»
		
		«PROTECT CSTART '/* ' CEND ' */' ID ("pear.quickform.buildform." + xmiGuid)»
		// TODO: further formular definitions for class '«asFormTypeName()»'
		«ENDPROTECT»
		
		$form->addElement('submit', 'save', 'save');
		
		return $form;
	}
«ENDDEFINE»

«REM»
	generates a formular element
	TODO: remove 'password' field check
«ENDREM»
«DEFINE _Element FOR MProperty -»
		«IF name == "password" || name == "pwd" || name == "pass" -»
		$form->addElement('password', '«asFormElementName()»', 'Enter the «asFormElementName()»');
		«ELSE -»
		$form->addElement('text', '«asFormElementName()»', 'Enter the «asFormElementName()»');
		«ENDIF -»
«ENDDEFINE»

«REM»
	generates filters
«ENDREM»
«DEFINE _Filter FOR MProperty -»
		$form->applyFilter('«asFormElementName()»', 'trim');
«ENDDEFINE»

