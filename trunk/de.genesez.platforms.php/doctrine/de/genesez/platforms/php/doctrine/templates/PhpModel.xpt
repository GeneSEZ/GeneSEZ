«REM»
	generates the table definition for phpdoctrine as php file
	
	currently covered:
	- properties with simple types as columns
	
	TODO:
	- associations + collection mappings
	- simple types, size + constraints
	- comments (class, methods + maybe virtual attributes (table columns)? )
	- maybe introduce a parameter (name of a stereotype) which indicates persistent classes in the model
	
	@version	alpha
«ENDREM»


«REM» based on genesez meta model «ENDREM»
«IMPORT genesezMM»

«REM» use logging «ENDREM»
«EXTENSION de::genesez::io::io»
«REM» neat m2t helper functions «ENDREM»
«EXTENSION de::genesez::common::m2t::Helper»
«REM» use helper to access information «ENDREM»
«EXTENSION de::genesez::common::AccessHelper»
«REM» use conversion functions «ENDREM»
«EXTENSION de::genesez::common::Conversion»
«REM» use the type mapping «ENDREM»
«EXTENSION de::genesez::common::typemapping::TypeMapping»

«REM» use php naming conventions «ENDREM»
«EXTENSION de::genesez::platforms::php::scripts::Naming»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	main entry point for generating a model definition
	@param	this	a model
«ENDREM»
«DEFINE Root FOR MModel»
	«enableLogging("finest")»
	«EXPAND Root FOREACH nestedPackage.rejectIgnoredPackages()»
«ENDDEFINE»

«REM»
	processes the contents of a package
	reject all data types from further processing
	@context	a package
«ENDREM»
«DEFINE Root FOR MPackage»
	«EXPAND Root FOREACH nestedPackage»
	«EXPAND Root FOREACH classifier.reject( e| e.metaType == MDataType || e.metaType == MEnumeration )»
«ENDDEFINE»

«REM»
	interfaces are not mapped to a table definition!
«ENDREM»
«DEFINE Root FOR MInterface»
	«severe("'MInterfaces's are not mapped to a table definition!")»
«ENDDEFINE»

«REM»
	should not happend, because 'MClassifier' is an abstract class!
	it's just there for error-free templates :-)
«ENDREM»
«DEFINE Root FOR MClassifier»
	«severe("'MClassifier's are currently not supported by the phpdoctrine model definition templates!")»
«ENDDEFINE»

«REM»
	generates the table definition
«ENDREM»
«DEFINE Root FOR MClass»
«FILE getFilename(".php") -»
<?php
«EXPAND _Class -»
?>
«ENDFILE»
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	generates the class definition
«ENDREM»
«DEFINE _Class FOR MClass -»
class «asTypeName()» extends Doctrine_Record {
	«EXPAND _TableDefinition -»
	
	«EXPAND _SetUp -»
}
«ENDDEFINE»

«REM»
	generates the function 'setTableDefinition'
«ENDREM»
«DEFINE _TableDefinition FOR MClass -»
	public function setTableDefinition() {
		«EXPAND _SimpleType FOREACH property.select( e| e.multiplicity == 1 )»
		«PROTECT CSTART '/* ' CEND ' */' ID ("php.doctrine.record.definition." + xmiGuid)»
		// TODO: further table definitions for class '«asTypeName()»'
		«ENDPROTECT»
	}
«ENDDEFINE»

«REM»
	generates the function 'setUp'
«ENDREM»
«DEFINE _SetUp FOR MClass -»
	public function setUp() {
		«PROTECT CSTART '/* ' CEND ' */' ID ("php.doctrine.record.setUp." + xmiGuid)»
		// TODO: further setups for class '«asTypeName()»'
		«ENDPROTECT»
	}
«ENDDEFINE»

«REM»
	generates the definition of a table column
«ENDREM»
«DEFINE _SimpleType FOR MProperty -»
		$this->hasColumn('«name»', '«type.mapName()»');
«ENDDEFINE»

