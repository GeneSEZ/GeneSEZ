/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */
import gcore;

/**
 * Modifies the type of workflow parameter properties.
 * Currently the mwe2 editor can not deal with type parameters (java generics).
 * This script modifies the type to the constraining type of the generic.
 * 
 * @author	tobias haubold <toh@fh-zwickau.de>
 */
extension org::genesez::workflow::Utility;
extension org::genesez::metamodel::core::util::AccessElement;
extension org::genesez::metamodel::core::util::Conversion;
extension org::genesez::util::logging::Logging;


/**
 * Delegates execution to containment objects.
 * @return	the context object itself
 */
MPackage modify(MPackage this) :
	nestedPackage.modify() ->
	classifier.modify() ->
	this;

/**
 * Delegates execution to containment objects.
 * @return	the context object itself
 */
MClassifier modify(MClassifier this) :
	classifier.modify() ->
	property.check() ->
	this;

/**
 * Checks if the property is a workflow parameter and has a generic type and delegates the execution appropriately.
 * @return	the context object itself
 */
MProperty check(MProperty this) :
	emHasStereotypeAssignment( prStereotypeParameter() ) && type.isGenericType()
		? changeType( (MGeneric)type )
		: this;

/**
 * Changes the type of the specified property with the specified type.
 * @return	the context object itself
 */
MProperty changeType(MProperty this, MGeneric type) :
	logInfo("Changed generic type of parameter to its first constraining classifier or default type: " + fqmn()) ->
	setType( type.constraint.first() ) ->
	this;
