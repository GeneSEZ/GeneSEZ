module org.genesez.adapter.magicdraw.profile.AbstractProfileWorkflow

///////////////////////////////////////////////////////////////////////////////

// define a property for the file path and name of the UML2 model input
var uml2modelfile

// define a property for the output directory
var outputDir

var xtendFilePath

var profileFileName = "Profile.ext"

var accessElementFileName = "AccessElement.ext"

var stereotypeNamePrefix = ""

var enumerationNamePrefix = ""

///////////////////////////////////////////////////////////////////////////////

var uml2setup = org.genesez.adapter.uml2.workflow.UmlSetup {
	standardUML2Setup = true
}
var gcore = org.eclipse.xtend.typesystem.emf.EmfMetaModel {
	metaModelPackage = "org.genesez.metamodel.gcore.GcorePackage"
}
var uml = org.eclipse.xtend.typesystem.uml2.UML2MetaModel {}


Workflow {
	
	component = org.genesez.workflow.CompositeComponent {
		
		// read the exported UML2 model file
		component = org.genesez.workflow.EmfReader {
			slot = "uml2model"
			
			file = uml2modelfile
		}
		
		// validate the UML2 model for transformability
		component = org.genesez.workflow.xpand.ValidatorComponent {
			metaModel = uml
			slot = "uml2model"
			
			validator = org.genesez.adapter.uml2.workflow.UmlModelValidation {}
			validator = org.genesez.adapter.uml2.workflow.UmlStateMachineValidation {}
			validator = org.genesez.adapter.uml2.workflow.Uml2GcoreStateMachineValidation {}
		}
		
		// transform the UML2 model into a GeneSEZ model
		component = org.genesez.workflow.xpand.Model2ModelComponent {
			metaModel = uml
			metaModel = gcore
			slot = "uml2model"
			outputSlot = "coremodel"
			
			model2model = org.genesez.adapter.uml2.workflow.Uml2Gcore {}
		}
		
	}
	
	// validate the GeneSEZ model against general constraints
	component = org.genesez.workflow.xpand.ValidatorComponent {
		metaModel = gcore
		slot = "coremodel"
		
		validator = org.genesez.workflow.SimpleValidator {
			script = "org::genesez::metamodel::core::util::validation::Constraints"
		}
		
	}
	
	// run the profile code generation and transform the model into Xtend source code
	component = org.genesez.workflow.xpand.Model2TextSupport {
		
		component = org.genesez.workflow.xpand.Model2TextComponent {
			metaModel = gcore
			slot = "coremodel"
			
			// directory in which the generated files are placed
			outputDir = outputDir
			
			model2text = org.genesez.metamodel.core.util.workflow.ProfileGenerator {
				xtendFilePath = xtendFilePath
				profileFileName = profileFileName
				accessElementFileName = accessElementFileName
				stereotypeNamePrefix = stereotypeNamePrefix
				enumerationNamePrefix = enumerationNamePrefix
			}
			
		}
		
		fileDeletion = org.genesez.m2t.deletion.FileDeletion {
			enabled = false
		}
		
		folderDeletion = org.genesez.m2t.deletion.FolderDeletion {
			enabled = false
		}
		
	}
	
}
