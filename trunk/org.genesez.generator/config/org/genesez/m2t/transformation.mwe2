module org.genesez.m2t

var name = "org.genesez.m2t"
var namespace = "org::genesez::m2t"
var classpath = "org/genesez/m2t"

var uml2setup = org.genesez.adapter.uml2.workflow.UmlSetup {
	standardUML2Setup = true
}
var gcore = org.eclipse.xtend.typesystem.emf.EmfMetaModel {
	metaModelPackage = "org.genesez.metamodel.gcore.GcorePackage"
}
var uml = org.eclipse.xtend.typesystem.uml2.UML2MetaModel {}

Workflow {
	// uml2genesez transformation
	component = org.genesez.workflow.CompositeComponent {
		component = org.genesez.workflow.EmfReader {
			file = "modeling/${name}/genesez.m2t.uml"
			slot = "uml2model"
		}
		component = org.genesez.workflow.xpand.ValidatorComponent {
			metaModel = uml
			slot = "uml2model"
			
			validator = org.genesez.adapter.uml2.workflow.UmlModelValidation {}
			validator = org.genesez.adapter.uml2.workflow.UmlStateMachineValidation {}
			validator = org.genesez.adapter.uml2.workflow.Uml2GcoreStateMachineValidation {}
		}
		component = org.genesez.workflow.xpand.Model2ModelComponent {
			metaModel = uml
			metaModel = gcore
			slot = "uml2model"
			outputSlot = "coremodel"
			
			model2model = org.genesez.adapter.uml2.workflow.Uml2Gcore {
				includeProfiles = "org.genesez.workflow.profile"
			}
		}
	}
	
	// dump gcore model for debugging
	component = org.genesez.workflow.EmfWriter {
		file = "model/${name}/uml2gcore.gcore.xmi"
	}
	
	// prepare gcore model for java source code generation
	component = org.genesez.workflow.xpand.ModelModificationComponent {
		metaModel = gcore
		
		model2model = org.genesez.workflow.SimpleScript {
			script = "org::genesez::platform::java::m2m::PackageExtend::extend"
		}
		model2model = org.genesez.workflow.SimpleScript {
			script = "org::genesez::platform::java::m2m::Prepare::prepare"
		}
		model2model = org.genesez.workflow.SimpleScript {
			script = "org::genesez::m2t::ApacheCommonsLogging::modify"
		}
		model2model = org.genesez.workflow.SimpleScript {
			script = "org::genesez::platform::java::m2m::aop::AssociationLibrary::prepare"
		}
		// cares about property access operations
		model2model = org.genesez.workflow.SimpleScript {
			script = "org::genesez::platform::java::m2m::AccessOperation::prepare"
		}
		model2model = org.genesez.workflow.SimpleScript {
			script = "org::genesez::metamodel::core::util::m2m::Realization::realize"
		}
		model2model = org.genesez.workflow.SimpleScript {
			script = "org::genesez::metamodel::core::util::m2m::UseDependencies::addUseDependencies"
		}
	}
	
	// dump modified gcore model for debugging
	component = org.genesez.workflow.EmfWriter {
		cloneSlotContents = true
		file = "model/${name}/uml2gcore.modified.gcore.xmi"
	}
	
	// validate model for java source code generation
	component = org.genesez.workflow.xpand.ValidatorComponent {
		metaModel = gcore
		validator = org.genesez.workflow.SimpleValidator {
			script = "org::genesez::metamodel::core::util::validation::Constraints"
		}
		validator = org.genesez.workflow.SimpleValidator {
			script = "org::genesez::platform::java::validation::Syntax"
		}
	}
	
	// generate m2t sources
	component = org.genesez.workflow.xpand.Model2TextSupport {
		component = org.genesez.workflow.xpand.Model2TextComponent {
			metaModel = gcore
			outputDir = "../${name}/src-gen"
			
			importPreserverConfig = org.genesez.platform.java.workflow.JavaImportPreserverConfig {}
			postProcessor = platform.java.workflow.GeneSezJavaPostProcessor {}
			
			typeMappingFile = "${classpath}/typemapping.xml"
			typeMappingFile = "${classpath}/typemapping.rcs.xml"
			typeMappingFile = "typemapping.acl.xml"
			typeMappingFile = "typemapping.java.xml"
			typeMappingFile = "typemapping.xpand.xml"
			
			aopTemplate = "org::genesez::platform::java::m2t::aop::AssociationLibrary"
			
			model2text = org.genesez.platform.java.workflow.Gcore2Java {
				excludePackageContent = "."
				
				excludePackage = "org::genesez::m2t::xpand"
				excludePackage = "org::genesez::m2t::cp::xpand"
			}
		}
	}
	
	// generate m2t xpand integration
	component = org.genesez.workflow.xpand.Model2TextSupport {
		component = org.genesez.workflow.xpand.Model2TextComponent {
			metaModel = gcore
			outputDir = "../org.genesez.workflow.xpand/m2t"
			
			importPreserverConfig = org.genesez.platform.java.workflow.JavaImportPreserverConfig {}
			postProcessor = platform.java.workflow.GeneSezJavaPostProcessor {}
			
			typeMappingFile = "${classpath}/typemapping.xml"
			typeMappingFile = "typemapping.acl.xml"
			typeMappingFile = "typemapping.java.xml"
			typeMappingFile = "typemapping.xpand.xml"
			
			aopTemplate = "org::genesez::platform::java::m2t::aop::AssociationLibrary"
			
			model2text = platform.java.workflow.Gcore2Java {
				excludePackageContent = "."
				excludePackageContent = "org::genesez::m2t"
				excludePackageContent = "org::genesez::m2t::cp"
				
				excludePackage = "org::genesez::m2t::deletion"
			}
		}
	}
}
