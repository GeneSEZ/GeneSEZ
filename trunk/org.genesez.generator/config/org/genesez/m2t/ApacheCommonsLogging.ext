
import gcore;

extension org::genesez::metamodel::core::util::AccessHelper;
extension org::genesez::metamodel::core::util::ModelNavigation;
extension org::genesez::metamodel::core::util::m2m::CreateElement;
extension org::genesez::util::logging::Logging;

MPackage modify(MPackage this) :
	nestedPackage.modify() ->
	classifier.modify() ->
	this;

MClassifier modify(MClassifier this) :
	classifier.modify() ->
	check() ->
	this;

MClassifier check(MClassifier this) :
	stereotype.exists( s|s.name == "log" )
		? logger()
		: this;

MClassifier logger(MClassifier this) :
	createAttribute( xmiGuid + "_logger", loggerAttributeName() )
		.processAttribute( "LogFactory.getLog(getClass())", false, true )
		.processProperty( "public", false, createMultiplicity( 0, 1, true, false ) )
		.wireType( navModel().ensureExternalTypeExistence( "org.apache.commons.logging.Log", "Log") )
		.classifier
		// ensure import statement
		.supplier.add( navModel().ensureExternalTypeExistence( "org.apache.commons.logging.LogFactory", "LogFactory" ) ) ->
		supplier.add( navModel().ensureExternalTypeExistence( "org.apache.commons.logging.Log", "Log") ) ->
	this;

String loggerAttributeName() : "logger";
