<?xml version="1.0" encoding="utf-8"?>

<workflow>
	
	<!-- example project where the generated artifacts are stored -->
	<property name="de.genesez.cebit.m2m.project.dir" value="../de.genesez.cebit.m2m" />
	
	
	<!-- Reading the example file. -->
	<cartridge
		file="de::genesez::workflows::makeGenesezModelProfile.oaw" 
		uml2ProfileFile="${de.genesez.cebit.m2m.project.dir}/model-exp/M2M_Profile.profile.uml"
		inputModelFile="${de.genesez.cebit.m2m.project.dir}/model-exp/cebit.uml"
		genesezModel="genesezModel"
		excludePackages="UML Standard Profile"
		mapClassesInModelToExternal="false"
		externalPackages = ""
		externalStereotypes = "external"
	/>
	
	<!-- Check constraints. /-->
	<cartridge
		file="de::genesez::workflows::constraintChecker.oaw"
		modelSlot="genesezModel"
		checkScript="de::genesez::platforms::java::constraints::Syntax"
		abortOnError="true"
	/>
	<cartridge
		file="de::genesez::workflows::constraintChecker.oaw"
		modelSlot="genesezModel"
		checkScript="de::genesez::platforms::java::constraints::Naming"
		abortOnError="true"
	/>
	
	<!-- Write the transformed model file.  /-->
	<cartridge
		file="de::genesez::workflows::xmiWriter.oaw"
		modelSlot="genesezModel"
		outputModelFile="${de.genesez.cebit.m2m.project.dir}/model-gen/cebit.xmi"
	/>
	
	<!-- Create java code without AOP in xpand templates.  /-->
	<cartridge
		file="de::genesez::workflows::java::performM2TAOP.oaw"
		rootTemplate="de::genesez::platforms::java::imsys::templates::Root::Root FOR genesezModel"
		aspects="de::genesez::platforms::java::imsys::templates::Aspects"
		typeMappingFile="../de.genesez.cebit.m2m.generator/typemapping/typeMapping4Cebit.xml"
		excludePackages=""
		configFile=""
		outputDir="${de.genesez.cebit.m2m.project.dir}/src-gen"
		proRegDir="${de.genesez.cebit.m2m.project.dir}/src-gen"
	/>
	

</workflow>
