<?xml version="1.0" encoding="UTF-8"?>
<!--
	Mirror Eclipse Plugins for GeneSEZ Aggregated Repository
	
	@author nihe
-->
<project name="org.genesez.p2mirror" default="">

	<!-- import ant contrib for usage -->
	<import file="lib/antcontrib.xml"/>
	
	<!-- import build.mirror properties file for local mirroring -->
	<property file="build.mirror.properties" />
	
	<!-- environment qualifier replacements -->
	<property environment="env"/>
	<property name="source.repository.url" value="${env.UPDATESITE}"/>
	<property name="plugin.name" value="${env.PLUGIN_NAME}"/>
	<property name="plugin.versions" value="${env.PLUGIN_VERSIONS}"/>
	<property name="tmp.dir" value="${env.WORKSPACE}/tmp"/>
	
	<property name="destination.repository.name" value="GeneSEZ Aggregated Repository"/>
	<property name="destination.repository.url" value="http://updatesite.genesez.org/mirror"/>
	<property name="destination.repository.artefact.url" value="${destination.repository.url}/artefact"/>
	<property name="destination.repository.metadata.url" value="${destination.repository.url}/metadata"/>
	<property name="destination.repository.dir" value="/srv/www/vhosts/org.genesez.updatesite/httpdocs/mirror"/>
	<property name="destination.repository.artefact.dir" value="${destination.repository.dir}/artefact"/>
	<property name="destination.repository.metadata.dir" value="${destination.repository.dir}/metadata"/>
	
	<property name="eclipse.home" value="/opt/genesez/build/eclipse/RELEASE_LATEST"/>
	
	
	
	<target name="mirror.repository" description="Mirror Repository for GeneSEZ Aggregated Repository">
		<echo message="Mirror p2 repository from ${source.repository.url}:"/>
		
		<for list="${plugin.versions}" param="plugin.version">
			<sequential>
				<echo message="... add ${plugin.name} (@{plugin.version})."/>
				<p2.mirror validate="true">
					<repository location="file:${destination.repository.artefact.dir}" name="${destination.repository.name}" kind="A"/>
					<repository location="file:${destination.repository.metadata.dir}/${plugin.name}/@{plugin.version}" name="${destination.repository.name}" kind="M"/>
					<source>
						<repository location="${source.repository.url}"/>
					</source>
					<iu id="${plugin.name}" version="@{plugin.version}"/>
				</p2.mirror>
			</sequential>
		</for>
	</target>
	
	<target name="mirror.repository.internal">
		<antcall target="mirror.repository" />
	</target>
	
	<target name="mirror.repository.external">
		<antcall target="execute.eclipse">
			<param name="ant.task" value="mirror.repository" />
		</antcall>
	</target>
	
	
	
	<target name="build.composite.repository">
		<echo message="Build p2 composite repository:"/>
		
		<echo message="... delete old configuration."/>
		<delete file="${destination.repository.dir}/*.jar"/>
		
		<echo message="... add p2 artefact repository."/>
		<p2.composite.repository>
			<repository location="file:${destination.repository.dir}" name="${destination.repository.name}"/>
			<add>
				<repository location="${destination.repository.artefact.url}" kind="A"/>
			</add>
		</p2.composite.repository>
	
		<for param="directory">
			<path>
				<dirset dir="${destination.repository.metadata.dir}">
					<include name="*/*"/>
				</dirset>
			</path>
			<sequential>
				<var name="tmp.plugin.name" unset="true"/>
				<var name="tmp.plugin.version" unset="true"/>
				<propertyregex property="tmp.plugin.name" input="@{directory}" regexp="${destination.repository.metadata.dir}/([^/]*)/(.*)" select="\1"/>
				<propertyregex property="tmp.plugin.version" input="@{directory}" regexp="${destination.repository.metadata.dir}/([^/]*)/(.*)" select="\2"/>
				
				<echo message="... add p2 metadata repository ${tmp.plugin.name} (${tmp.plugin.version})."/>
				<p2.composite.repository>
					<repository location="file:${destination.repository.dir}" name="${destination.repository.name}"/>
					<add>
						<repository location="${destination.repository.metadata.url}/${tmp.plugin.name}/${tmp.plugin.version}" kind="M"/>
					</add>
				</p2.composite.repository>
			</sequential>
		</for>
	</target>
	
	<target name="build.composite.repository.internal">
		<antcall target="build.composite.repository" />
	</target>
	
	<target name="build.composite.repository.external">
		<antcall target="execute.eclipse">
			<param name="ant.task" value="build.composite.repository" />
		</antcall>
	</target>
	
	
	
	<target name="rebuild.artefact.repository">
		<echo message="Rebuild p2 artefact repository:"/>
		<for param="directory">
			<path>
				<dirset dir="${destination.repository.metadata.dir}">
					<include name="*/*"/>
				</dirset>
			</path>
			<sequential>
				<!-- extract plugin name and plugin version from directory path -->
				<var name="tmp.plugin.name" unset="true"/>
				<var name="tmp.plugin.version" unset="true"/>
				<propertyregex property="tmp.plugin.name" input="@{directory}" regexp="${destination.repository.metadata.dir}/([^/]*)/(.*)" select="\1"/>
				<propertyregex property="tmp.plugin.version" input="@{directory}" regexp="${destination.repository.metadata.dir}/([^/]*)/(.*)" select="\2"/>
				
				<echo message="... add ${plugin.name} (@{plugin.version})."/>
				<p2.mirror validate="true">
					<repository location="file:${temp.dir}" name="${destination.repository.name}" kind="A"/>
					<source>
						<repository location="file:${destination.repository.artefact.dir}" kind="A"/>
						<repository location="file:${destination.repository.metadata.dir}/${tmp.plugin.name}/${tmp.plugin.version}" kind="M"/>
					</source>
					<iu id="${tmp.plugin.name}" version="${tmp.plugin.version}"/>
				</p2.mirror> 
			</sequential>
		</for>
		
		<delete dir="${destination.repository.artefact.dir}"/>
		<move file="${temp.dir}" tofile="${destination.repository.artefact.dir}"/>
	</target>
	
	
	<target name="rebuild.artefact.repository.internal">
		<antcall target="rebuild.artefact.repository" />
	</target>
	
	<target name="rebuild.artefact.repository.external">
		<antcall target="execute.eclipse">
			<param name="ant.task" value="rebuild.artefact.repository" />
		</antcall>
	</target>
	
	
	
	
	<target name="execute.eclipse">
		<exec executable="${eclipse.home}/eclipse" failonerror="true">
			<arg value="-noSplash"/>
			<arg value="-data"/>
			<arg value="${destination.repository.dir}"/>
			<arg value="-application"/>
			<arg value="org.eclipse.ant.core.antRunner"/>
			<arg value="-buildfile"/>
			<arg value="${ant.file}"/>
			<arg value="${ant.task}"/>
		</exec>
	</target>
	
	
	
	<target name="set.permission.external">
		<chmod perm="u=rwX,g=rwX,o=" dir="${destination.repository.dir}" includes="**/*" type="both"/>
		<chgrp group="wwwcln" type="both">
			<fileset dir="${destination.repository.dir}" includes="**/*"/>
		</chgrp>
	</target>

</project>
