«REM»
	Operation template for C#
	
	@autor	Gerrit Beine
	@date	2008/01/18
«ENDREM»

«REM» import code gen meta model «ENDREM»
«IMPORT genesezMM»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION de::genesez::common::AccessHelper»
«EXTENSION de::genesez::platforms::dotnet::csharp::scripts::Conversion»
«EXTENSION de::genesez::platforms::dotnet::csharp::scripts::Naming»

«EXTENSION de::genesez::typemapping::TypeMapping»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	generate operation declarations for an interface
«ENDREM»
«DEFINE OperationDecl FOR MInterface-»
«EXPAND OperationDecl FOREACH operation.select(e|e.name != name)-»

«ENDDEFINE»


«REM»
	generate an declaration for an operation
«ENDREM»
«DEFINE OperationDecl FOR MOperation-»
«EXPAND _Comment»
		public «typeMap(returnType.name)» «asOperationName(name)»( «EXPAND _Parameter-» );
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»


«REM»
	generate operation comment
«ENDREM»
«DEFINE _Comment FOR MOperation-»
«IF hasComment()-»
/// «getCommentText(ownedComment)-»
«ENDIF-»
«ENDDEFINE»


«REM»
	generate parameter list for operation
«ENDREM»
«DEFINE _Parameter FOR MOperation-»
«FOREACH parameter AS p SEPARATOR ", "-»
«EXPAND _Parameter FOR p-»
«ENDFOREACH-»
«ENDDEFINE»


«REM»
	generate parameter declaration
«ENDREM»
«DEFINE _Parameter FOR MParameter-»
«IF multiplicity == 1-»
«typeMap(type.name())» «asParameterName(name)-»
«ELSE-»
«typeMap(type.name())»[] «asParameterName(name)-»
«ENDIF-»
«ENDDEFINE»

