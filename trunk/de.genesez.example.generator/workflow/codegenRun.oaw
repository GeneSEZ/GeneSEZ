<?xml version="1.0" encoding="utf-8"?>

<workflow>
	
	<!-- example project where the generated artifacts are stored -->
	<property name="de.genesez.example.project.dir" value="../de.genesez.example" />
	
	
	<!-- Reading the example file. -->
	<cartridge
		file="de::genesez::workflows::makeGenesezModelProfile.oaw" 
		uml2ProfileFile="${de.genesez.example.project.dir}/model-exp/profile.profile.uml"
		inputModelFile="${de.genesez.example.project.dir}/model-exp/example.uml"
		genesezModel="genesezModel"
		excludePackages="UML Standard Profile"
		mapClassesInModelToExternal="false"
		externalPackages = ""
		externalStereotypes = "external"
	/>
	
	<!-- Check constraints. /-->
	<cartridge
		file="de::genesez::workflows::constraintChecker.oaw"
		modelSlot="genesezModel"
		checkScript="de::genesez::platforms::java::constraints::Syntax"
		abortOnError="true"
	/>
	<cartridge
		file="de::genesez::workflows::constraintChecker.oaw"
		modelSlot="genesezModel"
		checkScript="de::genesez::platforms::java::constraints::Naming"
		abortOnError="true"
	/>
	
	<!-- Write the transformed model file.  /-->
	<cartridge
		file="de::genesez::workflows::xmiWriter.oaw"
		modelSlot="genesezModel"
		outputModelFile="${de.genesez.example.project.dir}/model-gen/example.xmi"
	/>
	
	<!-- Create java code without AOP in xpand templates.  /-->
	<cartridge
		file="de::genesez::workflows::java::performM2T.oaw"
		rootTemplate="de::genesez::platforms::java::java5::templates::Root::Root FOR genesezModel"
		excludePackages="java, java.util"
		configFile=""
		outputDir="${de.genesez.example.project.dir}/src-gen"
		proRegDir="${de.genesez.example.project.dir}/src-gen"
		typeMappingFile="../de.genesez.platforms.java/java/de/genesez/platforms/java/typemapping/typeMapping4Java.xml"
	/>
	

</workflow>
