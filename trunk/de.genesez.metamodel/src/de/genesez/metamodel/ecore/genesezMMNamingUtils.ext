import genesezMM;

String concat( String s1, String s2 ): s1 == null ? s2 : s1+"."+s2;

// ----------- MPackage ------------		
			
			
String namespace(MPackage this): 
	eContainer == null ? null : 
	switch {
		case MModel.isInstance(eContainer): (name == null ? null : concat( ((MModel)eContainer).namespace(), ((MModel)eContainer).name ))
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MPackage.isInstance(eContainer): (name == null ? null : concat( ((MPackage)eContainer).namespace(), ((MPackage)eContainer).name ))
		default: null
	};
String qualifiedName(MPackage this): concat( namespace(), name );
			
// ----------- MClass ------------		
			
			
String namespace(MClass this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MPackage.isInstance(eContainer): (name == null ? null : concat( ((MPackage)eContainer).namespace(), ((MPackage)eContainer).name ))
		default: null
	};
String qualifiedName(MClass this): concat( namespace(), name );
			
// ----------- MAssociationRole ------------		
			
			
String namespace(MAssociationRole this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MClassifier.isInstance(eContainer): (name == null ? null : concat( ((MClassifier)eContainer).namespace(), ((MClassifier)eContainer).name ))
		default: null
	};
String qualifiedName(MAssociationRole this): concat( namespace(), name );
			
// ----------- MAssociation ------------		
			
			
String namespace(MAssociation this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MPackage.isInstance(eContainer): (name == null ? null : concat( ((MPackage)eContainer).namespace(), ((MPackage)eContainer).name ))
		default: null
	};
String qualifiedName(MAssociation this): concat( namespace(), name );
			
// ----------- MAttribute ------------		
			
			
String namespace(MAttribute this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MClassifier.isInstance(eContainer): (name == null ? null : concat( ((MClassifier)eContainer).namespace(), ((MClassifier)eContainer).name ))
		default: null
	};
String qualifiedName(MAttribute this): concat( namespace(), name );
			
// ----------- MModel ------------		
			
String namespace(MModel this): name == null ? null : ( (((MEnumeration)eContainer) != null) ? concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ) : null );
String qualifiedName(MModel this): concat( namespace(), name );
			
			
// ----------- MElement ------------		
			
String namespace(MElement this): name == null ? null : ( (((MEnumeration)eContainer) != null) ? concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ) : null );
String qualifiedName(MElement this): concat( namespace(), name );
			
			
// ----------- MProperty ------------		
			
			
String namespace(MProperty this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MClassifier.isInstance(eContainer): (name == null ? null : concat( ((MClassifier)eContainer).namespace(), ((MClassifier)eContainer).name ))
		default: null
	};
String qualifiedName(MProperty this): concat( namespace(), name );
			
// ----------- MInterface ------------		
			
			
String namespace(MInterface this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MPackage.isInstance(eContainer): (name == null ? null : concat( ((MPackage)eContainer).namespace(), ((MPackage)eContainer).name ))
		default: null
	};
String qualifiedName(MInterface this): concat( namespace(), name );
			
// ----------- MClassifier ------------		
			
			
String namespace(MClassifier this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MPackage.isInstance(eContainer): (name == null ? null : concat( ((MPackage)eContainer).namespace(), ((MPackage)eContainer).name ))
		default: null
	};
String qualifiedName(MClassifier this): concat( namespace(), name );
			
// ----------- MOperation ------------		
			
			
String namespace(MOperation this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MClassifier.isInstance(eContainer): (name == null ? null : concat( ((MClassifier)eContainer).namespace(), ((MClassifier)eContainer).name ))
		default: null
	};
String qualifiedName(MOperation this): concat( namespace(), name );
			
// ----------- MParameter ------------		
			
			
String namespace(MParameter this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MOperation.isInstance(eContainer): (name == null ? null : concat( ((MOperation)eContainer).namespace(), ((MOperation)eContainer).name ))
		default: null
	};
String qualifiedName(MParameter this): concat( namespace(), name );
			
// ----------- MDataType ------------		
			
			
String namespace(MDataType this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MPackage.isInstance(eContainer): (name == null ? null : concat( ((MPackage)eContainer).namespace(), ((MPackage)eContainer).name ))
		default: null
	};
String qualifiedName(MDataType this): concat( namespace(), name );
			
// ----------- MPrimitiveType ------------		
			
			
String namespace(MPrimitiveType this): 
	eContainer == null ? null : 
	switch {
		case MModel.isInstance(eContainer): (name == null ? null : concat( ((MModel)eContainer).namespace(), ((MModel)eContainer).name ))
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MPackage.isInstance(eContainer): (name == null ? null : concat( ((MPackage)eContainer).namespace(), ((MPackage)eContainer).name ))
		default: null
	};
String qualifiedName(MPrimitiveType this): concat( namespace(), name );
			
// ----------- MEnumeration ------------		
			
			
String namespace(MEnumeration this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MPackage.isInstance(eContainer): (name == null ? null : concat( ((MPackage)eContainer).namespace(), ((MPackage)eContainer).name ))
		default: null
	};
String qualifiedName(MEnumeration this): concat( namespace(), name );
			
// ----------- MStereotype ------------		
			
			
String namespace(MStereotype this): 
	eContainer == null ? null : 
	switch {
		case MModel.isInstance(eContainer): (name == null ? null : concat( ((MModel)eContainer).namespace(), ((MModel)eContainer).name ))
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		default: null
	};
String qualifiedName(MStereotype this): concat( namespace(), name );
			
// ----------- MTaggedValue ------------		
			
			
String namespace(MTaggedValue this): 
	eContainer == null ? null : 
	switch {
		case MEnumeration.isInstance(eContainer): (name == null ? null : concat( ((MEnumeration)eContainer).namespace(), ((MEnumeration)eContainer).name ))
		case MStereotype.isInstance(eContainer): (name == null ? null : concat( ((MStereotype)eContainer).namespace(), ((MStereotype)eContainer).name ))
		default: null
	};
String qualifiedName(MTaggedValue this): concat( namespace(), name );
			
// ----------- MComment ------------		
			
			
String namespace(MComment this): 
	eContainer == null ? null : 
	switch {
		case MElement.isInstance(eContainer): (name == null ? null : concat( ((MElement)eContainer).namespace(), ((MElement)eContainer).name ))
		case MComment.isInstance(eContainer): (name == null ? null : concat( ((MComment)eContainer).namespace(), ((MComment)eContainer).name ))
		default: null
	};
String qualifiedName(MComment this): concat( namespace(), name );
			
		
	