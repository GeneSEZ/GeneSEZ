/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */

import gcore;


/**
 * Access element scripts for TYPO3 CMS to simplify access to model elements.
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
 */

// use TYPO3 CMS profile scripts
extension org::genesez::platform::typo3::cms::profile::Typo3CmsProfile;
extension org::genesez::platform::typo3::cms::profile::Typo3CmsAccessElement;

	
// -- TYPO3 CMS FlexForm ------------------------------------------------------------------------------------

/**
 * Returns the a list of FlexForm sheets for a plugin without the 'General' also known as 'sDEF' sheet.
 * 
 * @return	The list of FlexForm sheets or an empty list.
 */
List[String] allFlexFormSheetsWithoutGeneralSheet(MInterface this) :
	property.typeSelect(MAttribute)
		.reject( e | e.emGetTypo3FlexFormElementFlexFormSheet() == prTypo3FlexFormSheetGeneral() || !e.emHasTypo3FlexFormElementUtilizableFlexFormSheet() )
		.collect( e | e.emGetTypo3FlexFormElementFlexFormSheet() ).toSet().sortBy( e | e);


/**
 * Returns the a list of elements for a FlexForm sheet for a plugin.
 * 
 * @param	sheetName	The name of the FlexForm sheet.
 * @return	The list of elements for a FlexForm sheet or an empty list.
 */
List[MAttribute] allFlexFormSheetElements(MInterface this, String sheetName) :
	sheetName == "sDEF"
		? property.typeSelect(MAttribute).select( e | e.emGetTypo3FlexFormElementFlexFormSheet() == prTypo3FlexFormSheetGeneral() || !e.emHasTypo3FlexFormElementUtilizableFlexFormSheet() )
		: property.typeSelect(MAttribute).select( e | e.emGetTypo3FlexFormElementFlexFormSheet() == sheetName );

		
/**
 * 
 */
List[Integer] allSwichableControllerActionIndexes(MInterface this) :
	let indexes = {} :
		emHasTypo3FlexFormUtilizableSwitchableControllerAction1() ? indexes.add(1) : this ->
		emHasTypo3FlexFormUtilizableSwitchableControllerAction2() ? indexes.add(2) : this ->
		emHasTypo3FlexFormUtilizableSwitchableControllerAction3() ? indexes.add(3) : this ->
		emHasTypo3FlexFormUtilizableSwitchableControllerAction4() ? indexes.add(4) : this ->
		emHasTypo3FlexFormUtilizableSwitchableControllerAction5() ? indexes.add(5) : this ->
		emHasTypo3FlexFormUtilizableSwitchableControllerAction6() ? indexes.add(6) : this ->
		emHasTypo3FlexFormUtilizableSwitchableControllerAction7() ? indexes.add(7) : this ->
		emHasTypo3FlexFormUtilizableSwitchableControllerAction8() ? indexes.add(8) : this ->
		emHasTypo3FlexFormUtilizableSwitchableControllerAction9() ? indexes.add(9) : this ->
		indexes;