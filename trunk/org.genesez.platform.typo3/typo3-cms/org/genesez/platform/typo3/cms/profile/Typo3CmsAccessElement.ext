/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */

import gcore;


/**
 * Simplifies access to "GeneSEZ TYPO3 CMS Profile" profile and makes working with them more easier.
 * 
 * HINT: All scripts for extension mechanism are available under the prefix 'em'.
 * 
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer) 
 */

// use profile scripts
extension org::genesez::platform::typo3::cms::profile::Typo3CmsProfile;

// use GeneSEZ common extension mechanism scripts
extension org::genesez::metamodel::core::util::AccessElement;


// -- Xtend scripts for Stereotype "Typo3ExtensionConfiguration" --

/**
 * Checks if an element is annotated with the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationStereotype(MElement this) :
	emHasStereotypeAssignment( prTypo3ExtensionConfiguration() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), tag, valueReference );


// -- "author" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "author" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableAuthor(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthor() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "author" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationAuthor(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthor(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "author" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningAuthor(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthor() );


/**
 * Returns the value of the single-valued tagged value "author"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationAuthor(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthor() );


// -- "authorCompany" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "authorCompany" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableAuthorCompany(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthorCompany() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "authorCompany" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationAuthorCompany(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthorCompany(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "authorCompany" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningAuthorCompany(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthorCompany() );


/**
 * Returns the value of the single-valued tagged value "authorCompany"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationAuthorCompany(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthorCompany() );


// -- "authorEMail" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "authorEMail" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableAuthorEMail(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthorEMail() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "authorEMail" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationAuthorEMail(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthorEMail(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "authorEMail" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningAuthorEMail(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthorEMail() );


/**
 * Returns the value of the single-valued tagged value "authorEMail"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationAuthorEMail(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationAuthorEMail() );


// -- "category" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "category" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableCategory(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationCategory() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "category" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationCategory(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationCategory(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "category" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningCategory(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationCategory() );


/**
 * Returns the value of the single-valued tagged value "category"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationCategory(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationCategory() );


// -- "clearCacheOnLoad" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "clearCacheOnLoad" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableClearCacheOnLoad(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationClearCacheOnLoad() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "clearCacheOnLoad" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationClearCacheOnLoad(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationClearCacheOnLoad(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "clearCacheOnLoad" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningClearCacheOnLoad(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationClearCacheOnLoad() );


/**
 * Returns the value of the single-valued tagged value "clearCacheOnLoad"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationClearCacheOnLoad(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationClearCacheOnLoad() );


// -- "conflicts" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "conflicts" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableConflicts(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationConflicts() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "conflicts" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationConflicts(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationConflicts(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "conflicts" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningConflicts(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationConflicts() );


/**
 * Returns the list of values of the multi-valued tagged value "conflicts"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of values of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 */
List[String] emGetTypo3ExtensionConfigurationConflicts(MElement this) : 
	emAllTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationConflicts() );


// -- "createDirs" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "createDirs" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableCreateDirs(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationCreateDirs() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "createDirs" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationCreateDirs(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationCreateDirs(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "createDirs" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningCreateDirs(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationCreateDirs() );


/**
 * Returns the list of values of the multi-valued tagged value "createDirs"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of values of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 */
List[String] emGetTypo3ExtensionConfigurationCreateDirs(MElement this) : 
	emAllTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationCreateDirs() );


// -- "dependencies" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "dependencies" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableDependencies(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationDependencies() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "dependencies" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationDependencies(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationDependencies(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "dependencies" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningDependencies(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationDependencies() );


/**
 * Returns the list of values of the multi-valued tagged value "dependencies"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of values of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 */
List[String] emGetTypo3ExtensionConfigurationDependencies(MElement this) : 
	emAllTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationDependencies() );


// -- "description" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "description" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableDescription(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationDescription() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "description" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationDescription(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationDescription(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "description" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningDescription(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationDescription() );


/**
 * Returns the value of the single-valued tagged value "description"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationDescription(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationDescription() );


// -- "state" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "state" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableState(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationState() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "state" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationState(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationState(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "state" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningState(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationState() );


/**
 * Returns the value of the single-valued tagged value "state"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationState(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationState() );


// -- "suggests" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "suggests" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableSuggests(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationSuggests() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "suggests" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationSuggests(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationSuggests(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "suggests" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningSuggests(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationSuggests() );


/**
 * Returns the list of values of the multi-valued tagged value "suggests"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of values of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 */
List[String] emGetTypo3ExtensionConfigurationSuggests(MElement this) : 
	emAllTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationSuggests() );


// -- "title" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "title" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableTitle(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationTitle() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "title" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationTitle(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationTitle(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "title" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningTitle(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationTitle() );


/**
 * Returns the value of the single-valued tagged value "title"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationTitle(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationTitle() );


// -- "uploadFolder" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "uploadFolder" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableUploadFolder(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationUploadFolder() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "uploadFolder" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUploadFolder(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationUploadFolder(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "uploadFolder" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningUploadFolder(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationUploadFolder() );


/**
 * Returns the value of the single-valued tagged value "uploadFolder"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationUploadFolder(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationUploadFolder() );


// -- "version" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "version" of the stereotype "Typo3ExtensionConfiguration" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationUtilizableVersion(MElement this) :
	emHasUtilizableTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationVersion() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "version" of the stereotype "Typo3ExtensionConfiguration".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3ExtensionConfigurationVersion(MElement this, String value) :
	emHasTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationVersion(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "version" of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3ExtensionConfigurationOwningVersion(MElement this) : 
	emOwningTaggedValues( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationVersion() );


/**
 * Returns the value of the single-valued tagged value "version"
 * of the stereotype "Typo3ExtensionConfiguration".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3ExtensionConfigurationVersion(MElement this) :
	emGetTaggedValue( prTypo3ExtensionConfiguration(), prTypo3ExtensionConfigurationVersion() );


// -- Xtend scripts for Stereotype "Typo3FlexForm" --

/**
 * Checks if an element is annotated with the stereotype "Typo3FlexForm".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasTypo3FlexFormStereotype(MElement this) :
	emHasStereotypeAssignment( prTypo3FlexForm() );


// -- Xtend scripts for Stereotype "Typo3FlexFormElement" --

/**
 * Checks if an element is annotated with the stereotype "Typo3FlexFormElement".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasTypo3FlexFormElementStereotype(MElement this) :
	emHasStereotypeAssignment( prTypo3FlexFormElement() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "Typo3FlexFormElement".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3FlexFormElementTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prTypo3FlexFormElement(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "Typo3FlexFormElement".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3FlexFormElementTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prTypo3FlexFormElement(), tag, valueReference );


// -- "elementDefaultExtras" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "elementDefaultExtras" of the stereotype "Typo3FlexFormElement" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3FlexFormElementUtilizableElementDefaultExtras(MElement this) :
	emHasUtilizableTaggedValue( prTypo3FlexFormElement(), prTypo3FlexFormElementElementDefaultExtras() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "elementDefaultExtras" of the stereotype "Typo3FlexFormElement".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3FlexFormElementElementDefaultExtras(MElement this, String value) :
	emHasTaggedValue( prTypo3FlexFormElement(), prTypo3FlexFormElementElementDefaultExtras(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "elementDefaultExtras" of the stereotype "Typo3FlexFormElement".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3FlexFormElementOwningElementDefaultExtras(MElement this) : 
	emOwningTaggedValues( prTypo3FlexFormElement(), prTypo3FlexFormElementElementDefaultExtras() );


/**
 * Returns the value of the single-valued tagged value "elementDefaultExtras"
 * of the stereotype "Typo3FlexFormElement".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3FlexFormElementElementDefaultExtras(MElement this) :
	emGetTaggedValue( prTypo3FlexFormElement(), prTypo3FlexFormElementElementDefaultExtras() );


// -- "elementExclude" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "elementExclude" of the stereotype "Typo3FlexFormElement" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3FlexFormElementUtilizableElementExclude(MElement this) :
	emHasUtilizableTaggedValue( prTypo3FlexFormElement(), prTypo3FlexFormElementElementExclude() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "elementExclude" of the stereotype "Typo3FlexFormElement".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3FlexFormElementElementExclude(MElement this, String value) :
	emHasTaggedValue( prTypo3FlexFormElement(), prTypo3FlexFormElementElementExclude(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "elementExclude" of the stereotype "Typo3FlexFormElement".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3FlexFormElementOwningElementExclude(MElement this) : 
	emOwningTaggedValues( prTypo3FlexFormElement(), prTypo3FlexFormElementElementExclude() );


/**
 * Returns the value of the single-valued tagged value "elementExclude"
 * of the stereotype "Typo3FlexFormElement".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3FlexFormElementElementExclude(MElement this) :
	emGetTaggedValue( prTypo3FlexFormElement(), prTypo3FlexFormElementElementExclude() );


// -- "flexFormSheet" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "flexFormSheet" of the stereotype "Typo3FlexFormElement" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3FlexFormElementUtilizableFlexFormSheet(MElement this) :
	emHasUtilizableTaggedValue( prTypo3FlexFormElement(), prTypo3FlexFormElementFlexFormSheet() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "flexFormSheet" of the stereotype "Typo3FlexFormElement".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3FlexFormElementFlexFormSheet(MElement this, String value) :
	emHasTaggedValue( prTypo3FlexFormElement(), prTypo3FlexFormElementFlexFormSheet(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "flexFormSheet" of the stereotype "Typo3FlexFormElement".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3FlexFormElementOwningFlexFormSheet(MElement this) : 
	emOwningTaggedValues( prTypo3FlexFormElement(), prTypo3FlexFormElementFlexFormSheet() );


/**
 * Returns the value of the single-valued tagged value "flexFormSheet"
 * of the stereotype "Typo3FlexFormElement".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3FlexFormElementFlexFormSheet(MElement this) :
	emGetTaggedValue( prTypo3FlexFormElement(), prTypo3FlexFormElementFlexFormSheet() );


// -- Xtend scripts for Stereotype "Typo3Localization" --

/**
 * Checks if an element is annotated with the stereotype "Typo3Localization".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasTypo3LocalizationStereotype(MElement this) :
	emHasStereotypeAssignment( prTypo3Localization() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "Typo3Localization".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3LocalizationTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prTypo3Localization(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "Typo3Localization".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3LocalizationTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prTypo3Localization(), tag, valueReference );


// -- "languageKeys" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "languageKeys" of the stereotype "Typo3Localization" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3LocalizationUtilizableLanguageKeys(MElement this) :
	emHasUtilizableTaggedValue( prTypo3Localization(), prTypo3LocalizationLanguageKeys() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "languageKeys" of the stereotype "Typo3Localization".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3LocalizationLanguageKeys(MElement this, String value) :
	emHasTaggedValue( prTypo3Localization(), prTypo3LocalizationLanguageKeys(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "languageKeys" of the stereotype "Typo3Localization".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3LocalizationOwningLanguageKeys(MElement this) : 
	emOwningTaggedValues( prTypo3Localization(), prTypo3LocalizationLanguageKeys() );


/**
 * Returns the list of values of the multi-valued tagged value "languageKeys"
 * of the stereotype "Typo3Localization".
 * 
 * @return	The list of values of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 */
List[String] emGetTypo3LocalizationLanguageKeys(MElement this) : 
	emAllTaggedValues( prTypo3Localization(), prTypo3LocalizationLanguageKeys() );


// -- Xtend scripts for Stereotype "Typo3Tca" --

/**
 * Checks if an element is annotated with the stereotype "Typo3Tca".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasTypo3TcaStereotype(MElement this) :
	emHasStereotypeAssignment( prTypo3Tca() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "Typo3Tca".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prTypo3Tca(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "Typo3Tca".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prTypo3Tca(), tag, valueReference );


// -- "ctrlAdminOnly" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "ctrlAdminOnly" of the stereotype "Typo3Tca" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaUtilizableCtrlAdminOnly(MElement this) :
	emHasUtilizableTaggedValue( prTypo3Tca(), prTypo3TcaCtrlAdminOnly() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "ctrlAdminOnly" of the stereotype "Typo3Tca".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaCtrlAdminOnly(MElement this, String value) :
	emHasTaggedValue( prTypo3Tca(), prTypo3TcaCtrlAdminOnly(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "ctrlAdminOnly" of the stereotype "Typo3Tca".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaOwningCtrlAdminOnly(MElement this) : 
	emOwningTaggedValues( prTypo3Tca(), prTypo3TcaCtrlAdminOnly() );


/**
 * Returns the value of the single-valued tagged value "ctrlAdminOnly"
 * of the stereotype "Typo3Tca".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaCtrlAdminOnly(MElement this) :
	emGetTaggedValue( prTypo3Tca(), prTypo3TcaCtrlAdminOnly() );


// -- "ctrlHideTable" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "ctrlHideTable" of the stereotype "Typo3Tca" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaUtilizableCtrlHideTable(MElement this) :
	emHasUtilizableTaggedValue( prTypo3Tca(), prTypo3TcaCtrlHideTable() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "ctrlHideTable" of the stereotype "Typo3Tca".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaCtrlHideTable(MElement this, String value) :
	emHasTaggedValue( prTypo3Tca(), prTypo3TcaCtrlHideTable(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "ctrlHideTable" of the stereotype "Typo3Tca".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaOwningCtrlHideTable(MElement this) : 
	emOwningTaggedValues( prTypo3Tca(), prTypo3TcaCtrlHideTable() );


/**
 * Returns the value of the single-valued tagged value "ctrlHideTable"
 * of the stereotype "Typo3Tca".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaCtrlHideTable(MElement this) :
	emGetTaggedValue( prTypo3Tca(), prTypo3TcaCtrlHideTable() );


// -- "ctrlIsStatic" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "ctrlIsStatic" of the stereotype "Typo3Tca" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaUtilizableCtrlIsStatic(MElement this) :
	emHasUtilizableTaggedValue( prTypo3Tca(), prTypo3TcaCtrlIsStatic() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "ctrlIsStatic" of the stereotype "Typo3Tca".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaCtrlIsStatic(MElement this, String value) :
	emHasTaggedValue( prTypo3Tca(), prTypo3TcaCtrlIsStatic(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "ctrlIsStatic" of the stereotype "Typo3Tca".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaOwningCtrlIsStatic(MElement this) : 
	emOwningTaggedValues( prTypo3Tca(), prTypo3TcaCtrlIsStatic() );


/**
 * Returns the value of the single-valued tagged value "ctrlIsStatic"
 * of the stereotype "Typo3Tca".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaCtrlIsStatic(MElement this) :
	emGetTaggedValue( prTypo3Tca(), prTypo3TcaCtrlIsStatic() );


// -- "ctrlLabel" --
	
/**
 * Checks if an element has a utilizable value reference
 * of the tagged value "ctrlLabel" of the stereotype "Typo3Tca" 
 * which is not null.
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaUtilizableCtrlLabel(MElement this) :
	emHasUtilizableTaggedValueReference( prTypo3Tca(), prTypo3TcaCtrlLabel() );


/**
 * Checks if an element is annotated with the specified value reference
 * of the tagged value "ctrlLabel" of the stereotype "Typo3Tca".
 *
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaCtrlLabel(MElement this, MElement valueReference) :
	emHasTaggedValue( prTypo3Tca(), prTypo3TcaCtrlLabel(), valueReference );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "ctrlLabel" of the stereotype "Typo3Tca".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaOwningCtrlLabel(MElement this) : 
	emOwningTaggedValues( prTypo3Tca(), prTypo3TcaCtrlLabel() );


/**
 * Returns the value reference of the single-valued tagged value "ctrlLabel"
 * of the stereotype "Typo3Tca".
 * 
 * @return	The value reference of the single-valued tagged value, otherwise null, if the tagged value is not assigned.
 */
MProperty emGetTypo3TcaCtrlLabel(MElement this) :
	emGetTaggedValueReference( prTypo3Tca(), prTypo3TcaCtrlLabel() );


// -- "ctrlLabelAlt" --
	
/**
 * Checks if an element has a utilizable value reference
 * of the tagged value "ctrlLabelAlt" of the stereotype "Typo3Tca" 
 * which is not null.
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaUtilizableCtrlLabelAlt(MElement this) :
	emHasUtilizableTaggedValueReference( prTypo3Tca(), prTypo3TcaCtrlLabelAlt() );


/**
 * Checks if an element is annotated with the specified value reference
 * of the tagged value "ctrlLabelAlt" of the stereotype "Typo3Tca".
 *
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaCtrlLabelAlt(MElement this, MElement valueReference) :
	emHasTaggedValue( prTypo3Tca(), prTypo3TcaCtrlLabelAlt(), valueReference );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "ctrlLabelAlt" of the stereotype "Typo3Tca".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaOwningCtrlLabelAlt(MElement this) : 
	emOwningTaggedValues( prTypo3Tca(), prTypo3TcaCtrlLabelAlt() );


/**
 * Returns the list of value references of the multi-valued tagged value "ctrlLabelAlt"
 * of the stereotype "Typo3Tca".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MProperty] emGetTypo3TcaCtrlLabelAlt(MElement this) : 
	emAllTaggedValueReferences( prTypo3Tca(), prTypo3TcaCtrlLabelAlt() );


// -- "ctrlLabelAltForce" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "ctrlLabelAltForce" of the stereotype "Typo3Tca" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaUtilizableCtrlLabelAltForce(MElement this) :
	emHasUtilizableTaggedValue( prTypo3Tca(), prTypo3TcaCtrlLabelAltForce() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "ctrlLabelAltForce" of the stereotype "Typo3Tca".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaCtrlLabelAltForce(MElement this, String value) :
	emHasTaggedValue( prTypo3Tca(), prTypo3TcaCtrlLabelAltForce(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "ctrlLabelAltForce" of the stereotype "Typo3Tca".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaOwningCtrlLabelAltForce(MElement this) : 
	emOwningTaggedValues( prTypo3Tca(), prTypo3TcaCtrlLabelAltForce() );


/**
 * Returns the value of the single-valued tagged value "ctrlLabelAltForce"
 * of the stereotype "Typo3Tca".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaCtrlLabelAltForce(MElement this) :
	emGetTaggedValue( prTypo3Tca(), prTypo3TcaCtrlLabelAltForce() );


// -- "ctrlReadOnly" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "ctrlReadOnly" of the stereotype "Typo3Tca" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaUtilizableCtrlReadOnly(MElement this) :
	emHasUtilizableTaggedValue( prTypo3Tca(), prTypo3TcaCtrlReadOnly() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "ctrlReadOnly" of the stereotype "Typo3Tca".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaCtrlReadOnly(MElement this, String value) :
	emHasTaggedValue( prTypo3Tca(), prTypo3TcaCtrlReadOnly(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "ctrlReadOnly" of the stereotype "Typo3Tca".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaOwningCtrlReadOnly(MElement this) : 
	emOwningTaggedValues( prTypo3Tca(), prTypo3TcaCtrlReadOnly() );


/**
 * Returns the value of the single-valued tagged value "ctrlReadOnly"
 * of the stereotype "Typo3Tca".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaCtrlReadOnly(MElement this) :
	emGetTaggedValue( prTypo3Tca(), prTypo3TcaCtrlReadOnly() );


// -- "ctrlRootLevel" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "ctrlRootLevel" of the stereotype "Typo3Tca" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaUtilizableCtrlRootLevel(MElement this) :
	emHasUtilizableTaggedValue( prTypo3Tca(), prTypo3TcaCtrlRootLevel() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "ctrlRootLevel" of the stereotype "Typo3Tca".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaCtrlRootLevel(MElement this, String value) :
	emHasTaggedValue( prTypo3Tca(), prTypo3TcaCtrlRootLevel(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "ctrlRootLevel" of the stereotype "Typo3Tca".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaOwningCtrlRootLevel(MElement this) : 
	emOwningTaggedValues( prTypo3Tca(), prTypo3TcaCtrlRootLevel() );


/**
 * Returns the value of the single-valued tagged value "ctrlRootLevel"
 * of the stereotype "Typo3Tca".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaCtrlRootLevel(MElement this) :
	emGetTaggedValue( prTypo3Tca(), prTypo3TcaCtrlRootLevel() );


// -- "ctrlSearchFields" --
	
/**
 * Checks if an element has a utilizable value reference
 * of the tagged value "ctrlSearchFields" of the stereotype "Typo3Tca" 
 * which is not null.
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaUtilizableCtrlSearchFields(MElement this) :
	emHasUtilizableTaggedValueReference( prTypo3Tca(), prTypo3TcaCtrlSearchFields() );


/**
 * Checks if an element is annotated with the specified value reference
 * of the tagged value "ctrlSearchFields" of the stereotype "Typo3Tca".
 *
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaCtrlSearchFields(MElement this, MElement valueReference) :
	emHasTaggedValue( prTypo3Tca(), prTypo3TcaCtrlSearchFields(), valueReference );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "ctrlSearchFields" of the stereotype "Typo3Tca".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaOwningCtrlSearchFields(MElement this) : 
	emOwningTaggedValues( prTypo3Tca(), prTypo3TcaCtrlSearchFields() );


/**
 * Returns the list of value references of the multi-valued tagged value "ctrlSearchFields"
 * of the stereotype "Typo3Tca".
 * @return	The list of value references of a multi-valued tagged value, otherwise an empty list, if the tagged value is not assigned.
 * 
 */
List[MProperty] emGetTypo3TcaCtrlSearchFields(MElement this) : 
	emAllTaggedValueReferences( prTypo3Tca(), prTypo3TcaCtrlSearchFields() );


// -- Xtend scripts for Stereotype "Typo3TcaAssociation" --

/**
 * Checks if an element is annotated with the stereotype "Typo3TcaAssociation".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasTypo3TcaAssociationStereotype(MElement this) :
	emHasStereotypeAssignment( prTypo3TcaAssociation() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "Typo3TcaAssociation".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaAssociationTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prTypo3TcaAssociation(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "Typo3TcaAssociation".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaAssociationTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prTypo3TcaAssociation(), tag, valueReference );


// -- "columnsConfigWizardAdd" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "columnsConfigWizardAdd" of the stereotype "Typo3TcaAssociation" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaAssociationUtilizableColumnsConfigWizardAdd(MElement this) :
	emHasUtilizableTaggedValue( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardAdd() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "columnsConfigWizardAdd" of the stereotype "Typo3TcaAssociation".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaAssociationColumnsConfigWizardAdd(MElement this, String value) :
	emHasTaggedValue( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardAdd(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "columnsConfigWizardAdd" of the stereotype "Typo3TcaAssociation".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaAssociationOwningColumnsConfigWizardAdd(MElement this) : 
	emOwningTaggedValues( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardAdd() );


/**
 * Returns the value of the single-valued tagged value "columnsConfigWizardAdd"
 * of the stereotype "Typo3TcaAssociation".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaAssociationColumnsConfigWizardAdd(MElement this) :
	emGetTaggedValue( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardAdd() );


// -- "columnsConfigWizardEdit" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "columnsConfigWizardEdit" of the stereotype "Typo3TcaAssociation" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaAssociationUtilizableColumnsConfigWizardEdit(MElement this) :
	emHasUtilizableTaggedValue( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardEdit() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "columnsConfigWizardEdit" of the stereotype "Typo3TcaAssociation".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaAssociationColumnsConfigWizardEdit(MElement this, String value) :
	emHasTaggedValue( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardEdit(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "columnsConfigWizardEdit" of the stereotype "Typo3TcaAssociation".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaAssociationOwningColumnsConfigWizardEdit(MElement this) : 
	emOwningTaggedValues( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardEdit() );


/**
 * Returns the value of the single-valued tagged value "columnsConfigWizardEdit"
 * of the stereotype "Typo3TcaAssociation".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaAssociationColumnsConfigWizardEdit(MElement this) :
	emGetTaggedValue( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardEdit() );


// -- "columnsConfigWizardSuggest" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "columnsConfigWizardSuggest" of the stereotype "Typo3TcaAssociation" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaAssociationUtilizableColumnsConfigWizardSuggest(MElement this) :
	emHasUtilizableTaggedValue( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardSuggest() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "columnsConfigWizardSuggest" of the stereotype "Typo3TcaAssociation".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaAssociationColumnsConfigWizardSuggest(MElement this, String value) :
	emHasTaggedValue( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardSuggest(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "columnsConfigWizardSuggest" of the stereotype "Typo3TcaAssociation".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaAssociationOwningColumnsConfigWizardSuggest(MElement this) : 
	emOwningTaggedValues( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardSuggest() );


/**
 * Returns the value of the single-valued tagged value "columnsConfigWizardSuggest"
 * of the stereotype "Typo3TcaAssociation".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaAssociationColumnsConfigWizardSuggest(MElement this) :
	emGetTaggedValue( prTypo3TcaAssociation(), prTypo3TcaAssociationColumnsConfigWizardSuggest() );


// -- Xtend scripts for Stereotype "Typo3TcaProperty" --

/**
 * Checks if an element is annotated with the stereotype "Typo3TcaProperty".
 * 
 * @return	True if the element has the stereotype assigned, otherwise false.
 */
boolean emHasTypo3TcaPropertyStereotype(MElement this) :
	emHasStereotypeAssignment( prTypo3TcaProperty() );


/**
 * Checks if an element is annotated with the specified value 
 * of the specified tagged value of the stereotype "Typo3TcaProperty".
 *
 * @param	tag		The name of a tagged value.
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyTaggedValue(MElement this, String tag, String value) :
	emHasTaggedValue( prTypo3TcaProperty(), tag, value );


/**
 * Checks if an element is annotated with the specified value reference 
 * of the specified tagged value of the stereotype "Typo3TcaProperty".
 *
 * @param	tag				The name of a tagged value.
 * @param	valueReference	The value reference of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyTaggedValue(MElement this, String tag, MElement valueReference) :
	emHasTaggedValue( prTypo3TcaProperty(), tag, valueReference );


// -- "columnsDefaultExtras" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "columnsDefaultExtras" of the stereotype "Typo3TcaProperty" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyUtilizableColumnsDefaultExtras(MElement this) :
	emHasUtilizableTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyColumnsDefaultExtras() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "columnsDefaultExtras" of the stereotype "Typo3TcaProperty".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyColumnsDefaultExtras(MElement this, String value) :
	emHasTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyColumnsDefaultExtras(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "columnsDefaultExtras" of the stereotype "Typo3TcaProperty".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaPropertyOwningColumnsDefaultExtras(MElement this) : 
	emOwningTaggedValues( prTypo3TcaProperty(), prTypo3TcaPropertyColumnsDefaultExtras() );


/**
 * Returns the value of the single-valued tagged value "columnsDefaultExtras"
 * of the stereotype "Typo3TcaProperty".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaPropertyColumnsDefaultExtras(MElement this) :
	emGetTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyColumnsDefaultExtras() );


// -- "columnsExclude" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "columnsExclude" of the stereotype "Typo3TcaProperty" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyUtilizableColumnsExclude(MElement this) :
	emHasUtilizableTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyColumnsExclude() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "columnsExclude" of the stereotype "Typo3TcaProperty".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyColumnsExclude(MElement this, String value) :
	emHasTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyColumnsExclude(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "columnsExclude" of the stereotype "Typo3TcaProperty".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaPropertyOwningColumnsExclude(MElement this) : 
	emOwningTaggedValues( prTypo3TcaProperty(), prTypo3TcaPropertyColumnsExclude() );


/**
 * Returns the value of the single-valued tagged value "columnsExclude"
 * of the stereotype "Typo3TcaProperty".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaPropertyColumnsExclude(MElement this) :
	emGetTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyColumnsExclude() );


// -- "typesAltLabel" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "typesAltLabel" of the stereotype "Typo3TcaProperty" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyUtilizableTypesAltLabel(MElement this) :
	emHasUtilizableTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesAltLabel() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "typesAltLabel" of the stereotype "Typo3TcaProperty".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyTypesAltLabel(MElement this, String value) :
	emHasTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesAltLabel(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "typesAltLabel" of the stereotype "Typo3TcaProperty".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaPropertyOwningTypesAltLabel(MElement this) : 
	emOwningTaggedValues( prTypo3TcaProperty(), prTypo3TcaPropertyTypesAltLabel() );


/**
 * Returns the value of the single-valued tagged value "typesAltLabel"
 * of the stereotype "Typo3TcaProperty".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaPropertyTypesAltLabel(MElement this) :
	emGetTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesAltLabel() );


// -- "typesFormStyleCodes" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "typesFormStyleCodes" of the stereotype "Typo3TcaProperty" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyUtilizableTypesFormStyleCodes(MElement this) :
	emHasUtilizableTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesFormStyleCodes() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "typesFormStyleCodes" of the stereotype "Typo3TcaProperty".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyTypesFormStyleCodes(MElement this, String value) :
	emHasTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesFormStyleCodes(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "typesFormStyleCodes" of the stereotype "Typo3TcaProperty".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaPropertyOwningTypesFormStyleCodes(MElement this) : 
	emOwningTaggedValues( prTypo3TcaProperty(), prTypo3TcaPropertyTypesFormStyleCodes() );


/**
 * Returns the value of the single-valued tagged value "typesFormStyleCodes"
 * of the stereotype "Typo3TcaProperty".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaPropertyTypesFormStyleCodes(MElement this) :
	emGetTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesFormStyleCodes() );


// -- "typesPaletteNumber" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "typesPaletteNumber" of the stereotype "Typo3TcaProperty" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyUtilizableTypesPaletteNumber(MElement this) :
	emHasUtilizableTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesPaletteNumber() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "typesPaletteNumber" of the stereotype "Typo3TcaProperty".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyTypesPaletteNumber(MElement this, String value) :
	emHasTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesPaletteNumber(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "typesPaletteNumber" of the stereotype "Typo3TcaProperty".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaPropertyOwningTypesPaletteNumber(MElement this) : 
	emOwningTaggedValues( prTypo3TcaProperty(), prTypo3TcaPropertyTypesPaletteNumber() );


/**
 * Returns the value of the single-valued tagged value "typesPaletteNumber"
 * of the stereotype "Typo3TcaProperty".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaPropertyTypesPaletteNumber(MElement this) :
	emGetTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesPaletteNumber() );


// -- "typesSpecialConfiguration" --
	
/**
 * Checks if an element has a utilizable value
 * of the tagged value "typesSpecialConfiguration" of the stereotype "Typo3TcaProperty" 
 * which is neither empty ('') nor null ('null').
 *
 * @return	True if the element has a utilizable tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyUtilizableTypesSpecialConfiguration(MElement this) :
	emHasUtilizableTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesSpecialConfiguration() );


/**
 * Checks if an element is annotated with the specified value 
 * of the tagged value "typesSpecialConfiguration" of the stereotype "Typo3TcaProperty".
 *
 * @param	value	The value of a tagged value.
 * @return	True if the element has a tagged value, otherwise false.
 */
boolean emHasTypo3TcaPropertyTypesSpecialConfiguration(MElement this, String value) :
	emHasTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesSpecialConfiguration(), value );


/**
 * Returns the list of owning tagged values 
 * of the tagged value "typesSpecialConfiguration" of the stereotype "Typo3TcaProperty".
 * 
 * @return	The list of tagged values, otherwise an empty list.
 */
List[MTaggedValue] emGetTypo3TcaPropertyOwningTypesSpecialConfiguration(MElement this) : 
	emOwningTaggedValues( prTypo3TcaProperty(), prTypo3TcaPropertyTypesSpecialConfiguration() );


/**
 * Returns the value of the single-valued tagged value "typesSpecialConfiguration"
 * of the stereotype "Typo3TcaProperty".
 * 
 * @return	The value of the single-valued tagged value, otherwise an empty string, if the tagged value is not assigned.
 */
String emGetTypo3TcaPropertyTypesSpecialConfiguration(MElement this) :
	emGetTaggedValue( prTypo3TcaProperty(), prTypo3TcaPropertyTypesSpecialConfiguration() );


// PROTECTED REGION ID(accesselement.own.code.4d8385d1-1c85-11e3-8460-2388508c54e2) ENABLED START
// PROTECTED REGION END
