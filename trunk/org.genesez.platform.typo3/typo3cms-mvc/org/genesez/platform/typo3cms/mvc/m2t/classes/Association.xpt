«IMPORT gcore»
«REM»
	Handles the implementation of associations. 
	
	currently implemented:
	- 
	
	@author	Nico Herbig <nico.herbig@fh-zwickau.de>
	@date	2011-03-21
«ENDREM»

«REM» use GeneSEZ profile access helper scripts «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::profile::GeneSEZProfileAccessElement»

«REM» use TYPO3 naming context and common naming scripts «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::mapping::NameMapping»
«EXTENSION org::genesez::metamodel::core::util::mapping::TypeMapping»
«EXTENSION org::genesez::platform::typo3cms::mvc::convention::NamingContext»

«REM» use TYPO3 MVC naming scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3cms::mvc::convention::Naming»

«REM» use TYPO3 MVC access helper scripts which overrides «ENDREM»
«REM» common access helper scripts if script name is equal «ENDREM»
«EXTENSION org::genesez::platform::typo3cms::mvc::util::AccessElement»
«EXTENSION org::genesez::metamodel::core::util::AccessElement»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	Processes the declaration of association role.
«ENDREM»
«DEFINE Declaration FOR MClassifier -»
	«EXPAND Declaration FOREACH owningInitializableAssociationRoles() -»
«ENDDEFINE»


«REM»
	Processes the derived attributes of a class.
	Order: static, non static
«ENDREM»
«DEFINE Derived FOR MClass -»
	«EXPAND Derived FOREACH property.typeSelect(MAssociationRole).select( e | e.derived ) -»
«ENDDEFINE»


«REM»
	Processes the implementation of accessor methods for an association role.
«ENDREM»
«DEFINE Accessors FOR MClass -»
	«FOREACH owningInitializableAssociationRoles() AS assocationRole -»
		«EXPAND GetterImplemementation FOR assocationRole -»
		«EXPAND SetterImplemementation FOR assocationRole -»
		«EXPAND InsertInImplemementation FOR assocationRole -»
		«EXPAND RemoveFromImplemementation FOR assocationRole -»
	«ENDFOREACH -»
«ENDDEFINE»


«REM»
	Processes the declaration of accessor methods for an association role.
«ENDREM»
«DEFINE Accessors FOR MInterface -»
	«FOREACH owningInitializableAssociationRoles() AS assocationRole -»
		«EXPAND GetterDeclaration FOR assocationRole -»
		«EXPAND SetterDeclaration FOR assocationRole -»
		«EXPAND InsertInDeclaration FOR assocationRole -»
		«EXPAND RemoveFromDeclaration FOR assocationRole -»
	«ENDFOREACH -»
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	Generates the declaration of an association attribute.
«ENDREM»
«DEFINE Declaration FOR MAssociationRole -»
	«EXPAND Comment::Association -»
	«EXPAND Modifier -» $«name() -»;
	
«ENDDEFINE»


«REM»
	Generates the accessor method for an derived association attribute.
«ENDREM»
«DEFINE Derived FOR MAssociationRole -»
	«EXPAND Comment::Getter -»
	«EXPAND ModifierAccessor -» function «asGetterName() -»() {
		«EXPAND OwnCodeImplementation("php.derived.association.implementation." + xmiGuid) -»
	}
	
«ENDDEFINE»


«REM»
	Generates the declaration of a getter method for an association attribute.
«ENDREM»
«DEFINE GetterDeclaration FOR MAssociationRole -»
	«EXPAND Comment::Getter -»
	«EXPAND ModifierAccessor -» function «asGetterName() -»();
	
«ENDDEFINE»


«REM»
	Generates the implementation of a getter method for an association attribute.
«ENDREM»
«DEFINE GetterImplemementation FOR MAssociationRole -»
	«EXPAND Comment::Getter -»
	«EXPAND ModifierAccessor -» function «asGetterName() -»() {
		return $this->«name() -»;
	}
	
«ENDDEFINE»


«REM»
	Generates the declaration of a setter method for an association attribute.
«ENDREM»
«DEFINE SetterDeclaration FOR MAssociationRole -»
	«EXPAND Comment::Setter -»
	«EXPAND ModifierAccessor -» function «asSetterName() -»(«EXPAND TypeHintSetter -»$«name() -»);
	
«ENDDEFINE»


«REM»
	Generates the implementation of a setter method for an association attribute.
«ENDREM»
«DEFINE SetterImplemementation FOR MAssociationRole -»
	«EXPAND Comment::Setter -»
	«EXPAND ModifierAccessor -» function «asSetterName() -»(«EXPAND TypeHintSetter -»$«name() -») {
		$this->«name() -» = $«name() -»;
	}
	
«ENDDEFINE»


«REM»
	Generates the declaration of the 'insert in' method for an association attribute.
«ENDREM»
«DEFINE InsertInDeclaration FOR MAssociationRole -»
«IF multiplicity.isMultiValued() -»
	«EXPAND Comment::InsertIn -»
	«EXPAND ModifierAccessor -» function «asInsertInName() -»(«EXPAND TypeHintInsertInRemoveFrom -»$toAdd);
	
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates the 'insert in' method for an association attribute with a collection type.
«ENDREM»
«DEFINE InsertInImplemementation FOR MAssociationRole -»
«IF multiplicity.isMultiValued() -»
	«EXPAND Comment::InsertIn -»
	«EXPAND ModifierAccessor -» function «asInsertInName() -»(«EXPAND TypeHintInsertInRemoveFrom -»$toAdd) {
		$this->«name() -»->attach($toAdd);
	}
	
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates the declaration of the 'remove from' method for an association attribute.
«ENDREM»
«DEFINE RemoveFromDeclaration FOR MAssociationRole -»
«IF multiplicity.isMultiValued() -»
	«EXPAND Comment::RemoveFrom -»
	«EXPAND ModifierAccessor -» function «asRemoveFromName() -»(«EXPAND TypeHintInsertInRemoveFrom -»$toRemove);
	
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates the 'remove from' method for an association attribute with a collection type.
«ENDREM»
«DEFINE RemoveFromImplemementation FOR MAssociationRole -»
«IF multiplicity.isMultiValued() -»
	«EXPAND Comment::RemoveFrom -»
	«EXPAND ModifierAccessor -» function «asRemoveFromName() -»(«EXPAND TypeHintInsertInRemoveFrom -»$toRemove) {
		$this->«name() -»->detach($toRemove);
	}
	
«ENDIF -»
«ENDDEFINE»


«REM»
	Processes the modifiers of an association role.
«ENDREM»
«DEFINE Modifier FOR MAssociationRole -»
	«visibility -»
«ENDDEFINE»


«REM»
	Processes the modifiers of an association role accessor method.
«ENDREM»
«DEFINE ModifierAccessor FOR MAssociationRole -»
	public«"" -»
«ENDDEFINE»


«REM»
	Generates type hints for setter methods.
«ENDREM»
«DEFINE TypeHintSetter FOR MAssociationRole -»
«IF multiplicity.isSingleValued() -»
«IF generatePHPTypeHint(type) -»«type.name(getInternalNamingContext(), typeMappingContextPHPTypeHint()) -» «ENDIF -»
«ELSE -»
«IF classifier.isModelPackageElement() && !prHasPrimitiveStereotype() -»«mapCollection( typeMappingContextModel() ) -» «ELSE -»«mapCollection() -» «ENDIF -»
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates type hints for insert in and remove from methods.
«ENDREM»
«DEFINE TypeHintInsertInRemoveFrom FOR MAssociationRole -»
«IF generatePHPTypeHint(type) -»«type.name(getInternalNamingContext(), typeMappingContextPHPTypeHint()) -» «ENDIF -»
«ENDDEFINE»


«REM»
	Generates the protected region of an operation.
	
	@param	id	protected region id
«ENDREM»
«DEFINE OwnCodeImplementation(String id) FOR MAssociationRole -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: implementation of method «asGetterName() -» for class «classifier.name()»
		throw new Exception('The implementation of the method «asGetterName() -» for class «classifier.name() -» is missing !');
		«ENDPROTECT»
«ENDDEFINE»