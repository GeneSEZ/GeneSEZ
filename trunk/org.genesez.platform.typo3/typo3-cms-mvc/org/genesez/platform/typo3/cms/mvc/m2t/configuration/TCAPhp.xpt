«REM»
	(c) GeneSEZ Research Group
	All rights reserved.
	
	Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
«ENDREM»

«IMPORT gcore»


«REM»
	Entry point for generating "<table name of domain object>.php".
	
	@author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
«ENDREM»

«REM» use TYPO3 CMS profile scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3::cms::profile::Typo3CmsAccessElement»


«REM» use GeneSEZ common GUI profile scripts «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::profile::GenesezGuiAccessElement»


«REM» use TYPO3 CMS specific Extbase + Fluid access element scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3::cms::mvc::util::AccessElement»

«REM» use TYPO3 CMS specific Extbase + Fluid file system convention scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3::cms::mvc::util::FileSystemConvention»

«REM» use TYPO3 CMS specific Extbase + Fluid naming convention scripts «ENDREM»
«EXTENSION org::genesez::platform::typo3::cms::mvc::util::NamingConvention»


«REM» use GeneSEZ common access element scripts «ENDREM»
«EXTENSION org::genesez::metamodel::core::util::AccessElement»


«REM»
	-- Public Templates (THE FOLLOWING TEMPLATES CAN BE INVOKED FROM OUTSIDE OF THIS FILE) ------------------
«ENDREM»

«REM»
	Processes the generation of "<table name of domain object>.php".
«ENDREM»
«DEFINE Root FOR MClass -»
«IF ( isEntity() || isValueObject() ) && isConcreteTableInheritance() && !isTableMapping() -»
«EXPAND TableConfigurationArray -»
«ENDIF -»
«ENDDEFINE»


«REM»
	-- Private Templates (THE FOLLOWING TEMPLATES SHOULD NOT BE INVOKED FROM OUTSIDE OF THIS FILE) ----------
«ENDREM»

«REM»
«ENDREM»
«DEFINE TableConfigurationArray FOR MClass -»
«FILE filePathTcaPhp() -»
<?php

return array(
	«EXPAND CtrlSection -»
	«EXPAND InterfaceSection -»
	«EXPAND ColumnsSection -»
	«EXPAND TypesSection -»
	«EXPAND PalettesSection -»
	«EXPAND OwnCode("tca.php.own.code." + xmiGuid) -»
);

?>
«ENDFILE -»
«ENDDEFINE»


«REM» -- 'Ctrl' Section -- «ENDREM»

«REM»
	@todo	generation of default_sortby???
«ENDREM»
«DEFINE CtrlSection FOR MClass -»
	'ctrl' => array(
		«EXPAND CtrlTitle -»
		«EXPAND CtrlLabel -»
		«EXPAND CtrlLabelAlt -»
		«EXPAND CtrlLabelAltForce -»
		«EXPAND CtrlType -»
		«EXPAND CtrlIconFile -»
		«EXPAND CtrlSortBy -»
		«EXPAND CtrlTstamp -»
		«EXPAND CtrlCrdate -»
		«EXPAND CtrlCruserId -»
		«EXPAND CtrlOrigUid -»
		«EXPAND CtrlDelete -»
		«EXPAND CtrlEnablecolumns -»
		«EXPAND CtrlSearchFields -»
		«EXPAND CtrlLocalization -»
		«EXPAND CtrlVersioning -»
		«EXPAND CtrlDividers2tabs -»
		«EXPAND OwnCtrlSectionCode("tca.php.own.ctrl.section.code." + xmiGuid) -»
	),
«ENDDEFINE»


«REM»
	Contains the system name of the table. Is used for display in the backend.
«ENDREM»
«DEFINE CtrlTitle FOR MClass-»
		'title' => 'LLL:EXT:«extensionKey() -»/«filePathLocallangTcaXlf() -»:«asLocalizationName() -»',
«ENDDEFINE»


«REM»
	Points to the field name of the table which should be used as the "title" when the record is displayed in the system.
«ENDREM»
«DEFINE CtrlLabel FOR MClass -»
		'label'	=> '«IF emHasTypo3TcaUtilizableCtrlLabel() -»«emGetTypo3TcaCtrlLabel().asConfigurationName() -»«ELSEIF property.typeSelect(MAttribute).exists( a | !a.derived && !a.static ) -»«property.typeSelect(MAttribute).selectFirst( a | !a.derived && !a.static ).asConfigurationName() -»«ELSE -»uid«ENDIF -»',
«ENDDEFINE»


«REM»
	Comma-separated list of field names, which are holding alternative values to the value from the field pointed to by "label" (see above) if that value is empty. May not be used consistently in the system, but should apply in most cases.
«ENDREM»
«DEFINE CtrlLabelAlt FOR MClass -»
«IF emHasTypo3TcaUtilizableCtrlLabelAlt() -»
		'label_alt' => '«FOREACH emGetTypo3TcaCtrlLabelAlt() AS labelAlt SEPARATOR ", " -»«labelAlt.asConfigurationName() -»«ENDFOREACH -»',
«ENDIF -»
«ENDDEFINE»


«REM»
	If set, then the "label_alt" fields are always shown in the title separated by comma.
«ENDREM»
«DEFINE CtrlLabelAltForce FOR MClass -»
«IF emHasTypo3TcaUtilizableCtrlLabelAlt() -»
		'label_alt_force' => «emGetTypo3TcaCtrlLabelAltForce().asTypo3Boolean() -»,
«ENDIF -»
«ENDDEFINE»


«REM»
	Field name, which defines the "record type".
«ENDREM»
«DEFINE CtrlType FOR MClass -»
«IF !owningSingleTableInheritanceSpecializations().isEmpty && getPersistenceRecordTypeColumnName().length != 0 -»
		'type' => '«getPersistenceRecordTypeColumnName() -»',
«ENDIF -»
«ENDDEFINE»


«REM»
	Pointing to the icon file to use for the table.
«ENDREM»
«DEFINE CtrlIconFile FOR MClass -»
		'iconfile' => \TYPO3\CMS\Core\Utility\ExtensionManagementUtility::extRelPath('«extensionKey() -»') . '«dirPathResourcesPublicIcons() -»/«asConfigurationName() -».png',
«ENDDEFINE»


«REM»
	Field name, which is used to manage the order of the records.
«ENDREM»
«DEFINE CtrlSortBy FOR MClass -»
«IF createSortingField() -»
		'sortby' => 'sorting',
«ENDIF -»
«ENDDEFINE»


«REM»
	Field name, which is automatically updated to the current timestamp (UNIX-time in seconds) each time the record is updated/saved in the system.
«ENDREM»
«DEFINE CtrlTstamp FOR MClass -»
		'tstamp' => 'tstamp',
«ENDDEFINE»


«REM»
	Field name, which is automatically set to the current timestamp when the record is created. Is never modified again.
«ENDREM»
«DEFINE CtrlCrdate FOR MClass -»
		'crdate' => 'crdate',
«ENDDEFINE»


«REM»
	Field name, which is automatically set to the uid of the backend user (be_users) who originally created the record. Is never modified again.
«ENDREM»
«DEFINE CtrlCruserId FOR MClass -»
		'cruser_id' => 'cruser_id',
«ENDDEFINE»


«REM»
	Fieldname, which will contain the UID of the original record in case a record is created as a copy or new version of another record.
«ENDREM»
«DEFINE CtrlOrigUid FOR MClass -»
		'origUid' => 't3_origuid',
«ENDDEFINE»


«REM»
	Field name, which indicates if a record is considered deleted or not.
«ENDREM»
«DEFINE CtrlDelete FOR MClass -»
		'delete' => 'deleted',
«ENDDEFINE»


«REM»
	Specifies which publishing control features are automatically implemented for the table.
«ENDREM»
«DEFINE CtrlEnablecolumns FOR MClass -»
«IF createHiddenField() || createStarttimeField() || createEndtimeField() || createAccessControlField() -»
		'enablecolumns' => array(
			«EXPAND CtrlEnablecolumnsDisabled -»
			«EXPAND CtrlEnablecolumnsStarttime -»
			«EXPAND CtrlEnablecolumnsEndtime -»
			«EXPAND CtrlEnablecolumnsFeGroup -»
		),
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CtrlEnablecolumnsDisabled FOR MClass -»
«IF createHiddenField() -»
			'disabled' => 'hidden',
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CtrlEnablecolumnsStarttime FOR MClass -»
«IF createStarttimeField() -»
			'starttime' => 'starttime',
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CtrlEnablecolumnsEndtime FOR MClass -»
«IF createEndtimeField() -»
			'endtime' => 'endtime',
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CtrlEnablecolumnsFeGroup FOR MClass -»
«IF createAccessControlField() -»
			'fe_group' => 'fe_group',
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE CtrlSearchFields FOR MClass -»
		'searchFields' => '«IF emHasTypo3TcaUtilizableCtrlSearchFields() -»«FOREACH emGetTypo3TcaCtrlSearchFields() AS searchField SEPARATOR ", " -»«searchField.asConfigurationName() -»«ENDFOREACH -»«ELSE -»«FOREACH property.typeSelect(MAttribute).select( a | !a.derived && !a.static ) AS searchField SEPARATOR ", " -»«searchField.asConfigurationName() -»«ENDFOREACH -»«ENDIF -»',
«ENDDEFINE»


«DEFINE CtrlLocalization FOR MClass -»
«IF createLocalizationFields() -»
		«EXPAND CtrlLocalizationLanguageField -»
		«EXPAND CtrlLocalizationTransOrigPointerField -»
		«EXPAND CtrlLocalizationTransOrigDiffSourceField -»
«ENDIF -»
«ENDDEFINE»


«REM»
	Field name which contains the pointer to the language of the record's content. Language for a record is defined by an integer pointing to a “sys_language” record (found in the page tree root).
«ENDREM»
«DEFINE CtrlLocalizationLanguageField FOR MClass -»
		'languageField'	=> 'sys_language_uid',
«ENDDEFINE»


«REM»
	Name of the field used by translations to point back to the original record (i.e. the record in the default language of which they are a translation).
«ENDREM»
«DEFINE CtrlLocalizationTransOrigPointerField FOR MClass -»
		'transOrigPointerField' => 'l10n_parent',
«ENDDEFINE»


«REM»
	Field name which will be updated with the value of the original language record whenever the translation record is updated. This information is later used to compare the current values of the default record with those stored in this field and if they differ there will be a display in the form of the difference visually. This is a big help for translators so they can quickly grasp the changes that happened to the default language text.
«ENDREM»
«DEFINE CtrlLocalizationTransOrigDiffSourceField FOR MClass -»
		'transOrigDiffSourceField' => 'l10n_diffsource',
«ENDDEFINE»


«DEFINE CtrlVersioning FOR MClass -»
«IF createVersioningFields() -»
		«EXPAND CtrlVersioningVersioningWs -»
		«EXPAND CtrlVersioningVersioningFollowPages -»
«ENDIF -»
«ENDDEFINE»


«REM»
	If set, versioning is enabled for this table. If integer it indicates a version number of versioning features.
«ENDREM»
«DEFINE CtrlVersioningVersioningWs FOR MClass -»
		'versioningWS' => 2,
«ENDDEFINE»


«REM»
	If set, content from this table will get copied along when a new version of a page is created.
«ENDREM»
«DEFINE CtrlVersioningVersioningFollowPages FOR MClass -»
		'versioning_followPages' => TRUE,
«ENDDEFINE»


«REM»
	This key defines the activation of tabs.
«ENDREM»
«DEFINE CtrlDividers2tabs FOR MClass -»
		'dividers2tabs' => 1,
«ENDDEFINE»


«REM»
	Generates a protected region for own TCA Ctrl Section code.
«ENDREM»
«DEFINE OwnCtrlSectionCode(String id) FOR MClass -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: put your further 'ctrl' section code here
		«ENDPROTECT»
«ENDDEFINE»


«REM» -- 'Interface' Section -- «ENDREM»

«REM» 
«ENDREM»
«DEFINE InterfaceSection FOR MClass -»
	'interface' => array(
		«EXPAND InterfaceShowRecordFieldList -»
		«EXPAND OwnInterfaceSectionCode("tca.php.own.interface.section.code." + xmiGuid) -»
	),
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE InterfaceShowRecordFieldList FOR MClass -»
		'showRecordFieldList' => '«FOREACH allProperties().select( p | !p.derived && !p.isStatic() ) AS p SEPARATOR ", " -»«p.asConfigurationName() -»«ENDFOREACH»',
«ENDDEFINE»


«REM»
	Generates a protected region for own TCA Interface Section code.
«ENDREM»
«DEFINE OwnInterfaceSectionCode(String id) FOR MClass -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: put your further 'interface' section code here
		«ENDPROTECT»
«ENDDEFINE»


«REM» -- 'Columns' Section -- «ENDREM»


«REM» 
«ENDREM»
«DEFINE ColumnsSection FOR MClass -»
	'columns' => array(
		«EXPAND ColumnsLocalizationColumns -»
		«EXPAND ColumnsRecordTypeColumn -»
		«EXPAND ColumnsAccessControlColumns -»
		«EXPAND ColumnsVersioningColumns -»
		«EXPAND ColumnsAttributeColumn(this) FOREACH allAttributes().select( a | !a.derived && !a.static ) -»
«FOREACH allSingleTableInheritanceSpecializations() AS s -»
		«EXPAND ColumnsAttributeColumn(s) FOREACH s.property.typeSelect(MAttribute).select( a | !a.derived && !a.static ) -»
«ENDFOREACH -»
		«EXPAND ColumnsAssociationColumn(this) FOREACH allAssociationRoles().select( ar | !ar.derived ) -»
«FOREACH allSingleTableInheritanceSpecializations() AS s -»
		«EXPAND ColumnsAssociationColumn(s) FOREACH s.property.typeSelect(MAssociationRole).select( ar | !ar.derived ) -»
«ENDFOREACH -»
		«EXPAND OwnColumnsSectionCode("tca.php.own.columns.section.code." + xmiGuid) -»
	),
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsLocalizationColumns FOR MClass -»
«IF createLocalizationFields() -»
	«EXPAND ColumnsSysLanguageUidColumn -»
	«EXPAND Columnsl10nParentColumn -»
	«EXPAND Columnsl10nDiffsourceColumn -»
«ENDIF -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsSysLanguageUidColumn FOR MClass -»
		'sys_language_uid' => array(
			'exclude' => TRUE,
			'label' => 'LLL:EXT:lang/locallang_general.xlf:LGL.language',
			'config' => array(
				'type' => 'select',
				'foreign_table' => 'sys_language',
				'foreign_table_where' => 'ORDER BY sys_language.title',
				'items' => array(
					array('LLL:EXT:lang/locallang_general.xlf:LGL.allLanguages', -1),
					array('LLL:EXT:lang/locallang_general.xlf:LGL.default_value', 0)
				),
			),
		),
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE Columnsl10nParentColumn FOR MClass -»
		'l10n_parent' => array(
			'displayCond' => 'FIELD:sys_language_uid:>:0',
			'exclude' => TRUE,
			'label' => 'LLL:EXT:lang/locallang_general.xlf:LGL.l18n_parent',
			'config' => array(
				'type' => 'select',
				'items'	=> array(
					array('', 0),
				),
				'foreign_table' => '«asConfigurationName() -»',
				'foreign_table_where' => 'AND «asConfigurationName() -».pid=###CURRENT_PID### AND «asConfigurationName() -».sys_language_uid IN (-1,0)',
			),
		),
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE Columnsl10nDiffsourceColumn FOR MClass -»
		'l10n_diffsource' => array(
			'config' =>array(
				'type' =>'passthrough',
			),
		),
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsRecordTypeColumn FOR MClass -»
«IF !allSingleTableInheritanceSpecializations().isEmpty -»
		'«getPersistenceRecordTypeColumnName() -»' => array(
			'label' => 'Type',
			'config' =>array(
				'type' =>'select',
				'items' => array(
					array('undefined', '0'),
					array('«asShortGeneralName() -»', '«asGeneralName() -»'),
					«FOREACH allSingleTableInheritanceSpecializations() AS s -»
					array('«s.asShortGeneralName() -»', '«s.asGeneralName() -»'),
					«ENDFOREACH -»
				),
				'default' => '0',
			),
		),
«ENDIF -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsAccessControlColumns FOR MClass -»
«EXPAND ColumnsHiddenColumn -»
«EXPAND ColumnsStarttimeColumn -»
«EXPAND ColumnsEndtimeColumn -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsHiddenColumn FOR MClass -»
«IF createHiddenField() -»
		'hidden' => array(
			'exclude' => TRUE,
			'label' => 'LLL:EXT:lang/locallang_general.xlf:LGL.hidden',
			'config' => array(
				'type' => 'check',
			),
		),
«ENDIF -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsStarttimeColumn FOR MClass -»
«IF createStarttimeField() -»
		'starttime' => array(
			'exclude' => TRUE,
			'l10n_mode' => 'mergeIfNotBlank',
			'label' => 'LLL:EXT:lang/locallang_general.xlf:LGL.starttime',
			'config' => array(
				'type' => 'input',
				'size' => 13,
				'max' => 20,
				'eval' => 'datetime',
				'checkbox' => FALSE,
				'default' => 0,
				'range' => array(
					'lower' => mktime(0, 0, 0, date('m'), date('d'), date('Y'))
				),
			),
		),
«ENDIF -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsEndtimeColumn FOR MClass -»
«IF createEndtimeField() -»
		'endtime' => array(
			'exclude' => TRUE,
			'l10n_mode' => 'mergeIfNotBlank',
			'label' => 'LLL:EXT:lang/locallang_general.xlf:LGL.endtime',
			'config' => array(
				'type' => 'input',
				'size' => 13,
				'max' => 20,
				'eval' => 'datetime',
				'checkbox' => FALSE,
				'default' => 0,
				'range' => array(
					'lower' => mktime(0, 0, 0, date('m'), date('d'), date('Y'))
				),
			),
		),
«ENDIF -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsVersioningColumns FOR MClass -»
«IF createVersioningFields() -»
	«EXPAND ColumnsT3VerLabelColumn -»
«ENDIF -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsT3VerLabelColumn FOR MClass -»
		't3ver_label' => array(
			'label' => 'LLL:EXT:lang/locallang_general.xlf:LGL.versionLabel',
			'config' => array(
				'type' => 'input',
				'size' => 30,
				'max' => 255,
			)
		),
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsAttributeColumn(MClass class) FOR MAttribute -»
		'«asConfigurationName() -»' => array(
			«EXPAND ColumnExclude -»
			«EXPAND ColumnLabel -»
			«EXPAND ColumnDefaultExtras -»
			«EXPAND OwnColumnCode("tca.php.own.columns.section.column.code." + class.xmiGuid + "." + xmiGuid) -»
			«EXPAND ColumnConfig(class) -»
		),
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnsAssociationColumn(MClass class) FOR MAssociationRole -»
		'«asConfigurationName() -»' => array(
			«EXPAND ColumnExclude -»
			«EXPAND ColumnLabel -»
			«EXPAND ColumnDefaultExtras -»
			«EXPAND OwnColumnCode("tca.php.own.columns.section.column.code." + class.xmiGuid + "." + xmiGuid) -»
			«EXPAND ColumnConfig(class) -»
		),
«ENDDEFINE»


«REM»
	Generates a region for own TCA Columns Section code.
«ENDREM»
«DEFINE OwnColumnsSectionCode(String id) FOR MClass -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: put your further 'columns' section code here
		«ENDPROTECT»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnExclude FOR MProperty -»
			'exclude' => «emHasTypo3TcaPropertyColumnsExclude("true").asTypo3Boolean() -»,
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnLabel FOR MProperty -»
			'label' => 'LLL:EXT:«extensionKey() -»/«filePathLocallangTcaXlf() -»:«asLocalizationName() -»',
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnDefaultExtras FOR MProperty -»
«IF emHasTypo3TcaPropertyUtilizableColumnsDefaultExtras() -»
			'defaultExtras' => '«emGetTypo3TcaPropertyColumnsDefaultExtras() -»',
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates a protected region for own TCA Columns Section column code.
«ENDREM»
«DEFINE OwnColumnCode(String id) FOR MProperty -»
			«PROTECT CSTART '/* ' CEND ' */' ID (id)»
			// TODO: put your further column code here
			«ENDPROTECT»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfig(MClass class) FOR MAttribute -»
			'config' => array(
«IF isTypo3PrimitiveType( type.asGeneralName() ) && type.asGuiType() != "Association" -»
			«IF type.asGuiType() == "Input" -»
				«EXPAND ColumnConfigTypeInput -»
			«ELSEIF type.asGuiType() == "Integer" -»
				«EXPAND ColumnConfigTypeInteger -»
			«ELSEIF type.asGuiType() == "Float" -»
				«EXPAND ColumnConfigTypeFloat -»
			«ELSEIF type.asGuiType() == "DateTime" -»
				«EXPAND ColumnConfigTypeDateTime -»	
			«ELSEIF type.asGuiType() == "Date" -»
				«EXPAND ColumnConfigTypeDate -»	
			«ELSEIF type.asGuiType() == "Time" -»
				«EXPAND ColumnConfigTypeTime -»	
			«ELSEIF type.asGuiType() == "TimeSec" -»
				«EXPAND ColumnConfigTypeTimeSec -»	
			«ELSEIF type.asGuiType() == "String" -»
				«EXPAND ColumnConfigTypeString -»
			«ELSEIF type.asGuiType() == "Password" -»
				«EXPAND ColumnConfigTypePassword -»
			«ELSEIF type.asGuiType() == "Text" -»
				«EXPAND ColumnConfigTypeText -»
			«ELSEIF type.asGuiType() == "RichText" -»
				«EXPAND ColumnConfigTypeRichText -»
			«ELSEIF type.asGuiType() == "Check" -»
				«EXPAND ColumnConfigTypeCheck -»
			«ELSEIF type.asGuiType() == "Boolean" -»
				«EXPAND ColumnConfigTypeBoolean -»
			«ELSEIF type.asGuiType() == "Radio" -»
				«EXPAND ColumnConfigTypeRadio -»
			«ELSEIF type.asGuiType() == "Select" -»
				«EXPAND ColumnConfigTypeSelect -»
			«ELSEIF type.asGuiType() == "File" -»
				«EXPAND ColumnConfigTypeFile -»
			«ELSEIF type.asGuiType() == "FileReference" -»
				«EXPAND ColumnConfigTypeFileReference -»
			«ELSEIF type.asGuiType() == "Image" -»
				«EXPAND ColumnConfigTypeImage -»
			«ELSEIF type.asGuiType() == "ImageReference" -»
				«EXPAND ColumnConfigTypeImageReference -»
			«ELSEIF type.asGuiType() == "Folder" -»
				«EXPAND ColumnConfigTypeFolder -»
			«ELSEIF type.asGuiType() == "Database" -»
				«EXPAND ColumnConfigTypeDatabase -»
			«ELSEIF type.asGuiType() == "None" -»
				«EXPAND ColumnConfigTypeNone -»
			«ELSE -»
				«EXPAND ColumnConfigTypeOther( type.asGuiType() ) -»
			«ENDIF -»
«ELSE -»
			«IF multiplicity.isSingleValued() -»
				«EXPAND ColumnConfigToOneUnidirectional(class) -»
			«ELSE -»
				«EXPAND ColumnConfigToManyUnidirectional(class) -»
			«ENDIF -»
«ENDIF -»
			«EXPAND OwnColumnConfigCode("tca.php.own.columns.section.column.config.code." + class.xmiGuid + "." + xmiGuid) -»
			),
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigTypeInput FOR MAttribute -»
«EXPAND ColumnConfigType("input") -»
«EXPAND ColumnConfigSize(30) -»
«EXPAND ColumnConfigEval(null) -»
«EXPAND ColumnConfigDefault(null) -»
«EXPAND ColumnConfigMax(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeInteger FOR MAttribute -»
«EXPAND ColumnConfigType("input") -»
«EXPAND ColumnConfigSize(30) -»
«EXPAND ColumnConfigEval({"int"}) -»
«EXPAND ColumnConfigDefault(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeFloat FOR MAttribute -»
«EXPAND ColumnConfigType("input") -»
«EXPAND ColumnConfigSize(30) -»
«EXPAND ColumnConfigEval({"double2"}) -»
«EXPAND ColumnConfigDefault(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeDateTime FOR MAttribute -»
«EXPAND ColumnConfigType("input") -»
«EXPAND ColumnConfigSize(16) -»
«EXPAND ColumnConfigEval({"datetime"}) -»
«EXPAND ColumnConfigDefault("time()") -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeDate FOR MAttribute -»
«EXPAND ColumnConfigType("input") -»
«EXPAND ColumnConfigSize(20) -»
«EXPAND ColumnConfigEval({"date"}) -»
«EXPAND ColumnConfigDefault("time()") -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeTime FOR MAttribute -»
«EXPAND ColumnConfigType("input") -»
«EXPAND ColumnConfigSize(5) -»
«EXPAND ColumnConfigEval({"time"}) -»
«EXPAND ColumnConfigDefault("time()") -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeTimeSec FOR MAttribute -»
«EXPAND ColumnConfigType("input") -»
«EXPAND ColumnConfigSize(8) -»
«EXPAND ColumnConfigEval({"timesec"}) -»
«EXPAND ColumnConfigDefault("time()") -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeString FOR MAttribute -»
«EXPAND ColumnConfigType("input") -»
«EXPAND ColumnConfigSize(30) -»
«EXPAND ColumnConfigEval({"trim"}) -»
«EXPAND ColumnConfigDefault(null) -»
«EXPAND ColumnConfigMax(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypePassword FOR MAttribute -»
«EXPAND ColumnConfigType("input") -»
«EXPAND ColumnConfigSize(30) -»
«EXPAND ColumnConfigEval({"password"}) -»
«EXPAND ColumnConfigDefault(null) -»
«EXPAND ColumnConfigMax(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeText FOR MAttribute -»
«EXPAND ColumnConfigType("text") -»
«EXPAND ColumnConfigCols(40) -»
«EXPAND ColumnConfigRows(15) -»
«EXPAND ColumnConfigEval({"trim"}) -»
«EXPAND ColumnConfigDefault(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeRichText FOR MAttribute -»
«EXPAND ColumnConfigType("text") -»
«EXPAND ColumnConfigCols(40) -»
«EXPAND ColumnConfigRows(15) -»
«EXPAND ColumnConfigEval({"trim"}) -»
«EXPAND ColumnConfigDefault(null) -»
«REM»«EXPAND ColumnDefaultExtras("'richtext:rte_transform[flag=rte_enabled|mode=ts]'") -»«ENDREM»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeCheck FOR MAttribute -»
«EXPAND ColumnConfigType("check") -»
«EXPAND ColumnConfigCols(5) -»
«EXPAND ColumnConfigEval({"unique"}) -»
«EXPAND ColumnConfigItems -»
«EXPAND ColumnConfigDefault(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeBoolean FOR MAttribute -»
«EXPAND ColumnConfigType("check") -»
«EXPAND ColumnConfigDefault(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeRadio FOR MAttribute -»
«EXPAND ColumnConfigType("radio") -»
«EXPAND ColumnConfigDefault("") -»
«EXPAND ColumnConfigItems -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeSelect FOR MAttribute -»
«EXPAND ColumnConfigType("select") -»
«EXPAND ColumnConfigSize(1) -»
«EXPAND ColumnConfigAutoMaxSize(null) -»
«EXPAND ColumnConfigEval({}) -»
«EXPAND ColumnConfigMinitems(0) -»
«EXPAND ColumnConfigMaxitems(1) -»
«EXPAND ColumnConfigItems -»
«EXPAND ColumnConfigDefault(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeFile FOR MAttribute -»
«EXPAND ColumnConfigType("group") -»
«EXPAND ColumnConfigInternalType("file") -»
«EXPAND ColumnConfigSize(1) -»
«EXPAND ColumnConfigAutoMaxSize(null) -»
«EXPAND ColumnConfigMinitems(0) -»
«EXPAND ColumnConfigMaxitems(1) -»
«EXPAND ColumnConfigAllowed("*") -»
«EXPAND ColumnConfigDisallowed("php") -»
«EXPAND ColumnConfigMaxSize(null) -»
«EXPAND ColumnConfigShowThumbs(true) -»
«EXPAND ColumnConfigUploadfolder( "uploads/" + extensionPrefixWithoutUnderscores() ) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeFileReference FOR MAttribute -»
«EXPAND ColumnConfigType("group") -»
«EXPAND ColumnConfigInternalType("file_reference") -»
«EXPAND ColumnConfigSize(1) -»
«EXPAND ColumnConfigAutoMaxSize(null) -»
«EXPAND ColumnConfigMinitems(0) -»
«EXPAND ColumnConfigMaxitems(1) -»
«EXPAND ColumnConfigAllowed("*") -»
«EXPAND ColumnConfigDisallowed("php") -»
«EXPAND ColumnConfigMaxSize(null) -»
«EXPAND ColumnConfigShowThumbs(true) -»
«EXPAND ColumnConfigUploadfolder( "uploads/" + extensionPrefixWithoutUnderscores() ) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeImage FOR MAttribute -»
«EXPAND ColumnConfigType("group") -»
«EXPAND ColumnConfigInternalType("file") -»
«EXPAND ColumnConfigSize(1) -»
«EXPAND ColumnConfigAutoMaxSize(null) -»
«EXPAND ColumnConfigMinitems(0) -»
«EXPAND ColumnConfigMaxitems(1) -»
«EXPAND ColumnConfigAllowed("gif,jpg,jpeg,tif,tiff,bmp,pcx,tga,png,pdf,ai") -»
«EXPAND ColumnConfigDisallowed("") -»
«EXPAND ColumnConfigMaxSize(null) -»
«EXPAND ColumnConfigShowThumbs(true) -»
«EXPAND ColumnConfigUploadfolder( "uploads/" + extensionPrefixWithoutUnderscores() ) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeImageReference FOR MAttribute -»
«EXPAND ColumnConfigType("group") -»
«EXPAND ColumnConfigInternalType("file_reference") -»
«EXPAND ColumnConfigSize(1) -»
«EXPAND ColumnConfigAutoMaxSize(null) -»
«EXPAND ColumnConfigMinitems(0) -»
«EXPAND ColumnConfigMaxitems(1) -»
«EXPAND ColumnConfigAllowed("gif,jpg,jpeg,tif,tiff,bmp,pcx,tga,png,pdf,ai") -»
«EXPAND ColumnConfigDisallowed("") -»
«EXPAND ColumnConfigMaxSize(null) -»
«EXPAND ColumnConfigShowThumbs(true) -»
«EXPAND ColumnConfigUploadfolder( "uploads/" + extensionPrefixWithoutUnderscores() ) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeFolder FOR MAttribute -»
«EXPAND ColumnConfigType("group") -»
«EXPAND ColumnConfigInternalType("folder") -»
«EXPAND ColumnConfigSize(1) -»
«EXPAND ColumnConfigAutoMaxSize(null) -»
«EXPAND ColumnConfigMinitems(0) -»
«EXPAND ColumnConfigMaxitems(1) -»
«EXPAND ColumnConfigShowThumbs(true) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeDatabase FOR MAttribute -»
«EXPAND ColumnConfigType("group") -»
«EXPAND ColumnConfigInternalType("db") -»
«EXPAND ColumnConfigSize(1) -»
«EXPAND ColumnConfigAutoMaxSize(null) -»
«EXPAND ColumnConfigMinitems(0) -»
«EXPAND ColumnConfigMaxitems(1) -»
«EXPAND ColumnConfigAllowed("*") -»
«EXPAND ColumnConfigShowThumbs(true) -»
«EXPAND ColumnConfigPrependTname(null) -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeNone FOR MAttribute -»
«EXPAND ColumnConfigType("none") -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigTypeOther(String otherPropertyType) FOR MAttribute -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigToOneUnidirectional(MClass class) FOR MAttribute -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigToManyUnidirectional(MClass class) FOR MAttribute -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignSortBy -»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMM(class) -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigMultiple -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfig(MClass class) FOR MAssociationRole -»
			'config' => array(
			«IF isOneToOne() && !hasOpposite() -»			
				«EXPAND ColumnConfigOneToOneUnidirectional(class) -»
			«ELSEIF isOneToOne() && hasOpposite() -»
				«EXPAND ColumnConfigOneToOneBidirectional(class) -»
			«ELSEIF isOneToMany() && !hasOpposite() -»
				«EXPAND ColumnConfigOneToManyUnidirectional(class) -»
			«ELSEIF isOneToMany() && hasOpposite() -»		
				«EXPAND ColumnConfigOneToManyBidirectional(class) -»
			«ELSEIF isManyToOne() && !hasOpposite() -»
				«EXPAND ColumnConfigManyToOneUnidirectional(class) -»
			«ELSEIF isManyToOne() && hasOpposite() -»
				«EXPAND ColumnConfigManyToOneBidirectional(class) -»
			«ELSEIF isManyToMany() && !hasOpposite() -»
				«EXPAND ColumnConfigManyToManyUnidirectional(class) -»
			«ELSEIF isManyToMany() && hasOpposite() -»
				«EXPAND ColumnConfigManyToManyBidirectional(class) -»
			«ENDIF -»
			«EXPAND OwnColumnConfigCode("tca.php.own.columns.section.column.config.code." + class.xmiGuid + "." + xmiGuid) -»
			),
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigOneToOneUnidirectional(MClass class) FOR MAssociationRole -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigAppearance -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigOneToOneBidirectional(MClass class) FOR MAssociationRole -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigAppearance -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigOneToManyUnidirectional(MClass class) FOR MAssociationRole -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignSortBy -»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMM(class) -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigMultiple -»
«EXPAND ColumnConfigAppearance -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigOneToManyBidirectional(MClass class) FOR MAssociationRole -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignField -»
«REM»«EXPAND ColumnConfigForeignSortBy -»«ENDREM»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigMultiple -»
«EXPAND ColumnConfigAppearance -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigManyToOneUnidirectional(MClass class) FOR MAssociationRole -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigAppearance -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigManyToOneBidirectional(MClass class) FOR MAssociationRole -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigAppearance -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigManyToManyUnidirectional(MClass class) FOR MAssociationRole -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignSortBy -»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMM(class) -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigMultiple -»
«EXPAND ColumnConfigAppearance -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE ColumnConfigManyToManyBidirectional(MClass class) FOR MAssociationRole -»
«EXPAND ColumnConfigType -»
«EXPAND ColumnConfigForeignTable -»
«EXPAND ColumnConfigForeignSortBy -»
«EXPAND ColumnConfigForeignTableWhere -»
«EXPAND ColumnConfigMM(class) -»
«EXPAND ColumnConfigMinitems -»
«EXPAND ColumnConfigMaxitems -»
«EXPAND ColumnConfigMultiple -»
«EXPAND ColumnConfigAppearance -»
«EXPAND ColumnConfigWizards -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigAllowed(String defaultAllowed) FOR MProperty -»
«IF emHasGuiPropertyAllowedFileExtensionsUtilizableAllowedFileExtensions() || defaultAllowed != null -»
				'allowed' => '«IF emHasGuiPropertyAllowedFileExtensionsUtilizableAllowedFileExtensions() -»«emGetGuiPropertyAllowedFileExtensionsAllowedFileExtensions() -»«ELSE -»«defaultAllowed -»«ENDIF -»',
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigAppearance FOR MAssociationRole -»
«IF (composition) -»
				'appearance' => array(
					'collapse' => FALSE,
					'levelLinksPosition' => 'top',
					'showSynchronizationLink' => TRUE,
					'showPossibleLocalizationRecords' => TRUE,
					'showAllLocalizationLink' => TRUE
				),
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigAutoMaxSize(Integer defaultAutoSizeMax) FOR MProperty -»
«IF defaultAutoSizeMax != null -»
				'autoSizeMax' => «defaultAutoSizeMax -»,
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigCols(Integer defaultCols) FOR MProperty -»
«IF emHasGuiPropertyWidthUtilizableWidth() || defaultCols != null -»
				'cols' => «IF emHasGuiPropertyWidthUtilizableWidth() -»«emGetGuiPropertyWidthWidth() -»«ELSE -»«defaultCols -»«ENDIF -»,
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigDbType(String dbType) FOR MProperty -»
				'dbType' => '«dbType -»',
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigDefault(String defaultDefaultValue) FOR MAttribute -»
«IF hasDefaultValue() || defaultDefaultValue != null -»
				'default' => «IF hasDefaultValue() -»«defaultvalue -»«ELSE -»«defaultDefaultValue -»«ENDIF -»,
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigDisallowed(String defaultDisallowed) FOR MProperty -»
«IF emHasGuiPropertyDisallowedFileExtensionsUtilizableDisallowedFileExtensions() || defaultDisallowed != null -»
				'disallowed' => '«IF emHasGuiPropertyDisallowedFileExtensionsUtilizableDisallowedFileExtensions() -»«emGetGuiPropertyDisallowedFileExtensionsDisallowedFileExtensions() -»«ELSE -»«defaultDisallowed -»«ENDIF -»',
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigEval(List[String] defaultEvals) FOR MProperty -»
«IF !defaultEvals.isEmpty -»
				'eval' => '«FOREACH defaultEvals AS eval SEPARATOR ", "»«eval -»«ENDFOREACH -»',
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigForeignField FOR MAssociationRole -»
				'foreign_field' => '«opposite.asConfigurationName() -»',
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigForeignSortBy FOR MAttribute -»
				'foreign_sortby' => 'sorting',
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigForeignSortBy FOR MAssociationRole -»
«IF !hasOpposite() -»
				'foreign_sortby' => 'sorting',
«ELSE -»
				'foreign_sortby' => '«IF classifier.name().compareTo( type.name() ) < 0 -»sorting_foreign«ELSE -»sorting«ENDIF -»',
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigForeignTable FOR MProperty -»
				'foreign_table' => '«type.asPersistenceName() -»',
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigForeignTableWhere FOR MProperty -»
				'foreign_table_where' => 'AND sys_language_uid IN (-1,0)',
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigInternalType(String internalType) FOR MProperty -»
				'internal_type' => '«internalType -»',
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigItems FOR MProperty -»
«IF emHasGuiPropertyItemsUtilizableItems() -»
				'items' => array(«FOREACH emGetGuiPropertyItemsItems() AS item SEPARATOR "," -»
					array(«asAssociativeArrayItem(item)»)
				«ENDFOREACH -»),
«ENDIF -»
«ENDDEFINE»


«REM»
hier evtl. versuch über sql type maximum herauszufinden
«ENDREM»
«DEFINE ColumnConfigMax(Integer defaultMax) FOR MProperty -»
«IF emHasGuiPropertyMaxLengthUtilizableMaxLength() || defaultMax != null -»
				'max' => «IF emHasGuiPropertyMaxLengthUtilizableMaxLength() -»«emGetGuiPropertyMaxLengthMaxLength() -»«ELSE -»«defaultMax -»«ENDIF -»,
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigMaxitems(Integer defaultMaxitems) FOR MProperty -»
«IF  emHasGuiPropertyMaxItemsUtilizableMaxItems() || defaultMaxitems != null -»
				'maxitems' => «IF emHasGuiPropertyMaxItemsUtilizableMaxItems() -»«emGetGuiPropertyMaxItemsMaxItems() -»«ELSE -»«defaultMaxitems -»«ENDIF -»,
«ENDIF -»
«ENDDEFINE»


«DEFINE ColumnConfigMaxitems FOR MAttribute -»
				'maxitems' => «IF multiplicity.hasFixedUpperBoundMultiplicity() -»«multiplicity.upperBound -»«ELSE -»99999«ENDIF -»,
«ENDDEFINE»


«DEFINE ColumnConfigMaxitems FOR MAssociationRole -»
				'maxitems' => «IF multiplicity.hasFixedUpperBoundMultiplicity() -»«multiplicity.upperBound -»«ELSE -»99999«ENDIF -»,
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigMaxSize(Integer defaultMaxSize) FOR MProperty -»
«IF emHasGuiPropertyMaxFileSizeUtilizableMaxFileSize() || defaultMaxSize != null -»
				'max_size' => «IF emHasGuiPropertyMaxFileSizeUtilizableMaxFileSize() -»«emGetGuiPropertyMaxFileSizeMaxFileSize() -»«ELSE -»«defaultMaxSize -»«ENDIF -»,
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigMinitems(Integer defaultMinitems) FOR MProperty -»
«IF emHasGuiPropertyMinItemsUtilizableMinItems() || defaultMinitems != null -»
				'minitems' => «IF emHasGuiPropertyMaxItemsUtilizableMaxItems() -»«emGetGuiPropertyMinItemsMinItems() -»«ELSE -»«defaultMinitems -»«ENDIF -»,
«ENDIF -»
«ENDDEFINE»


«DEFINE ColumnConfigMinitems FOR MAttribute -»
				'minitems' => «IF multiplicity.hasFixedLowerBoundMultiplicity() -»«multiplicity.lowerBound -»«ELSE -»0«ENDIF -»,
«ENDDEFINE»


«DEFINE ColumnConfigMinitems FOR MAssociationRole -»
				'minitems' => «IF multiplicity.hasFixedLowerBoundMultiplicity() -»«multiplicity.lowerBound -»«ELSE -»0«ENDIF -»,
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigMM(MClass class) FOR MProperty -»
				'MM' => '«asIntermediateTableName(class) -»',
«ENDDEFINE»


«DEFINE ColumnConfigMultiple FOR MProperty -»
				'multiple' => «!multiplicity.unique -»,
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigPrependTname(Boolean defaultPrependTname) FOR MProperty -»
«IF defaultPrependTname != null -»
				'prepend_tname' => «defaultPrependTname.asTypo3Boolean() -»,
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigRows(Integer defaultRows) FOR MProperty -»
«IF emHasGuiPropertyHeightUtilizableHeight() || defaultRows != null -»
				'rows' => «IF emHasGuiPropertyHeightUtilizableHeight() -»«emGetGuiPropertyHeightHeight() -»«ELSE -»«defaultRows -»«ENDIF -»,
«ENDIF -»
«ENDDEFINE»

«REM»
«ENDREM»
«DEFINE ColumnConfigShowThumbs(Boolean defaultShowThumbs) FOR MProperty -»
«IF emHasGuiPropertyShowThumbnailsUtilizableShowThumbnails() || defaultShowThumbs != null -»
				'show_thumbs' => «IF emHasGuiPropertyShowThumbnailsUtilizableShowThumbnails() -»«emGetGuiPropertyShowThumbnailsShowThumbnails().asTypo3Boolean() -»«ELSE -»«defaultShowThumbs.asTypo3Boolean() -»«ENDIF -»,
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigSize(Integer defaultSize) FOR MProperty -»
«IF emHasGuiPropertyWidthUtilizableWidth() || defaultSize != null -»
				'size' => «IF emHasGuiPropertyWidthUtilizableWidth() -»«emGetGuiPropertyWidthWidth() -»«ELSE -»«defaultSize -»«ENDIF -»,
«ENDIF -»
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigType(String type) FOR MProperty -»
				'type' => '«type -»',
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigType FOR MAttribute -»
				'type' => 'select',
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigType FOR MAssociationRole -»
				'type' => '«IF (composition) -»inline«ELSE -»select«ENDIF -»',
«ENDDEFINE»


«REM»
«ENDREM»
«DEFINE ColumnConfigUploadfolder(String defaultUploadfolder) FOR MProperty -»
«IF emHasGuiPropertyUploadFolderUtilizableUploadFolder() || defaultUploadfolder != null -»
				'uploadfolder' => '«IF emHasGuiPropertyUploadFolderUtilizableUploadFolder() -»«emGetGuiPropertyUploadFolderUploadFolder() -»«ELSE -»«defaultUploadfolder -»«ENDIF -»',
«ENDIF -»
«ENDDEFINE»


«DEFINE ColumnConfigWizards FOR MProperty -»
«IF emHasTypo3TcaAssociationColumnsConfigWizardAdd("true") || emHasTypo3TcaAssociationColumnsConfigWizardEdit("true")  || emHasTypo3TcaAssociationColumnsConfigWizardSuggest("true") -»
				'wizards' => array(
					'_PADDING' => 1,
					'_VERTICAL' => 1,
					«EXPAND ColumnConfigWizardsAdd -»
					«EXPAND ColumnConfigWizardsEdit -»
					«EXPAND ColumnConfigWizardsSuggest -»
				),
«ENDIF -»
«ENDDEFINE»


«DEFINE ColumnConfigWizardsAdd FOR MProperty -»
«IF emHasTypo3TcaAssociationColumnsConfigWizardAdd("true") -»
					'add' => array(
						'type' => 'script',
						'title' => 'Create new',
						'icon' => 'add.gif',
						'script' => 'wizard_add.php',
						'params' => array(
							'table'=>'«type.asPersistenceName() -»',
							'pid' => '###CURRENT_PID###',
							'setValue' => 'prepend'
						),
					),
«ENDIF -»
«ENDDEFINE»


«DEFINE ColumnConfigWizardsEdit FOR MProperty -»
«IF emHasTypo3TcaAssociationColumnsConfigWizardEdit("true") -»
					'edit' => array(
						'type' => 'popup',
						'title' => 'Edit',
						'icon' => 'edit2.gif',
						'script' => 'wizard_edit.php',
						'popup_onlyOpenIfSelected' => 1,
						'JSopenParams' => 'height=350,width=580,status=0,menubar=0,scrollbars=1',
					),
«ENDIF -»
«ENDDEFINE»


«DEFINE ColumnConfigWizardsSuggest FOR MProperty -»
«IF emHasTypo3TcaAssociationColumnsConfigWizardSuggest("true") -»
					'suggest' => array(
						'type' => 'suggest',
					),
«ENDIF -»
«ENDDEFINE»


«REM»
	Generates a protected region for own TCA Columns Section column config code.
«ENDREM»
«DEFINE OwnColumnConfigCode(String id) FOR MProperty -»
				«PROTECT CSTART '/* ' CEND ' */' ID (id)»
				// TODO: put your further column config code here
				«ENDPROTECT»
«ENDDEFINE»


«REM» -- 'Types' Section -- «ENDREM»

«REM» 
«ENDREM»
«DEFINE TypesSection FOR MClass -»
	'types' => array(
		«EXPAND TypesNumbers -»
		«EXPAND OwnTypesSectionCode("tca.php.own.types.section.code." + xmiGuid) -»
	),
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE TypesNumbers FOR MClass -»
«IF allSingleTableInheritanceSpecializations().isEmpty -»
	«EXPAND TypesNumbersConcrete -»
«ELSE -»
	«EXPAND TypesNumbersSingle -»
«ENDIF -»
«ENDDEFINE»


«DEFINE TypesNumbersConcrete FOR MClass -»
		'1' => array('showitem'	=> '«IF createLocalizationFields() -»sys_language_uid, «ENDIF -»«IF createHiddenField() -»hidden, «ENDIF -»«IF createStarttimeField() -»starttime, «ENDIF -»«IF createEndtimeField() -»endtime, «ENDIF -»«EXPAND TypesNumbersShowitem FOREACH allProperties().select( p | !p.derived && !p.isStatic() ) SEPARATOR ", " -»'),
«ENDDEFINE»


«DEFINE TypesNumbersSingle FOR MClass -»
		'0' => array('showitem'	=> '«getPersistenceRecordTypeColumnName() -»'),
		'«asGeneralName() -»' => array('showitem' => '«getPersistenceRecordTypeColumnName() -», «IF createLocalizationFields() -»sys_language_uid, «ENDIF -»«IF createHiddenField() -»hidden, «ENDIF -»«IF createStarttimeField() -»starttime, «ENDIF -»«IF createEndtimeField() -»endtime, «ENDIF -»«EXPAND TypesNumbersShowitem FOREACH allProperties().select( p | !p.derived && !p.isStatic() ) SEPARATOR ", " -»'),
		«FOREACH allSingleTableInheritanceSpecializations() AS s -»
		'«s.asGeneralName() -»' => array('showitem' => '«getPersistenceRecordTypeColumnName() -», «IF s.createLocalizationFields() -»sys_language_uid, «ENDIF -»«IF createHiddenField() -»hidden, «ENDIF -»«IF s.createStarttimeField() -»starttime, «ENDIF -»«IF s.createEndtimeField() -»endtime, «ENDIF -»«EXPAND TypesNumbersShowitem FOREACH s.allProperties().select( p | !p.derived && !p.isStatic() ) SEPARATOR ", " -»'),
		«ENDFOREACH -»
«ENDDEFINE»



«DEFINE TypesNumbersShowitem FOR MProperty -»
«asConfigurationName() -»«IF emHasTypo3TcaPropertyUtilizableTypesAltLabel() || emHasTypo3TcaPropertyUtilizableTypesPaletteNumber() || emHasTypo3TcaPropertyUtilizableTypesSpecialConfiguration() || emHasTypo3TcaPropertyUtilizableTypesFormStyleCodes() -»;«emGetTypo3TcaPropertyTypesAltLabel() -»;«emGetTypo3TcaPropertyTypesPaletteNumber() -»;«emGetTypo3TcaPropertyTypesSpecialConfiguration() -»;«emGetTypo3TcaPropertyTypesFormStyleCodes() -»«ENDIF -»
«ENDDEFINE»


«REM»
	Generates a protected region for own TCA Types Section code.
«ENDREM»
«DEFINE OwnTypesSectionCode(String id) FOR MClass -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: put your further 'types' section code here
		«ENDPROTECT»
«ENDDEFINE»


«REM» -- 'Palettes' Section -- «ENDREM»

«REM» 
«ENDREM»
«DEFINE PalettesSection FOR MClass -»
	'palettes' => array(
		«EXPAND PalettesNumbers -»
		«EXPAND OwnPalettesSectionCode("tca.php.own.palettes.section.code." + xmiGuid) -»
	),
«ENDDEFINE»


«REM» 
«ENDREM»
«DEFINE PalettesNumbers FOR MClass -»
		'1' => array('showitem'	=> ''),
«ENDDEFINE»


«REM»
	Generates a protected region for own TCA Palettes Section code.
«ENDREM»
«DEFINE OwnPalettesSectionCode(String id) FOR MClass -»
		«PROTECT CSTART '/* ' CEND ' */' ID (id)»
		// TODO: put your further 'palettes' section code here
		«ENDPROTECT»
«ENDDEFINE»


«REM»
	Generates a protected region for own code.
«ENDREM»
«DEFINE OwnCode(String id) FOR MClass -»
	«PROTECT CSTART '/* ' CEND ' */' ID (id)»
	// TODO: put your further code here
	«ENDPROTECT»
«ENDDEFINE»