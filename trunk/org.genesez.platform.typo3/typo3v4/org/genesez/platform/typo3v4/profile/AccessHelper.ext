/**
 * Simplifies access to "GeneSEZ TYPO3v4 Profile" profile 
 * and makes working with the profile more easier. 
 *  
 */

// based on genesez meta model
import gcore;

// use common access helper scripts
extension org::genesez::metamodel::core::util::AccessHelper;

// use profile scripts
extension org::genesez::platform::typo3v4::profile::Profile;

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3ExtensionManager"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3ExtensionManager".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3ExtensionManagerStereotype(MElement this) :
	hasStereotype( prT3ExtensionManager() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3ExtensionManager".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3ExtensionManager(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3ExtensionManager".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3ExtensionManagerTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3ExtensionManager(), tag, valueReference );
	
/*
- - "author" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "author" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerAuthor(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerAuthor(), value );

/**
 * Checks if an element has a value of the tagged value "author" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableAuthor(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerAuthor() );

/**
 * Returns the value of the tagged value "author"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerAuthor(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerAuthor() );

/**
 * Sets the value of an existing the tagged value "author"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerAuthor(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerAuthor(), value );

/*
- - "authorCompany" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "authorCompany" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerAuthorCompany(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerAuthorCompany(), value );

/**
 * Checks if an element has a value of the tagged value "authorCompany" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableAuthorCompany(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerAuthorCompany() );

/**
 * Returns the value of the tagged value "authorCompany"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerAuthorCompany(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerAuthorCompany() );

/**
 * Sets the value of an existing the tagged value "authorCompany"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerAuthorCompany(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerAuthorCompany(), value );

/*
- - "authorEMail" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "authorEMail" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerAuthorEMail(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerAuthorEMail(), value );

/**
 * Checks if an element has a value of the tagged value "authorEMail" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableAuthorEMail(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerAuthorEMail() );

/**
 * Returns the value of the tagged value "authorEMail"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerAuthorEMail(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerAuthorEMail() );

/**
 * Sets the value of an existing the tagged value "authorEMail"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerAuthorEMail(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerAuthorEMail(), value );

/*
- - "category" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "category" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerCategory(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerCategory(), value );

/**
 * Checks if an element has a value of the tagged value "category" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableCategory(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerCategory() );

/**
 * Returns the value of the tagged value "category"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerCategory(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerCategory() );

/**
 * Sets the value of an existing the tagged value "category"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerCategory(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerCategory(), value );

/*
- - "clearCacheOnLoad" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "clearCacheOnLoad" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerClearCacheOnLoad(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerClearCacheOnLoad(), value );

/**
 * Checks if an element has a value of the tagged value "clearCacheOnLoad" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableClearCacheOnLoad(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerClearCacheOnLoad() );

/**
 * Returns the value of the tagged value "clearCacheOnLoad"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerClearCacheOnLoad(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerClearCacheOnLoad() );

/**
 * Sets the value of an existing the tagged value "clearCacheOnLoad"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerClearCacheOnLoad(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerClearCacheOnLoad(), value );

/*
- - "conflicts" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "conflicts" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerConflicts(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerConflicts(), value );

/**
 * Checks if an element has a value of the tagged value "conflicts" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableConflicts(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerConflicts() );

/**
 * Returns a list of values of the tagged value "conflicts"
 * of the stereotype "T3ExtensionManager".
 *
* @return the values of the tagged value
 */
List[String] getT3ExtensionManagerConflicts(MElement this) : 
	getTaggedValueList( prT3ExtensionManager(), prT3ExtensionManagerConflicts() );

/**
 * Sets the value of an existing the tagged value "conflicts"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerConflicts(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerConflicts(), value );

/*
- - "createDirs" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "createDirs" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerCreateDirs(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerCreateDirs(), value );

/**
 * Checks if an element has a value of the tagged value "createDirs" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableCreateDirs(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerCreateDirs() );

/**
 * Returns a list of values of the tagged value "createDirs"
 * of the stereotype "T3ExtensionManager".
 *
* @return the values of the tagged value
 */
List[String] getT3ExtensionManagerCreateDirs(MElement this) : 
	getTaggedValueList( prT3ExtensionManager(), prT3ExtensionManagerCreateDirs() );

/**
 * Sets the value of an existing the tagged value "createDirs"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerCreateDirs(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerCreateDirs(), value );

/*
- - "dependencies" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "dependencies" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerDependencies(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerDependencies(), value );

/**
 * Checks if an element has a value of the tagged value "dependencies" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableDependencies(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerDependencies() );

/**
 * Returns a list of values of the tagged value "dependencies"
 * of the stereotype "T3ExtensionManager".
 *
* @return the values of the tagged value
 */
List[String] getT3ExtensionManagerDependencies(MElement this) : 
	getTaggedValueList( prT3ExtensionManager(), prT3ExtensionManagerDependencies() );

/**
 * Sets the value of an existing the tagged value "dependencies"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerDependencies(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerDependencies(), value );

/*
- - "description" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "description" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerDescription(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerDescription(), value );

/**
 * Checks if an element has a value of the tagged value "description" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableDescription(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerDescription() );

/**
 * Returns the value of the tagged value "description"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerDescription(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerDescription() );

/**
 * Sets the value of an existing the tagged value "description"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerDescription(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerDescription(), value );

/*
- - "doNotLoadInFE" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "doNotLoadInFE" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerDoNotLoadInFE(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerDoNotLoadInFE(), value );

/**
 * Checks if an element has a value of the tagged value "doNotLoadInFE" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableDoNotLoadInFE(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerDoNotLoadInFE() );

/**
 * Returns the value of the tagged value "doNotLoadInFE"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerDoNotLoadInFE(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerDoNotLoadInFE() );

/**
 * Sets the value of an existing the tagged value "doNotLoadInFE"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerDoNotLoadInFE(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerDoNotLoadInFE(), value );

/*
- - "internal" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "internal" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerInternal(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerInternal(), value );

/**
 * Checks if an element has a value of the tagged value "internal" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableInternal(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerInternal() );

/**
 * Returns the value of the tagged value "internal"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerInternal(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerInternal() );

/**
 * Sets the value of an existing the tagged value "internal"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerInternal(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerInternal(), value );

/*
- - "lockType" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "lockType" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerLockType(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerLockType(), value );

/**
 * Checks if an element has a value of the tagged value "lockType" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableLockType(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerLockType() );

/**
 * Returns a list of values of the tagged value "lockType"
 * of the stereotype "T3ExtensionManager".
 *
* @return the values of the tagged value
 */
List[String] getT3ExtensionManagerLockType(MElement this) : 
	getTaggedValueList( prT3ExtensionManager(), prT3ExtensionManagerLockType() );

/**
 * Sets the value of an existing the tagged value "lockType"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerLockType(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerLockType(), value );

/*
- - "modifyTables" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "modifyTables" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerModifyTables(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerModifyTables(), value );

/**
 * Checks if an element has a value of the tagged value "modifyTables" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableModifyTables(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerModifyTables() );

/**
 * Returns a list of values of the tagged value "modifyTables"
 * of the stereotype "T3ExtensionManager".
 *
* @return the values of the tagged value
 */
List[String] getT3ExtensionManagerModifyTables(MElement this) : 
	getTaggedValueList( prT3ExtensionManager(), prT3ExtensionManagerModifyTables() );

/**
 * Sets the value of an existing the tagged value "modifyTables"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerModifyTables(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerModifyTables(), value );

/*
- - "priority" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "priority" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerPriority(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerPriority(), value );

/**
 * Checks if an element has a value of the tagged value "priority" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizablePriority(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerPriority() );

/**
 * Returns the value of the tagged value "priority"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerPriority(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerPriority() );

/**
 * Sets the value of an existing the tagged value "priority"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerPriority(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerPriority(), value );

/*
- - "shy" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "shy" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerShy(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerShy(), value );

/**
 * Checks if an element has a value of the tagged value "shy" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableShy(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerShy() );

/**
 * Returns the value of the tagged value "shy"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerShy(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerShy() );

/**
 * Sets the value of an existing the tagged value "shy"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerShy(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerShy(), value );

/*
- - "state" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "state" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerState(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerState(), value );

/**
 * Checks if an element has a value of the tagged value "state" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableState(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerState() );

/**
 * Returns the value of the tagged value "state"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerState(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerState() );

/**
 * Sets the value of an existing the tagged value "state"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerState(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerState(), value );

/*
- - "suggests" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "suggests" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerSuggests(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerSuggests(), value );

/**
 * Checks if an element has a value of the tagged value "suggests" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableSuggests(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerSuggests() );

/**
 * Returns a list of values of the tagged value "suggests"
 * of the stereotype "T3ExtensionManager".
 *
* @return the values of the tagged value
 */
List[String] getT3ExtensionManagerSuggests(MElement this) : 
	getTaggedValueList( prT3ExtensionManager(), prT3ExtensionManagerSuggests() );

/**
 * Sets the value of an existing the tagged value "suggests"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerSuggests(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerSuggests(), value );

/*
- - "title" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "title" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerTitle(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerTitle(), value );

/**
 * Checks if an element has a value of the tagged value "title" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableTitle(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerTitle() );

/**
 * Returns the value of the tagged value "title"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerTitle(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerTitle() );

/**
 * Sets the value of an existing the tagged value "title"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerTitle(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerTitle(), value );

/*
- - "uploadFolder" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "uploadFolder" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerUploadFolder(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerUploadFolder(), value );

/**
 * Checks if an element has a value of the tagged value "uploadFolder" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableUploadFolder(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerUploadFolder() );

/**
 * Returns the value of the tagged value "uploadFolder"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerUploadFolder(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerUploadFolder() );

/**
 * Sets the value of an existing the tagged value "uploadFolder"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerUploadFolder(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerUploadFolder(), value );

/*
- - "version" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "version" 
 * of the stereotype "T3ExtensionManager".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3ExtensionManagerVersion(MElement this, String value) :
	hasTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerVersion(), value );

/**
 * Checks if an element has a value of the tagged value "version" 
 * of the stereotype "T3ExtensionManager" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3ExtensionManagerUtilizableVersion(MElement this) :
	hasUtilizableValue( prT3ExtensionManager(), prT3ExtensionManagerVersion() );

/**
 * Returns the value of the tagged value "version"
 * of the stereotype "T3ExtensionManager".
 *
 * @return the value of the tagged value
 */
String getT3ExtensionManagerVersion(MElement this) :
	getTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerVersion() );

/**
 * Sets the value of an existing the tagged value "version"
 * of the stereotype "T3ExtensionManager".
 *
 * @param value the new value of a tagged value
 */
Void setT3ExtensionManagerVersion(MElement this, String value) :
	setTaggedValue( prT3ExtensionManager(), prT3ExtensionManagerVersion(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3Localization"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3Localization".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3LocalizationStereotype(MElement this) :
	hasStereotype( prT3Localization() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3Localization".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3LocalizationTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3Localization(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3Localization".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3LocalizationTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3Localization(), tag, valueReference );
	
/*
- - "languageKeys" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "languageKeys" 
 * of the stereotype "T3Localization".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3LocalizationLanguageKeys(MElement this, String value) :
	hasTaggedValue( prT3Localization(), prT3LocalizationLanguageKeys(), value );

/**
 * Checks if an element has a value of the tagged value "languageKeys" 
 * of the stereotype "T3Localization" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3LocalizationUtilizableLanguageKeys(MElement this) :
	hasUtilizableValue( prT3Localization(), prT3LocalizationLanguageKeys() );

/**
 * Returns a list of values of the tagged value "languageKeys"
 * of the stereotype "T3Localization".
 *
* @return the values of the tagged value
 */
List[String] getT3LocalizationLanguageKeys(MElement this) : 
	getTaggedValueList( prT3Localization(), prT3LocalizationLanguageKeys() );

/**
 * Sets the value of an existing the tagged value "languageKeys"
 * of the stereotype "T3Localization".
 *
 * @param value the new value of a tagged value
 */
Void setT3LocalizationLanguageKeys(MElement this, String value) :
	setTaggedValue( prT3Localization(), prT3LocalizationLanguageKeys(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3Singleton"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3Singleton".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3SingletonStereotype(MElement this) :
	hasStereotype( prT3Singleton() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAAssociationType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAAssociationType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAAssociationTypeStereotype(MElement this) :
	hasStereotype( prT3TCAAssociationType() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCAAssociationType".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAAssociationTypeTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCAAssociationType(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCAAssociationType".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCAAssociationTypeTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCAAssociationType(), tag, valueReference );
	
/*
- - "columnsConfigWizardAdd" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "columnsConfigWizardAdd" 
 * of the stereotype "T3TCAAssociationType".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAAssociationTypeColumnsConfigWizardAdd(MElement this, String value) :
	hasTaggedValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardAdd(), value );

/**
 * Checks if an element has a value of the tagged value "columnsConfigWizardAdd" 
 * of the stereotype "T3TCAAssociationType" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAAssociationTypeUtilizableColumnsConfigWizardAdd(MElement this) :
	hasUtilizableValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardAdd() );

/**
 * Returns the value of the tagged value "columnsConfigWizardAdd"
 * of the stereotype "T3TCAAssociationType".
 *
 * @return the value of the tagged value
 */
String getT3TCAAssociationTypeColumnsConfigWizardAdd(MElement this) :
	getTaggedValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardAdd() );

/**
 * Sets the value of an existing the tagged value "columnsConfigWizardAdd"
 * of the stereotype "T3TCAAssociationType".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAAssociationTypeColumnsConfigWizardAdd(MElement this, String value) :
	setTaggedValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardAdd(), value );

/*
- - "columnsConfigWizardEdit" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "columnsConfigWizardEdit" 
 * of the stereotype "T3TCAAssociationType".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAAssociationTypeColumnsConfigWizardEdit(MElement this, String value) :
	hasTaggedValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardEdit(), value );

/**
 * Checks if an element has a value of the tagged value "columnsConfigWizardEdit" 
 * of the stereotype "T3TCAAssociationType" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAAssociationTypeUtilizableColumnsConfigWizardEdit(MElement this) :
	hasUtilizableValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardEdit() );

/**
 * Returns the value of the tagged value "columnsConfigWizardEdit"
 * of the stereotype "T3TCAAssociationType".
 *
 * @return the value of the tagged value
 */
String getT3TCAAssociationTypeColumnsConfigWizardEdit(MElement this) :
	getTaggedValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardEdit() );

/**
 * Sets the value of an existing the tagged value "columnsConfigWizardEdit"
 * of the stereotype "T3TCAAssociationType".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAAssociationTypeColumnsConfigWizardEdit(MElement this, String value) :
	setTaggedValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardEdit(), value );

/*
- - "columnsConfigWizardSuggest" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "columnsConfigWizardSuggest" 
 * of the stereotype "T3TCAAssociationType".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAAssociationTypeColumnsConfigWizardSuggest(MElement this, String value) :
	hasTaggedValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardSuggest(), value );

/**
 * Checks if an element has a value of the tagged value "columnsConfigWizardSuggest" 
 * of the stereotype "T3TCAAssociationType" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAAssociationTypeUtilizableColumnsConfigWizardSuggest(MElement this) :
	hasUtilizableValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardSuggest() );

/**
 * Returns the value of the tagged value "columnsConfigWizardSuggest"
 * of the stereotype "T3TCAAssociationType".
 *
 * @return the value of the tagged value
 */
String getT3TCAAssociationTypeColumnsConfigWizardSuggest(MElement this) :
	getTaggedValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardSuggest() );

/**
 * Sets the value of an existing the tagged value "columnsConfigWizardSuggest"
 * of the stereotype "T3TCAAssociationType".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAAssociationTypeColumnsConfigWizardSuggest(MElement this, String value) :
	setTaggedValue( prT3TCAAssociationType(), prT3TCAAssociationTypeColumnsConfigWizardSuggest(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCABooleanType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCABooleanType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCABooleanTypeStereotype(MElement this) :
	hasStereotype( prT3TCABooleanType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCACheckType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCACheckType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCACheckTypeStereotype(MElement this) :
	hasStereotype( prT3TCACheckType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAClass"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAClass".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAClassStereotype(MElement this) :
	hasStereotype( prT3TCAClass() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCAClass".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAClassTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCAClass(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCAClass".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCAClassTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCAClass(), tag, valueReference );
	
/*
- - "ctrlLabel" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "ctrlLabel" 
 * of the stereotype "T3TCAClass".
 *
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCAClassCtrlLabel(MElement this, MElement valueReference) :
	hasTaggedValue( prT3TCAClass(), prT3TCAClassCtrlLabel(), valueReference );

/**
 * Checks if an element has a value reference of the tagged value "ctrlLabel" 
 * of the stereotype "T3TCAClass" and the value reference is utilizable (not null).
 *
 * @return true if the element has a tagged value with a utilizable value reference, otherwise false
 */
boolean hasT3TCAClassUtilizableCtrlLabel(MElement this) :
	hasUtilizableValueReference( prT3TCAClass(), prT3TCAClassCtrlLabel() );

/**
 * Returns the value reference of the tagged value "ctrlLabel"
 * of the stereotype "T3TCAClass".
 *
 * @return the value reference of the tagged value
 */
MElement getT3TCAClassCtrlLabel(MElement this) :
	getTaggedValueReference( prT3TCAClass(), prT3TCAClassCtrlLabel() );

/**
 * Sets the value reference of an existing the tagged value "ctrlLabel"
 * of the stereotype "T3TCAClass".
 *
 * @param valueReference the new value reference of a tagged value
 */
Void setT3TCAClassCtrlLabel(MElement this, MElement valueReference) :
	setTaggedValue( prT3TCAClass(), prT3TCAClassCtrlLabel(), valueReference );

/*
- - "ctrlLabelAlt" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "ctrlLabelAlt" 
 * of the stereotype "T3TCAClass".
 *
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCAClassCtrlLabelAlt(MElement this, MElement valueReference) :
	hasTaggedValue( prT3TCAClass(), prT3TCAClassCtrlLabelAlt(), valueReference );

/**
 * Checks if an element has a value reference of the tagged value "ctrlLabelAlt" 
 * of the stereotype "T3TCAClass" and the value reference is utilizable (not null).
 *
 * @return true if the element has a tagged value with a utilizable value reference, otherwise false
 */
boolean hasT3TCAClassUtilizableCtrlLabelAlt(MElement this) :
	hasUtilizableValueReference( prT3TCAClass(), prT3TCAClassCtrlLabelAlt() );

/**
 * Returns a list of value references of the tagged value "ctrlLabelAlt"
 * of the stereotype "T3TCAClass".
 *
* @return the value references of the tagged value
 */
List[MElement] getT3TCAClassCtrlLabelAlt(MElement this) : 
	getTaggedValueReferenceList( prT3TCAClass(), prT3TCAClassCtrlLabelAlt() );

/**
 * Sets the value reference of an existing the tagged value "ctrlLabelAlt"
 * of the stereotype "T3TCAClass".
 *
 * @param valueReference the new value reference of a tagged value
 */
Void setT3TCAClassCtrlLabelAlt(MElement this, MElement valueReference) :
	setTaggedValue( prT3TCAClass(), prT3TCAClassCtrlLabelAlt(), valueReference );

/*
- - "ctrlLabelAltForce" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "ctrlLabelAltForce" 
 * of the stereotype "T3TCAClass".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAClassCtrlLabelAltForce(MElement this, String value) :
	hasTaggedValue( prT3TCAClass(), prT3TCAClassCtrlLabelAltForce(), value );

/**
 * Checks if an element has a value of the tagged value "ctrlLabelAltForce" 
 * of the stereotype "T3TCAClass" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAClassUtilizableCtrlLabelAltForce(MElement this) :
	hasUtilizableValue( prT3TCAClass(), prT3TCAClassCtrlLabelAltForce() );

/**
 * Returns the value of the tagged value "ctrlLabelAltForce"
 * of the stereotype "T3TCAClass".
 *
 * @return the value of the tagged value
 */
String getT3TCAClassCtrlLabelAltForce(MElement this) :
	getTaggedValue( prT3TCAClass(), prT3TCAClassCtrlLabelAltForce() );

/**
 * Sets the value of an existing the tagged value "ctrlLabelAltForce"
 * of the stereotype "T3TCAClass".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAClassCtrlLabelAltForce(MElement this, String value) :
	setTaggedValue( prT3TCAClass(), prT3TCAClassCtrlLabelAltForce(), value );

/*
- - "ctrlSectionAdditions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "ctrlSectionAdditions" 
 * of the stereotype "T3TCAClass".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAClassCtrlSectionAdditions(MElement this, String value) :
	hasTaggedValue( prT3TCAClass(), prT3TCAClassCtrlSectionAdditions(), value );

/**
 * Checks if an element has a value of the tagged value "ctrlSectionAdditions" 
 * of the stereotype "T3TCAClass" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAClassUtilizableCtrlSectionAdditions(MElement this) :
	hasUtilizableValue( prT3TCAClass(), prT3TCAClassCtrlSectionAdditions() );

/**
 * Returns a list of values of the tagged value "ctrlSectionAdditions"
 * of the stereotype "T3TCAClass".
 *
* @return the values of the tagged value
 */
List[String] getT3TCAClassCtrlSectionAdditions(MElement this) : 
	getTaggedValueList( prT3TCAClass(), prT3TCAClassCtrlSectionAdditions() );

/**
 * Sets the value of an existing the tagged value "ctrlSectionAdditions"
 * of the stereotype "T3TCAClass".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAClassCtrlSectionAdditions(MElement this, String value) :
	setTaggedValue( prT3TCAClass(), prT3TCAClassCtrlSectionAdditions(), value );

/*
- - "interfaceSectionAdditions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "interfaceSectionAdditions" 
 * of the stereotype "T3TCAClass".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAClassInterfaceSectionAdditions(MElement this, String value) :
	hasTaggedValue( prT3TCAClass(), prT3TCAClassInterfaceSectionAdditions(), value );

/**
 * Checks if an element has a value of the tagged value "interfaceSectionAdditions" 
 * of the stereotype "T3TCAClass" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAClassUtilizableInterfaceSectionAdditions(MElement this) :
	hasUtilizableValue( prT3TCAClass(), prT3TCAClassInterfaceSectionAdditions() );

/**
 * Returns a list of values of the tagged value "interfaceSectionAdditions"
 * of the stereotype "T3TCAClass".
 *
* @return the values of the tagged value
 */
List[String] getT3TCAClassInterfaceSectionAdditions(MElement this) : 
	getTaggedValueList( prT3TCAClass(), prT3TCAClassInterfaceSectionAdditions() );

/**
 * Sets the value of an existing the tagged value "interfaceSectionAdditions"
 * of the stereotype "T3TCAClass".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAClassInterfaceSectionAdditions(MElement this, String value) :
	setTaggedValue( prT3TCAClass(), prT3TCAClassInterfaceSectionAdditions(), value );

/*
- - "palettesSectionAdditions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "palettesSectionAdditions" 
 * of the stereotype "T3TCAClass".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAClassPalettesSectionAdditions(MElement this, String value) :
	hasTaggedValue( prT3TCAClass(), prT3TCAClassPalettesSectionAdditions(), value );

/**
 * Checks if an element has a value of the tagged value "palettesSectionAdditions" 
 * of the stereotype "T3TCAClass" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAClassUtilizablePalettesSectionAdditions(MElement this) :
	hasUtilizableValue( prT3TCAClass(), prT3TCAClassPalettesSectionAdditions() );

/**
 * Returns a list of values of the tagged value "palettesSectionAdditions"
 * of the stereotype "T3TCAClass".
 *
* @return the values of the tagged value
 */
List[String] getT3TCAClassPalettesSectionAdditions(MElement this) : 
	getTaggedValueList( prT3TCAClass(), prT3TCAClassPalettesSectionAdditions() );

/**
 * Sets the value of an existing the tagged value "palettesSectionAdditions"
 * of the stereotype "T3TCAClass".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAClassPalettesSectionAdditions(MElement this, String value) :
	setTaggedValue( prT3TCAClass(), prT3TCAClassPalettesSectionAdditions(), value );

/*
- - "typesSectionAdditions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "typesSectionAdditions" 
 * of the stereotype "T3TCAClass".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAClassTypesSectionAdditions(MElement this, String value) :
	hasTaggedValue( prT3TCAClass(), prT3TCAClassTypesSectionAdditions(), value );

/**
 * Checks if an element has a value of the tagged value "typesSectionAdditions" 
 * of the stereotype "T3TCAClass" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAClassUtilizableTypesSectionAdditions(MElement this) :
	hasUtilizableValue( prT3TCAClass(), prT3TCAClassTypesSectionAdditions() );

/**
 * Returns a list of values of the tagged value "typesSectionAdditions"
 * of the stereotype "T3TCAClass".
 *
* @return the values of the tagged value
 */
List[String] getT3TCAClassTypesSectionAdditions(MElement this) : 
	getTaggedValueList( prT3TCAClass(), prT3TCAClassTypesSectionAdditions() );

/**
 * Sets the value of an existing the tagged value "typesSectionAdditions"
 * of the stereotype "T3TCAClass".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAClassTypesSectionAdditions(MElement this, String value) :
	setTaggedValue( prT3TCAClass(), prT3TCAClassTypesSectionAdditions(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCADatabaseType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCADatabaseType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCADatabaseTypeStereotype(MElement this) :
	hasStereotype( prT3TCADatabaseType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCADateTimeType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCADateTimeType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCADateTimeTypeStereotype(MElement this) :
	hasStereotype( prT3TCADateTimeType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAFileReferenceType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAFileReferenceType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAFileReferenceTypeStereotype(MElement this) :
	hasStereotype( prT3TCAFileReferenceType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAFileType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAFileType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAFileTypeStereotype(MElement this) :
	hasStereotype( prT3TCAFileType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAFloatType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAFloatType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAFloatTypeStereotype(MElement this) :
	hasStereotype( prT3TCAFloatType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAFolderType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAFolderType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAFolderTypeStereotype(MElement this) :
	hasStereotype( prT3TCAFolderType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAImageReferenceType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAImageReferenceType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAImageReferenceTypeStereotype(MElement this) :
	hasStereotype( prT3TCAImageReferenceType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAImageType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAImageType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAImageTypeStereotype(MElement this) :
	hasStereotype( prT3TCAImageType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAInputType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAInputType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAInputTypeStereotype(MElement this) :
	hasStereotype( prT3TCAInputType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAIntegerType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAIntegerType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAIntegerTypeStereotype(MElement this) :
	hasStereotype( prT3TCAIntegerType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCANoneType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCANoneType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCANoneTypeStereotype(MElement this) :
	hasStereotype( prT3TCANoneType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAOtherType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAOtherType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAOtherTypeStereotype(MElement this) :
	hasStereotype( prT3TCAOtherType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAProperty"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAProperty".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAPropertyStereotype(MElement this) :
	hasStereotype( prT3TCAProperty() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCAProperty".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAPropertyTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCAProperty(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCAProperty".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCAPropertyTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCAProperty(), tag, valueReference );
	
/*
- - "columnsConfigAdditions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "columnsConfigAdditions" 
 * of the stereotype "T3TCAProperty".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAPropertyColumnsConfigAdditions(MElement this, String value) :
	hasTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsConfigAdditions(), value );

/**
 * Checks if an element has a value of the tagged value "columnsConfigAdditions" 
 * of the stereotype "T3TCAProperty" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAPropertyUtilizableColumnsConfigAdditions(MElement this) :
	hasUtilizableValue( prT3TCAProperty(), prT3TCAPropertyColumnsConfigAdditions() );

/**
 * Returns a list of values of the tagged value "columnsConfigAdditions"
 * of the stereotype "T3TCAProperty".
 *
* @return the values of the tagged value
 */
List[String] getT3TCAPropertyColumnsConfigAdditions(MElement this) : 
	getTaggedValueList( prT3TCAProperty(), prT3TCAPropertyColumnsConfigAdditions() );

/**
 * Sets the value of an existing the tagged value "columnsConfigAdditions"
 * of the stereotype "T3TCAProperty".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAPropertyColumnsConfigAdditions(MElement this, String value) :
	setTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsConfigAdditions(), value );

/*
- - "columnsDefaultExtras" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "columnsDefaultExtras" 
 * of the stereotype "T3TCAProperty".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAPropertyColumnsDefaultExtras(MElement this, String value) :
	hasTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsDefaultExtras(), value );

/**
 * Checks if an element has a value of the tagged value "columnsDefaultExtras" 
 * of the stereotype "T3TCAProperty" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAPropertyUtilizableColumnsDefaultExtras(MElement this) :
	hasUtilizableValue( prT3TCAProperty(), prT3TCAPropertyColumnsDefaultExtras() );

/**
 * Returns the value of the tagged value "columnsDefaultExtras"
 * of the stereotype "T3TCAProperty".
 *
 * @return the value of the tagged value
 */
String getT3TCAPropertyColumnsDefaultExtras(MElement this) :
	getTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsDefaultExtras() );

/**
 * Sets the value of an existing the tagged value "columnsDefaultExtras"
 * of the stereotype "T3TCAProperty".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAPropertyColumnsDefaultExtras(MElement this, String value) :
	setTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsDefaultExtras(), value );

/*
- - "columnsExclude" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "columnsExclude" 
 * of the stereotype "T3TCAProperty".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAPropertyColumnsExclude(MElement this, String value) :
	hasTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsExclude(), value );

/**
 * Checks if an element has a value of the tagged value "columnsExclude" 
 * of the stereotype "T3TCAProperty" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAPropertyUtilizableColumnsExclude(MElement this) :
	hasUtilizableValue( prT3TCAProperty(), prT3TCAPropertyColumnsExclude() );

/**
 * Returns the value of the tagged value "columnsExclude"
 * of the stereotype "T3TCAProperty".
 *
 * @return the value of the tagged value
 */
String getT3TCAPropertyColumnsExclude(MElement this) :
	getTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsExclude() );

/**
 * Sets the value of an existing the tagged value "columnsExclude"
 * of the stereotype "T3TCAProperty".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAPropertyColumnsExclude(MElement this, String value) :
	setTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsExclude(), value );

/*
- - "columnsSectionAdditions" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "columnsSectionAdditions" 
 * of the stereotype "T3TCAProperty".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAPropertyColumnsSectionAdditions(MElement this, String value) :
	hasTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsSectionAdditions(), value );

/**
 * Checks if an element has a value of the tagged value "columnsSectionAdditions" 
 * of the stereotype "T3TCAProperty" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAPropertyUtilizableColumnsSectionAdditions(MElement this) :
	hasUtilizableValue( prT3TCAProperty(), prT3TCAPropertyColumnsSectionAdditions() );

/**
 * Returns a list of values of the tagged value "columnsSectionAdditions"
 * of the stereotype "T3TCAProperty".
 *
* @return the values of the tagged value
 */
List[String] getT3TCAPropertyColumnsSectionAdditions(MElement this) : 
	getTaggedValueList( prT3TCAProperty(), prT3TCAPropertyColumnsSectionAdditions() );

/**
 * Sets the value of an existing the tagged value "columnsSectionAdditions"
 * of the stereotype "T3TCAProperty".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAPropertyColumnsSectionAdditions(MElement this, String value) :
	setTaggedValue( prT3TCAProperty(), prT3TCAPropertyColumnsSectionAdditions(), value );

/*
- - "typesAltLabel" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "typesAltLabel" 
 * of the stereotype "T3TCAProperty".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAPropertyTypesAltLabel(MElement this, String value) :
	hasTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesAltLabel(), value );

/**
 * Checks if an element has a value of the tagged value "typesAltLabel" 
 * of the stereotype "T3TCAProperty" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAPropertyUtilizableTypesAltLabel(MElement this) :
	hasUtilizableValue( prT3TCAProperty(), prT3TCAPropertyTypesAltLabel() );

/**
 * Returns the value of the tagged value "typesAltLabel"
 * of the stereotype "T3TCAProperty".
 *
 * @return the value of the tagged value
 */
String getT3TCAPropertyTypesAltLabel(MElement this) :
	getTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesAltLabel() );

/**
 * Sets the value of an existing the tagged value "typesAltLabel"
 * of the stereotype "T3TCAProperty".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAPropertyTypesAltLabel(MElement this, String value) :
	setTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesAltLabel(), value );

/*
- - "typesFormStyleCodes" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "typesFormStyleCodes" 
 * of the stereotype "T3TCAProperty".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAPropertyTypesFormStyleCodes(MElement this, String value) :
	hasTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesFormStyleCodes(), value );

/**
 * Checks if an element has a value of the tagged value "typesFormStyleCodes" 
 * of the stereotype "T3TCAProperty" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAPropertyUtilizableTypesFormStyleCodes(MElement this) :
	hasUtilizableValue( prT3TCAProperty(), prT3TCAPropertyTypesFormStyleCodes() );

/**
 * Returns the value of the tagged value "typesFormStyleCodes"
 * of the stereotype "T3TCAProperty".
 *
 * @return the value of the tagged value
 */
String getT3TCAPropertyTypesFormStyleCodes(MElement this) :
	getTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesFormStyleCodes() );

/**
 * Sets the value of an existing the tagged value "typesFormStyleCodes"
 * of the stereotype "T3TCAProperty".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAPropertyTypesFormStyleCodes(MElement this, String value) :
	setTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesFormStyleCodes(), value );

/*
- - "typesPaletteNumber" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "typesPaletteNumber" 
 * of the stereotype "T3TCAProperty".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAPropertyTypesPaletteNumber(MElement this, String value) :
	hasTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesPaletteNumber(), value );

/**
 * Checks if an element has a value of the tagged value "typesPaletteNumber" 
 * of the stereotype "T3TCAProperty" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAPropertyUtilizableTypesPaletteNumber(MElement this) :
	hasUtilizableValue( prT3TCAProperty(), prT3TCAPropertyTypesPaletteNumber() );

/**
 * Returns the value of the tagged value "typesPaletteNumber"
 * of the stereotype "T3TCAProperty".
 *
 * @return the value of the tagged value
 */
String getT3TCAPropertyTypesPaletteNumber(MElement this) :
	getTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesPaletteNumber() );

/**
 * Sets the value of an existing the tagged value "typesPaletteNumber"
 * of the stereotype "T3TCAProperty".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAPropertyTypesPaletteNumber(MElement this, String value) :
	setTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesPaletteNumber(), value );

/*
- - "typesSpecialConfiguration" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "typesSpecialConfiguration" 
 * of the stereotype "T3TCAProperty".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCAPropertyTypesSpecialConfiguration(MElement this, String value) :
	hasTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesSpecialConfiguration(), value );

/**
 * Checks if an element has a value of the tagged value "typesSpecialConfiguration" 
 * of the stereotype "T3TCAProperty" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCAPropertyUtilizableTypesSpecialConfiguration(MElement this) :
	hasUtilizableValue( prT3TCAProperty(), prT3TCAPropertyTypesSpecialConfiguration() );

/**
 * Returns the value of the tagged value "typesSpecialConfiguration"
 * of the stereotype "T3TCAProperty".
 *
 * @return the value of the tagged value
 */
String getT3TCAPropertyTypesSpecialConfiguration(MElement this) :
	getTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesSpecialConfiguration() );

/**
 * Sets the value of an existing the tagged value "typesSpecialConfiguration"
 * of the stereotype "T3TCAProperty".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCAPropertyTypesSpecialConfiguration(MElement this, String value) :
	setTaggedValue( prT3TCAProperty(), prT3TCAPropertyTypesSpecialConfiguration(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCARadioType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCARadioType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCARadioTypeStereotype(MElement this) :
	hasStereotype( prT3TCARadioType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCASelectType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCASelectType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCASelectTypeStereotype(MElement this) :
	hasStereotype( prT3TCASelectType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCAStringType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCAStringType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCAStringTypeStereotype(MElement this) :
	hasStereotype( prT3TCAStringType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCATextType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCATextType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCATextTypeStereotype(MElement this) :
	hasStereotype( prT3TCATextType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEBooleanType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEBooleanType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEBooleanTypeStereotype(MElement this) :
	hasStereotype( prT3TCEBooleanType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCECheckType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCECheckType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCECheckTypeStereotype(MElement this) :
	hasStereotype( prT3TCECheckType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEDatabaseType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEDatabaseType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEDatabaseTypeStereotype(MElement this) :
	hasStereotype( prT3TCEDatabaseType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEDateTimeType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEDateTimeType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEDateTimeTypeStereotype(MElement this) :
	hasStereotype( prT3TCEDateTimeType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEFileReferenceType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEFileReferenceType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEFileReferenceTypeStereotype(MElement this) :
	hasStereotype( prT3TCEFileReferenceType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEFileType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEFileType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEFileTypeStereotype(MElement this) :
	hasStereotype( prT3TCEFileType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEFloatType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEFloatType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEFloatTypeStereotype(MElement this) :
	hasStereotype( prT3TCEFloatType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEFolderType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEFolderType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEFolderTypeStereotype(MElement this) :
	hasStereotype( prT3TCEFolderType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEImageReferenceType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEImageReferenceType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEImageReferenceTypeStereotype(MElement this) :
	hasStereotype( prT3TCEImageReferenceType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEImageType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEImageType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEImageTypeStereotype(MElement this) :
	hasStereotype( prT3TCEImageType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEInputType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEInputType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEInputTypeStereotype(MElement this) :
	hasStereotype( prT3TCEInputType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEIntegerType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEIntegerType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEIntegerTypeStereotype(MElement this) :
	hasStereotype( prT3TCEIntegerType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCENoneType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCENoneType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCENoneTypeStereotype(MElement this) :
	hasStereotype( prT3TCENoneType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEOption"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEOption".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEOptionStereotype(MElement this) :
	hasStereotype( prT3TCEOption() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCEOption".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCEOptionTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCEOption(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCEOption".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCEOptionTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCEOption(), tag, valueReference );
	
/*
- - "sheet" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "sheet" 
 * of the stereotype "T3TCEOption".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCEOptionSheet(MElement this, String value) :
	hasTaggedValue( prT3TCEOption(), prT3TCEOptionSheet(), value );

/**
 * Checks if an element has a value of the tagged value "sheet" 
 * of the stereotype "T3TCEOption" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCEOptionUtilizableSheet(MElement this) :
	hasUtilizableValue( prT3TCEOption(), prT3TCEOptionSheet() );

/**
 * Returns the value of the tagged value "sheet"
 * of the stereotype "T3TCEOption".
 *
 * @return the value of the tagged value
 */
String getT3TCEOptionSheet(MElement this) :
	getTaggedValue( prT3TCEOption(), prT3TCEOptionSheet() );

/**
 * Sets the value of an existing the tagged value "sheet"
 * of the stereotype "T3TCEOption".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCEOptionSheet(MElement this, String value) :
	setTaggedValue( prT3TCEOption(), prT3TCEOptionSheet(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEOtherType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEOtherType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEOtherTypeStereotype(MElement this) :
	hasStereotype( prT3TCEOtherType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCERadioType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCERadioType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCERadioTypeStereotype(MElement this) :
	hasStereotype( prT3TCERadioType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCESelectType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCESelectType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCESelectTypeStereotype(MElement this) :
	hasStereotype( prT3TCESelectType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCEStringType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCEStringType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCEStringTypeStereotype(MElement this) :
	hasStereotype( prT3TCEStringType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCETextType"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCETextType".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCETextTypeStereotype(MElement this) :
	hasStereotype( prT3TCETextType() );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxAllowed"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxAllowed".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxAllowedStereotype(MElement this) :
	hasStereotype( prT3TCxAllowed() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxAllowed".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxAllowedTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxAllowed(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxAllowed".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxAllowedTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxAllowed(), tag, valueReference );
	
/*
- - "allowed" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "allowed" 
 * of the stereotype "T3TCxAllowed".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxAllowedAllowed(MElement this, String value) :
	hasTaggedValue( prT3TCxAllowed(), prT3TCxAllowedAllowed(), value );

/**
 * Checks if an element has a value of the tagged value "allowed" 
 * of the stereotype "T3TCxAllowed" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxAllowedUtilizableAllowed(MElement this) :
	hasUtilizableValue( prT3TCxAllowed(), prT3TCxAllowedAllowed() );

/**
 * Returns the value of the tagged value "allowed"
 * of the stereotype "T3TCxAllowed".
 *
 * @return the value of the tagged value
 */
String getT3TCxAllowedAllowed(MElement this) :
	getTaggedValue( prT3TCxAllowed(), prT3TCxAllowedAllowed() );

/**
 * Sets the value of an existing the tagged value "allowed"
 * of the stereotype "T3TCxAllowed".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxAllowedAllowed(MElement this, String value) :
	setTaggedValue( prT3TCxAllowed(), prT3TCxAllowedAllowed(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxAutoSizeMax"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxAutoSizeMax".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxAutoSizeMaxStereotype(MElement this) :
	hasStereotype( prT3TCxAutoSizeMax() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxAutoSizeMax".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxAutoSizeMaxTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxAutoSizeMax(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxAutoSizeMax".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxAutoSizeMaxTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxAutoSizeMax(), tag, valueReference );
	
/*
- - "autoSizeMax" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "autoSizeMax" 
 * of the stereotype "T3TCxAutoSizeMax".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxAutoSizeMaxAutoSizeMax(MElement this, String value) :
	hasTaggedValue( prT3TCxAutoSizeMax(), prT3TCxAutoSizeMaxAutoSizeMax(), value );

/**
 * Checks if an element has a value of the tagged value "autoSizeMax" 
 * of the stereotype "T3TCxAutoSizeMax" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxAutoSizeMaxUtilizableAutoSizeMax(MElement this) :
	hasUtilizableValue( prT3TCxAutoSizeMax(), prT3TCxAutoSizeMaxAutoSizeMax() );

/**
 * Returns the value of the tagged value "autoSizeMax"
 * of the stereotype "T3TCxAutoSizeMax".
 *
 * @return the value of the tagged value
 */
String getT3TCxAutoSizeMaxAutoSizeMax(MElement this) :
	getTaggedValue( prT3TCxAutoSizeMax(), prT3TCxAutoSizeMaxAutoSizeMax() );

/**
 * Sets the value of an existing the tagged value "autoSizeMax"
 * of the stereotype "T3TCxAutoSizeMax".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxAutoSizeMaxAutoSizeMax(MElement this, String value) :
	setTaggedValue( prT3TCxAutoSizeMax(), prT3TCxAutoSizeMaxAutoSizeMax(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxCols"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxCols".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxColsStereotype(MElement this) :
	hasStereotype( prT3TCxCols() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxCols".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxColsTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxCols(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxCols".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxColsTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxCols(), tag, valueReference );
	
/*
- - "cols" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "cols" 
 * of the stereotype "T3TCxCols".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxColsCols(MElement this, String value) :
	hasTaggedValue( prT3TCxCols(), prT3TCxColsCols(), value );

/**
 * Checks if an element has a value of the tagged value "cols" 
 * of the stereotype "T3TCxCols" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxColsUtilizableCols(MElement this) :
	hasUtilizableValue( prT3TCxCols(), prT3TCxColsCols() );

/**
 * Returns the value of the tagged value "cols"
 * of the stereotype "T3TCxCols".
 *
 * @return the value of the tagged value
 */
String getT3TCxColsCols(MElement this) :
	getTaggedValue( prT3TCxCols(), prT3TCxColsCols() );

/**
 * Sets the value of an existing the tagged value "cols"
 * of the stereotype "T3TCxCols".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxColsCols(MElement this, String value) :
	setTaggedValue( prT3TCxCols(), prT3TCxColsCols(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxDisallowed"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxDisallowed".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxDisallowedStereotype(MElement this) :
	hasStereotype( prT3TCxDisallowed() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxDisallowed".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxDisallowedTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxDisallowed(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxDisallowed".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxDisallowedTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxDisallowed(), tag, valueReference );
	
/*
- - "disallowed" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "disallowed" 
 * of the stereotype "T3TCxDisallowed".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxDisallowedDisallowed(MElement this, String value) :
	hasTaggedValue( prT3TCxDisallowed(), prT3TCxDisallowedDisallowed(), value );

/**
 * Checks if an element has a value of the tagged value "disallowed" 
 * of the stereotype "T3TCxDisallowed" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxDisallowedUtilizableDisallowed(MElement this) :
	hasUtilizableValue( prT3TCxDisallowed(), prT3TCxDisallowedDisallowed() );

/**
 * Returns the value of the tagged value "disallowed"
 * of the stereotype "T3TCxDisallowed".
 *
 * @return the value of the tagged value
 */
String getT3TCxDisallowedDisallowed(MElement this) :
	getTaggedValue( prT3TCxDisallowed(), prT3TCxDisallowedDisallowed() );

/**
 * Sets the value of an existing the tagged value "disallowed"
 * of the stereotype "T3TCxDisallowed".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxDisallowedDisallowed(MElement this, String value) :
	setTaggedValue( prT3TCxDisallowed(), prT3TCxDisallowedDisallowed(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxEval"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxEval".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxEvalStereotype(MElement this) :
	hasStereotype( prT3TCxEval() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxEval".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxEvalTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxEval(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxEval".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxEvalTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxEval(), tag, valueReference );
	
/*
- - "evals" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "evals" 
 * of the stereotype "T3TCxEval".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxEvalEvals(MElement this, String value) :
	hasTaggedValue( prT3TCxEval(), prT3TCxEvalEvals(), value );

/**
 * Checks if an element has a value of the tagged value "evals" 
 * of the stereotype "T3TCxEval" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxEvalUtilizableEvals(MElement this) :
	hasUtilizableValue( prT3TCxEval(), prT3TCxEvalEvals() );

/**
 * Returns a list of values of the tagged value "evals"
 * of the stereotype "T3TCxEval".
 *
* @return the values of the tagged value
 */
List[String] getT3TCxEvalEvals(MElement this) : 
	getTaggedValueList( prT3TCxEval(), prT3TCxEvalEvals() );

/**
 * Sets the value of an existing the tagged value "evals"
 * of the stereotype "T3TCxEval".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxEvalEvals(MElement this, String value) :
	setTaggedValue( prT3TCxEval(), prT3TCxEvalEvals(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxItems"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxItems".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxItemsStereotype(MElement this) :
	hasStereotype( prT3TCxItems() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxItems".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxItemsTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxItems(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxItems".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxItemsTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxItems(), tag, valueReference );
	
/*
- - "items" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "items" 
 * of the stereotype "T3TCxItems".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxItemsItems(MElement this, String value) :
	hasTaggedValue( prT3TCxItems(), prT3TCxItemsItems(), value );

/**
 * Checks if an element has a value of the tagged value "items" 
 * of the stereotype "T3TCxItems" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxItemsUtilizableItems(MElement this) :
	hasUtilizableValue( prT3TCxItems(), prT3TCxItemsItems() );

/**
 * Returns a list of values of the tagged value "items"
 * of the stereotype "T3TCxItems".
 *
* @return the values of the tagged value
 */
List[String] getT3TCxItemsItems(MElement this) : 
	getTaggedValueList( prT3TCxItems(), prT3TCxItemsItems() );

/**
 * Sets the value of an existing the tagged value "items"
 * of the stereotype "T3TCxItems".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxItemsItems(MElement this, String value) :
	setTaggedValue( prT3TCxItems(), prT3TCxItemsItems(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxMax"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxMax".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxMaxStereotype(MElement this) :
	hasStereotype( prT3TCxMax() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxMax".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxMaxTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxMax(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxMax".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxMaxTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxMax(), tag, valueReference );
	
/*
- - "max" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "max" 
 * of the stereotype "T3TCxMax".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxMaxMax(MElement this, String value) :
	hasTaggedValue( prT3TCxMax(), prT3TCxMaxMax(), value );

/**
 * Checks if an element has a value of the tagged value "max" 
 * of the stereotype "T3TCxMax" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxMaxUtilizableMax(MElement this) :
	hasUtilizableValue( prT3TCxMax(), prT3TCxMaxMax() );

/**
 * Returns the value of the tagged value "max"
 * of the stereotype "T3TCxMax".
 *
 * @return the value of the tagged value
 */
String getT3TCxMaxMax(MElement this) :
	getTaggedValue( prT3TCxMax(), prT3TCxMaxMax() );

/**
 * Sets the value of an existing the tagged value "max"
 * of the stereotype "T3TCxMax".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxMaxMax(MElement this, String value) :
	setTaggedValue( prT3TCxMax(), prT3TCxMaxMax(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxMaxSize"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxMaxSize".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxMaxSizeStereotype(MElement this) :
	hasStereotype( prT3TCxMaxSize() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxMaxSize".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxMaxSizeTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxMaxSize(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxMaxSize".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxMaxSizeTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxMaxSize(), tag, valueReference );
	
/*
- - "maxSize" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "maxSize" 
 * of the stereotype "T3TCxMaxSize".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxMaxSizeMaxSize(MElement this, String value) :
	hasTaggedValue( prT3TCxMaxSize(), prT3TCxMaxSizeMaxSize(), value );

/**
 * Checks if an element has a value of the tagged value "maxSize" 
 * of the stereotype "T3TCxMaxSize" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxMaxSizeUtilizableMaxSize(MElement this) :
	hasUtilizableValue( prT3TCxMaxSize(), prT3TCxMaxSizeMaxSize() );

/**
 * Returns the value of the tagged value "maxSize"
 * of the stereotype "T3TCxMaxSize".
 *
 * @return the value of the tagged value
 */
String getT3TCxMaxSizeMaxSize(MElement this) :
	getTaggedValue( prT3TCxMaxSize(), prT3TCxMaxSizeMaxSize() );

/**
 * Sets the value of an existing the tagged value "maxSize"
 * of the stereotype "T3TCxMaxSize".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxMaxSizeMaxSize(MElement this, String value) :
	setTaggedValue( prT3TCxMaxSize(), prT3TCxMaxSizeMaxSize(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxMaxitems"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxMaxitems".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxMaxitemsStereotype(MElement this) :
	hasStereotype( prT3TCxMaxitems() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxMaxitems".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxMaxitemsTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxMaxitems(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxMaxitems".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxMaxitemsTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxMaxitems(), tag, valueReference );
	
/*
- - "maxitems" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "maxitems" 
 * of the stereotype "T3TCxMaxitems".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxMaxitemsMaxitems(MElement this, String value) :
	hasTaggedValue( prT3TCxMaxitems(), prT3TCxMaxitemsMaxitems(), value );

/**
 * Checks if an element has a value of the tagged value "maxitems" 
 * of the stereotype "T3TCxMaxitems" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxMaxitemsUtilizableMaxitems(MElement this) :
	hasUtilizableValue( prT3TCxMaxitems(), prT3TCxMaxitemsMaxitems() );

/**
 * Returns the value of the tagged value "maxitems"
 * of the stereotype "T3TCxMaxitems".
 *
 * @return the value of the tagged value
 */
String getT3TCxMaxitemsMaxitems(MElement this) :
	getTaggedValue( prT3TCxMaxitems(), prT3TCxMaxitemsMaxitems() );

/**
 * Sets the value of an existing the tagged value "maxitems"
 * of the stereotype "T3TCxMaxitems".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxMaxitemsMaxitems(MElement this, String value) :
	setTaggedValue( prT3TCxMaxitems(), prT3TCxMaxitemsMaxitems(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxMinitems"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxMinitems".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxMinitemsStereotype(MElement this) :
	hasStereotype( prT3TCxMinitems() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxMinitems".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxMinitemsTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxMinitems(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxMinitems".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxMinitemsTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxMinitems(), tag, valueReference );
	
/*
- - "minitems" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "minitems" 
 * of the stereotype "T3TCxMinitems".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxMinitemsMinitems(MElement this, String value) :
	hasTaggedValue( prT3TCxMinitems(), prT3TCxMinitemsMinitems(), value );

/**
 * Checks if an element has a value of the tagged value "minitems" 
 * of the stereotype "T3TCxMinitems" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxMinitemsUtilizableMinitems(MElement this) :
	hasUtilizableValue( prT3TCxMinitems(), prT3TCxMinitemsMinitems() );

/**
 * Returns the value of the tagged value "minitems"
 * of the stereotype "T3TCxMinitems".
 *
 * @return the value of the tagged value
 */
String getT3TCxMinitemsMinitems(MElement this) :
	getTaggedValue( prT3TCxMinitems(), prT3TCxMinitemsMinitems() );

/**
 * Sets the value of an existing the tagged value "minitems"
 * of the stereotype "T3TCxMinitems".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxMinitemsMinitems(MElement this, String value) :
	setTaggedValue( prT3TCxMinitems(), prT3TCxMinitemsMinitems(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxPrependTname"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxPrependTname".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxPrependTnameStereotype(MElement this) :
	hasStereotype( prT3TCxPrependTname() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxPrependTname".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxPrependTnameTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxPrependTname(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxPrependTname".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxPrependTnameTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxPrependTname(), tag, valueReference );
	
/*
- - "prependTname" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "prependTname" 
 * of the stereotype "T3TCxPrependTname".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxPrependTnamePrependTname(MElement this, String value) :
	hasTaggedValue( prT3TCxPrependTname(), prT3TCxPrependTnamePrependTname(), value );

/**
 * Checks if an element has a value of the tagged value "prependTname" 
 * of the stereotype "T3TCxPrependTname" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxPrependTnameUtilizablePrependTname(MElement this) :
	hasUtilizableValue( prT3TCxPrependTname(), prT3TCxPrependTnamePrependTname() );

/**
 * Returns the value of the tagged value "prependTname"
 * of the stereotype "T3TCxPrependTname".
 *
 * @return the value of the tagged value
 */
String getT3TCxPrependTnamePrependTname(MElement this) :
	getTaggedValue( prT3TCxPrependTname(), prT3TCxPrependTnamePrependTname() );

/**
 * Sets the value of an existing the tagged value "prependTname"
 * of the stereotype "T3TCxPrependTname".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxPrependTnamePrependTname(MElement this, String value) :
	setTaggedValue( prT3TCxPrependTname(), prT3TCxPrependTnamePrependTname(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxRows"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxRows".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxRowsStereotype(MElement this) :
	hasStereotype( prT3TCxRows() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxRows".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxRowsTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxRows(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxRows".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxRowsTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxRows(), tag, valueReference );
	
/*
- - "rows" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "rows" 
 * of the stereotype "T3TCxRows".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxRowsRows(MElement this, String value) :
	hasTaggedValue( prT3TCxRows(), prT3TCxRowsRows(), value );

/**
 * Checks if an element has a value of the tagged value "rows" 
 * of the stereotype "T3TCxRows" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxRowsUtilizableRows(MElement this) :
	hasUtilizableValue( prT3TCxRows(), prT3TCxRowsRows() );

/**
 * Returns the value of the tagged value "rows"
 * of the stereotype "T3TCxRows".
 *
 * @return the value of the tagged value
 */
String getT3TCxRowsRows(MElement this) :
	getTaggedValue( prT3TCxRows(), prT3TCxRowsRows() );

/**
 * Sets the value of an existing the tagged value "rows"
 * of the stereotype "T3TCxRows".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxRowsRows(MElement this, String value) :
	setTaggedValue( prT3TCxRows(), prT3TCxRowsRows(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxShowThumbs"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxShowThumbs".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxShowThumbsStereotype(MElement this) :
	hasStereotype( prT3TCxShowThumbs() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxShowThumbs".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxShowThumbsTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxShowThumbs(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxShowThumbs".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxShowThumbsTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxShowThumbs(), tag, valueReference );
	
/*
- - "showThumbs" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "showThumbs" 
 * of the stereotype "T3TCxShowThumbs".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxShowThumbsShowThumbs(MElement this, String value) :
	hasTaggedValue( prT3TCxShowThumbs(), prT3TCxShowThumbsShowThumbs(), value );

/**
 * Checks if an element has a value of the tagged value "showThumbs" 
 * of the stereotype "T3TCxShowThumbs" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxShowThumbsUtilizableShowThumbs(MElement this) :
	hasUtilizableValue( prT3TCxShowThumbs(), prT3TCxShowThumbsShowThumbs() );

/**
 * Returns the value of the tagged value "showThumbs"
 * of the stereotype "T3TCxShowThumbs".
 *
 * @return the value of the tagged value
 */
String getT3TCxShowThumbsShowThumbs(MElement this) :
	getTaggedValue( prT3TCxShowThumbs(), prT3TCxShowThumbsShowThumbs() );

/**
 * Sets the value of an existing the tagged value "showThumbs"
 * of the stereotype "T3TCxShowThumbs".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxShowThumbsShowThumbs(MElement this, String value) :
	setTaggedValue( prT3TCxShowThumbs(), prT3TCxShowThumbsShowThumbs(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxSize"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxSize".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxSizeStereotype(MElement this) :
	hasStereotype( prT3TCxSize() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxSize".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxSizeTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxSize(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxSize".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxSizeTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxSize(), tag, valueReference );
	
/*
- - "size" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "size" 
 * of the stereotype "T3TCxSize".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxSizeSize(MElement this, String value) :
	hasTaggedValue( prT3TCxSize(), prT3TCxSizeSize(), value );

/**
 * Checks if an element has a value of the tagged value "size" 
 * of the stereotype "T3TCxSize" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxSizeUtilizableSize(MElement this) :
	hasUtilizableValue( prT3TCxSize(), prT3TCxSizeSize() );

/**
 * Returns the value of the tagged value "size"
 * of the stereotype "T3TCxSize".
 *
 * @return the value of the tagged value
 */
String getT3TCxSizeSize(MElement this) :
	getTaggedValue( prT3TCxSize(), prT3TCxSizeSize() );

/**
 * Sets the value of an existing the tagged value "size"
 * of the stereotype "T3TCxSize".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxSizeSize(MElement this, String value) :
	setTaggedValue( prT3TCxSize(), prT3TCxSizeSize(), value );

/*
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Xtend scripts for stereotype "T3TCxUploadfolder"
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*/

/**
 * Checks if an element is annotated with stereotype "T3TCxUploadfolder".
 * 
 * @return true if the element has the stereotype, otherwise false
 */
boolean hasT3TCxUploadfolderStereotype(MElement this) :
	hasStereotype( prT3TCxUploadfolder() );

/**
 * Checks if an element has a value of a specific tagged value 
 * of the stereotype "T3TCxUploadfolder".
 *
 * @param tag  the name of a tagged value
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxUploadfolderTaggedValue(MElement this, String tag, String value) :
	hasTaggedValue( prT3TCxUploadfolder(), tag, value );
	
/**
 * Checks if an element has a value reference of a specific tagged value 
 * of the stereotype "T3TCxUploadfolder".
 *
 * @param tag  the name of a tagged value
 * @param valueReference  the value reference of a tagged value
 * @return true if the element has a tagged value with the given value reference, otherwise false
 */
boolean hasT3TCxUploadfolderTaggedValue(MElement this, String tag, MElement valueReference) :
	hasTaggedValue( prT3TCxUploadfolder(), tag, valueReference );
	
/*
- - "uploadfolder" - - - - - - - - - -
*/
	
/**
 * Checks if an element has a value of the tagged value "uploadfolder" 
 * of the stereotype "T3TCxUploadfolder".
 *
 * @param value  the value of a tagged value
 * @return true if the element has a tagged value with the given value, otherwise false
 */
boolean hasT3TCxUploadfolderUploadfolder(MElement this, String value) :
	hasTaggedValue( prT3TCxUploadfolder(), prT3TCxUploadfolderUploadfolder(), value );

/**
 * Checks if an element has a value of the tagged value "uploadfolder" 
 * of the stereotype "T3TCxUploadfolder" and the value is utilizable (not empty or null).
 *
 * @return true if the element has a tagged value with a utilizable value, otherwise false
 */
boolean hasT3TCxUploadfolderUtilizableUploadfolder(MElement this) :
	hasUtilizableValue( prT3TCxUploadfolder(), prT3TCxUploadfolderUploadfolder() );

/**
 * Returns the value of the tagged value "uploadfolder"
 * of the stereotype "T3TCxUploadfolder".
 *
 * @return the value of the tagged value
 */
String getT3TCxUploadfolderUploadfolder(MElement this) :
	getTaggedValue( prT3TCxUploadfolder(), prT3TCxUploadfolderUploadfolder() );

/**
 * Sets the value of an existing the tagged value "uploadfolder"
 * of the stereotype "T3TCxUploadfolder".
 *
 * @param value the new value of a tagged value
 */
Void setT3TCxUploadfolderUploadfolder(MElement this, String value) :
	setTaggedValue( prT3TCxUploadfolder(), prT3TCxUploadfolderUploadfolder(), value );

