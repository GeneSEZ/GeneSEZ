// import genesezMM meta model
import genesezMM;

extension de::genesez::java::helper::Helper;
extension de::genesez::io::io;

////////////////////////////////////////////////////////////////////////////////
// public extend functions
////////////////////////////////////////////////////////////////////////////////

// save name of persistent class for later use
Void rememberHibernateClassForMapping(String name) :
	JAVA de.genesez.java.helper.GlobalStore.addHibernateClass(java.lang.String);

// retrieve list of names of persistent classes
List classToMap() :
	JAVA de.genesez.java.helper.GlobalStore.getHibernateClasses();
	
// find key column(s) for collection mapping
List collectionKey(MClass c) :
	let keys = c.property.typeSelect(MAttribute).select(a|a.hasStereotype("key")) :
		keys.isEmpty ?
			c.findKey()
		: 	keys
		;

// find hibernate key attribute in inheritance hierarchie
List findKey(MClass c) :
	let k = c.property.typeSelect(MAttribute).select(a|a.hasAspect("persistent", "id")) :
		!k.isEmpty ? k :
			(c.supertype.typeSelect(MClass).isEmpty ? null :
				c.supertype.typeSelect(MClass).first().findKey());