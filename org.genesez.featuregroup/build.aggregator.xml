<?xml version="1.0" encoding="UTF-8"?>
<!--
	Aggregates the p2 repositories with GeneSEZ dependencies and publishs the aggregated onto the update site.
	
	@author	toh
-->
<project name="org.genesez.p2aggregator" default="publish.aggregated.repo">
	
	<import file="lib/antcontrib.xml" />
	<import file="lib/xmltask.xml" />
	<import file="build.xml" />
	<property environment="env" />
	
	
	<condition property="publish.dir" value="${PUBLISH_TRUNK_DIR}/${plugin.version}" else="${PUBLISH_TAGS_DIR}/${plugin.version}">
		<contains string="${SCM_PATH}" substring="trunk" />
	</condition>
	<condition property="b3aggr.file" value="genesez.development.repository.b3aggr" else="genesez.release.repository.b3aggr">
		<contains string="${SCM_PATH}" substring="trunk" />
	</condition>
	<property name="reponame" value="AggRepo" />
	<condition property="aggregated.publish.dir" value="${GENESEZ_DEVELOPMENT_REPO_DIR}" else="${GENESEZ_RELEASE_REPO_DIR}">
		<contains string="${SCM_PATH}" substring="trunk" />
	</condition>
	
	
	<target name="publish">
		<mkdir dir="${publish.dir}"/>
		<copy todir="${publish.dir}">
			<fileset dir="${env.WORKSPACE}/buckminster.output">
				<include name="org.genesez.featuregroup*/site.p2/**" />
			</fileset>
			<mapper type="regexp" from="(?:site\.p2)(.*)" to="\1"/>
		</copy>
		<chmod perm="u=rwX,g=rwX,o=" dir="${publish.dir}" includes="**/*" type="both" />
		<chgrp group="wwwcln" type="both">
			<fileset dir="${publish.dir}" includes="**/*" />
		</chgrp>
	</target>
	
	<target name="create.b3aggr.file" depends="publish" description="Adds the p2 repository of all successful and available GeneSEZ builds to the b3 aggregator model file.">
		<xmltask source="${b3aggr.file}" dest="${b3aggr.file}">
			<copy property="last.validation.set.label" path="/aggregator:Aggregation/validationSets[last()]/@label" />
		</xmltask>
		<for param="release">
			<path id="genesez.releases">
				<dirset followsymlinks="false" dir="${publish.dir}/..">
					<include name="*" />
				</dirset>
			</path>
			<sequential>
				<var name="uri" value="file://@{release}" />
				<echo message="repo uri ${uri}" />
				
				<!-- obtain genesez version from repo path -->
				<var name="version" unset="true" />
				<propertyregex property="version" regexp="_(\d.\d.\d)-" select="\1" input="${uri}" />
				
				<!-- check if validation set for genesez version exists -->
				<var name="validation.set" unset="true" />
				<var name="validation.set.label" unset="true" />
				<xmltask source="${b3aggr.file}" dest="${b3aggr.file}">
					<copy property="validation.set.label" path="/aggregator:Aggregation/validationSets[@label='${version}']/@label" />
				</xmltask>
				<condition property="validation.set" value="${validation.set.label}" else="${last.validation.set.label}">
					<isset property="validation.set.label" />
				</condition>
				
				<!-- add genesez repo with reference to validation set -->
				<xmltask source="${b3aggr.file}" dest="${b3aggr.file}">
					<insert path="/aggregator:Aggregation/validationSets[last()]" position="after">
						<![CDATA[
						  <validationSets label="${uri}" extends="//@validationSets[label='${validation.set}']">
						    <contributions label="GeneSEZ">
						      <repositories location="${uri}">
						      </repositories>
						    </contributions>
						  </validationSets>
						]]>
					</insert>
				</xmltask>
			</sequential>
		</for>
	</target>
	
	<target name="aggregate" depends="create.b3aggr.file" description="Creates an aggregated p2 repository containing GeneSEZ builds with its dependencies.">
		<exec executable="/bin/sh" dir="${b3.home.dir}" failonerror="true">
			<arg value="b3" />
			<arg value="aggregate" />
			<arg value="-data" />
			<arg value="${env.WORKSPACE}" />
			<arg value="--buildModel" />
			<arg file="${basedir}/${b3aggr.file}" />
			<arg value="--buildRoot" />
			<arg value="${basedir}/${reponame}" />
			<arg value="--stacktrace" />
		</exec>
	</target>
	
	<target name="publish.aggregated.repo" depends="aggregate">
		<mkdir dir="${aggregated.publish.dir}" />
		<delete includeEmptyDirs="true">
			<fileset dir="${aggregated.publish.dir}" includes="**/*" />
		</delete>
		<move todir="${aggregated.publish.dir}">
			<fileset dir="${basedir}/${reponame}/final" />
		</move>
		<chmod perm="u=rwX,g=rwX,o=" dir="${aggregated.publish.dir}" includes="**/*" type="both" />
		<chgrp group="wwwcln" type="both">
			<fileset dir="${aggregated.publish.dir}" includes="**/*" />
		</chgrp>
	</target>
</project>
