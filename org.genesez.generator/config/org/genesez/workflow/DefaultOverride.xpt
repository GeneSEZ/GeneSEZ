
«IMPORT gcore»

«EXTENSION org::genesez::workflow::Utility»
«EXTENSION org::genesez::platform::common::AccessHelper»
«EXTENSION org::genesez::platform::common::Conversion»
«EXTENSION org::genesez::platform::java::scripts::Naming»
«EXTENSION org::genesez::util::logging::Logging»

«AROUND org::genesez::platform::java::java5::templates::Attribute::_Declaration FOR MAttribute -»
	«IF !isDefaultOverride() -»
		«targetDef.proceed() -»
	«ENDIF -»
«ENDAROUND»

«AROUND org::genesez::platform::java::java5::templates::Attribute::_MultiValuedInitialization FOR MAttribute -»
	«IF !isDefaultOverride() -»
		«targetDef.proceed() -»
	«ENDIF -»
«ENDAROUND»

«AROUND org::genesez::platform::java::java5::templates::Attribute::InitializationBlock FOR MClassifier -»
	«IF property.typeSelect(MAttribute).exists( p | !p.isDefaultOverride() && !p.static && !p.derived && p.isMultiValuedType() && p.hasDefaultValue() ) -»
		«targetDef.proceed() -»
	«ENDIF -»
	«EXPAND DefaultOverride -»
«ENDAROUND»

«DEFINE DefaultOverride FOR MClassifier -»
	«IF property.exists( p|p.isDefaultOverride() ) -»
	// override default values of workflow parameters
	{
		«FOREACH property.typeSelect(MAttribute).select( p|p.isDefaultOverride() ) AS p -»
			«EXPAND DefaultOverride( parameterForDefault( this, p ) ) FOR p -»
		«ENDFOREACH -»
	}
	«ENDIF -»
«ENDDEFINE»

«DEFINE DefaultOverride(MAttribute base) FOR MAttribute -»
	«IF base.isSingleValuedType() -»
		«base.asSetter()»(«defaultvalue»);
	«ELSE -»
		«IF isSingleValuedType() -»
		«base.asAddPropertyAccessOperation()»(«defaultvalue»);
		«ELSE -»
		«FOREACH defaultvalue.toList() AS v -»
		«base.asAddPropertyAccessOperation()»(«v»);
		«ENDFOREACH -»
		«ENDIF -»
	«ENDIF -»
«ENDDEFINE»
