module org.genesez.workflow

var name = "org.genesez.workflow"
var namespace = "org::genesez::workflow"
var classpath = "org/genesez/workflow"

Workflow {
	bean = org.eclipse.xtend.typesystem.uml2.Setup {
		standardUML2Setup = true
	}
	bean = org.eclipse.xtend.typesystem.emf.EmfMetaModel : emf {
		metaModelPackage = "org.eclipse.emf.ecore.EcorePackage"
	}
	bean = org.eclipse.xtend.typesystem.emf.EmfMetaModel : gcore {
		metaModelPackage = "org.genesez.metamodel.gcore.GcorePackage"
	}
	bean = org.eclipse.xtend.typesystem.uml2.UML2MetaModel : uml {
	}
//	component = adapter.uml2.Uml2GeneSEZ {
//		model = "../${name}/model/genesez.workflow.uml"
//		includeProfile = "org.genesez.workflow.profile"
//	}
//	component = org.eclipse.xtend.typesystem.emf.XmiReader {
//		modelFile = "../${name}/model/genesez.workflow.uml"
//		outputSlot = "uml2model"
//	}
	component = workflow.EmfReader {
		file = "modeling/${name}/genesez.workflow.uml"
		slot = "uml2model"
	}
//	component = org.eclipse.xtend.check.CheckComponent {
//		metaModel = uml
//		checkFile = "org::genesez::adapter::uml2::uml2constraints"
//		checkFile = "org::genesez::adapter::uml2::UmlStateMachineValidation"
//		checkFile = "org::genesez::adapter::uml2::Uml2GeneSezStateMachineValidation"
//		emfAllChildrenSlot = "uml2model"
//		abortOnError = true
//	}
//	component = workflow.xpand.Validator {
//		slot = "uml2model"
//		metaModel = uml
//		script = "org::genesez::adapter::uml2::uml2constraints"
//		script = "org::genesez::adapter::uml2::UmlStateMachineValidation"
//		script = "org::genesez::adapter::uml2::Uml2GeneSezStateMachineValidation"
//	}
	component = workflow.xpand.uml2.Uml2Validator {}
//	component = org.eclipse.xtend.XtendComponent {
//		metaModel = gcore
//		metaModel = uml
//		globalVarDef = { name = "excludePackages" value = "'UML Standard Profile'" }
//		globalVarDef = { name = "mapClassesInModelToExternal" value = "false" }
//		globalVarDef = { name = "externalPackages" value = "''" }
//		globalVarDef = { name = "externalStereotypes" value = "'external'" }
//		globalVarDef = { name = "externalStereotypes" value = "'external'" }
//		globalVarDef = { name = "excludeStereotypes" value = "'exclude'" }
//		globalVarDef = { name = "includeProfiles" value = "'org.genesez.workflow.profile'" }
//		globalVarDef = { name = "allowGeneratedXmiGuID" value = "false" }
//		invoke = "org::genesez::adapter::uml2::uml2genesez::transform(uml2model)"
//		outputSlot = "coremodel"
//	}
//	component = workflow.xpand.Model2Model {
//		metaModel = gcore
//		metaModel = uml
//		globalVarDef = { name = "excludePackages" value = "'UML Standard Profile'" }
//		globalVarDef = { name = "mapClassesInModelToExternal" value = "false" }
//		globalVarDef = { name = "externalPackages" value = "''" }
//		globalVarDef = { name = "externalStereotypes" value = "'external'" }
//		globalVarDef = { name = "excludeStereotypes" value = "'exclude'" }
//		globalVarDef = { name = "includeProfiles" value = "'org.genesez.workflow.profile'" }
//		globalVarDef = { name = "allowGeneratedXmiGuID" value = "false" }
//		slot = "uml2model"
//		script = "org::genesez::adapter::uml2::uml2genesez::transform"
//		outputSlot = "coremodel"
//	}
	component = workflow.xpand.uml2.Uml2Gcore {
		includeProfiles = "org.genesez.workflow.profile"
	}
//	component = platform.common.workflow.Serializer {
//		file = "model/${name}/uml2gcore.gcore.xmi"
//	}
	component = org.genesez.workflow.EmfWriter {
		file = "model/${name}/uml2gcore.gcore.xmi"
	}
	component = workflow.xpand.Model2Model {
		metaModel = gcore
		script = "org::genesez::platform::java::m2m::PackageExtend::extend"
		script = "org::genesez::metamodel::core::util::m2m::Realization::realize"
		script = "org::genesez::m2t::ApacheCommonsLogging::modify"
//		script = "org.genesez.workflow::DefaultValueAnnotation::prepare"
		script = "org::genesez::platform::java::java5::scripts::Functionality::additions"
		script = "org::genesez::platform::java::java5::scripts::Functionality::modifications"
		aopScript = "org::genesez::m2t::DoNotOptimizeFinalAttribsWithDefaultValue"
	}
//	component = platform.common.workflow.CompositeModel2Model {
//		script = "org::genesez::platform::java::m2m::PackageExtend::extend"
//		script = "org::genesez::metamodel::core::util::m2m::Realization::realize"
//		script = "org.genesez.workflow::AnnotationDefaultValue::prepare"
//		script = "org::genesez::platform::java::java5::scripts::Functionality::additions"
//		script = "org::genesez::platform::java::java5::scripts::Functionality::modifications"
//	}
//	component = platform.common.workflow.Serializer {
//		cloneSlotContents = true
//		file = "model/${name}/uml2gcore.modified.gcore.xmi"
//	}
	component = org.genesez.workflow.EmfWriter {
		cloneSlotContents = true
		file = "model/${name}/uml2gcore.modified.gcore.xmi"
	}
	// -- mwe + mwe2 integration
	component = platform.java.workflow.JavaGenerator {
		outputDir = "../${name}/src-gen"
		aspectTemplate = "${namespace}::NoFixedImports"
		aspectTemplate = "${namespace}::AnnotationImports"
		aspectTemplate = "${namespace}::Delegate"
		typeMappingFile = "typemapping.acl.xml"
		typeMappingFile = "typemapping.java.xml"
		typeMappingFile = "typemapping.mwe.xml"
		excludePackage = "org::genesez::workflow::xpand"
		excludePackage = "org::genesez::platform::java::workflow"
		excludePackage = "org::genesez::platform::typo3::workflow"
		excludePackage = "org::genesez::platform::documentation::workflow"
		excludePackage = "org::genesez::platform::dotnet::workflow"
		excludePackage = "org::genesez::platform::php::workflow"
		excludePackage = "org::genesez::metamodel::core::util::workflow"
		// we exclude direct model contents only by specifying e.g. the separator
		excludeContentPackage = ","
	}
	// -- xpand workflow integration
	component = platform.java.workflow.JavaGenerator {
		outputDir = "../${name}.xpand/src-gen"
		aspectTemplate = "${namespace}::NoFixedImports"
		aspectTemplate = "${namespace}::AnnotationImports"
		aspectTemplate = "${namespace}::Delegate"
		aspectTemplate = "${namespace}::DefaultOverride"
		aspectTemplate = "${namespace}::CheckConfiguration"
		typeMappingFile = "typemapping.acl.xml"
		typeMappingFile = "typemapping.java.xml"
		typeMappingFile = "typemapping.mwe.xml"
		typeMappingFile = "typemapping.xpand.xml"
		excludeContentPackage = ""
		excludeContentPackage = "org::genesez::workflow"
		excludeContentPackage = "org::genesez::workflow::profile"
		excludePackage = "org::genesez::workflow::xpand::uml2"
		excludePackage = "org::genesez::platform::java::workflow"
		excludePackage = "org::genesez::platform::typo3::workflow"
		excludePackage = "org::genesez::platform::documentation::workflow"
		excludePackage = "org::genesez::platform::dotnet::workflow"
		excludePackage = "org::genesez::platform::php::workflow"
		excludePackage = "org::genesez::metamodel::core::util::workflow"
	}
	// -- uml2 adapter
	component = platform.java.workflow.JavaGenerator {
		outputDir = "../org.genesez.adapter.uml2/src-gen"
		aspectTemplate = "${namespace}::NoFixedImports"
		aspectTemplate = "${namespace}::AnnotationImports"
		aspectTemplate = "${namespace}::Delegate"
		aspectTemplate = "${namespace}::DefaultOverride"
		aspectTemplate = "${namespace}::CheckConfiguration"
		typeMappingFile = "typemapping.java.xml"
		typeMappingFile = "typemapping.mwe.xml"
		typeMappingFile = "typemapping.xpand.xml"
		excludeContentPackage = ""
		excludeContentPackage = "org::genesez::workflow"
		excludeContentPackage = "org::genesez::workflow::xpand"
		excludeContentPackage = "org::genesez::workflow::profile"
		excludePackage = "org::genesez::platform::java::workflow"
		excludePackage = "org::genesez::platform::typo3::workflow"
		excludePackage = "org::genesez::platform::documentation::workflow"
		excludePackage = "org::genesez::platform::dotnet::workflow"
		excludePackage = "org::genesez::platform::php::workflow"
		excludePackage = "org::genesez::metamodel::core::util::workflow"
	}
	// -- java platform
	component = platform.java.workflow.JavaGenerator {
		outputDir = "../org.genesez.platform.java/workflow"
		aspectTemplate = "${namespace}::NoFixedImports"
		aspectTemplate = "${namespace}::AnnotationImports"
		aspectTemplate = "${namespace}::Delegate"
		aspectTemplate = "${namespace}::CheckConfiguration"
		aspectTemplate = "${namespace}::DefaultOverride"
		typeMappingFile = "typemapping.java.xml"
		typeMappingFile = "typemapping.mwe.xml"
		typeMappingFile = "typemapping.xpand.xml"
		// we exclude direct model contents only by specifying e.g. the separator
		excludeContentPackage = ","
		excludePackage = "org::genesez::workflow"
		excludePackage = "org::genesez::platform::typo3::workflow"
		excludePackage = "org::genesez::platform::documentation::workflow"
		excludePackage = "org::genesez::platform::dotnet::workflow"
		excludePackage = "org::genesez::platform::php::workflow"
		excludePackage = "org::genesez::metamodel::core::util::workflow"
	}
	// -- typo3 platform
	component = workflow.xpand.Model2TextComposite {
		component = platform.java.workflow.Gcore2Java {
			outputDir = "../org.genesez.platform.typo3/workflow"
			aopTemplate = "${namespace}::NoFixedImports"
			aopTemplate = "${namespace}::AnnotationImports"
			aopTemplate = "${namespace}::Delegate"
			aopTemplate = "${namespace}::DefaultOverride"
			aopTemplate = "${namespace}::CheckConfiguration"
			typeMappingFile = "typemapping.java.xml"
			typeMappingFile = "typemapping.mwe.xml"
			typeMappingFile = "typemapping.xpand.xml"
			
			excludePackage = "org::genesez::workflow"
			excludePackage = "org::genesez::platform::java::workflow"
			excludePackage = "org::genesez::platform::documentation::workflow"
			excludePackage = "org::genesez::platform::dotnet::workflow"
			excludePackage = "org::genesez::platform::php::workflow"
			excludePackage = "org::genesez::metamodel::core::util::workflow"
			excludeContentPackage = ","
			
			globalVarDef = { name = "newAssociationHandling" value = "true"}
			globalVarDef = { name = "generateSectionComments" value = "true"}
		}
	}
	// -- documentation platform
	component = platform.java.workflow.JavaGenerator {
		outputDir = "../org.genesez.platform.documentation/workflow"
		aspectTemplate = "${namespace}::NoFixedImports"
		aspectTemplate = "${namespace}::AnnotationImports"
		aspectTemplate = "${namespace}::Delegate"
		aspectTemplate = "${namespace}::CheckConfiguration"
		aspectTemplate = "${namespace}::DefaultOverride"
		typeMappingFile = "typemapping.java.xml"
		typeMappingFile = "typemapping.mwe.xml"
		typeMappingFile = "typemapping.xpand.xml"
		// we exclude direct model contents only by specifying e.g. the separator
		excludeContentPackage = ","
		excludePackage = "org::genesez::workflow"
		excludePackage = "org::genesez::platform::java::workflow"
		excludePackage = "org::genesez::platform::typo3::workflow"
		excludePackage = "org::genesez::platform::dotnet::workflow"
		excludePackage = "org::genesez::platform::php::workflow"
		excludePackage = "org::genesez::metamodel::core::util::workflow"
	}
	// -- c# platform
	component = workflow.xpand.Model2TextComposite {
		component = platform.java.workflow.Gcore2Java {
			outputDir = "../org.genesez.platform.dotnet/workflow"
			aopTemplate = "${namespace}::NoFixedImports"
			aopTemplate = "${namespace}::AnnotationImports"
			aopTemplate = "${namespace}::Delegate"
			aopTemplate = "${namespace}::DefaultOverride"
			aopTemplate = "${namespace}::CheckConfiguration"
			typeMappingFile = "typemapping.java.xml"
			typeMappingFile = "typemapping.mwe.xml"
			typeMappingFile = "typemapping.xpand.xml"
			
			excludePackage = "org::genesez::workflow"
			excludePackage = "org::genesez::platform::java::workflow"
			excludePackage = "org::genesez::platform::typo3::workflow"
			excludePackage = "org::genesez::platform::documentation::workflow"
			excludePackage = "org::genesez::platform::php::workflow"
			excludePackage = "org::genesez::metamodel::core::util::workflow"
			excludeContentPackage = ","
			
			globalVarDef = { name = "newAssociationHandling" value = "true"}
			globalVarDef = { name = "generateSectionComments" value = "true"}
		}
	}
	// -- php platform
	component = workflow.xpand.Model2TextComposite {
		component = platform.java.workflow.Gcore2Java {
			outputDir = "../org.genesez.platform.php/workflow"
			aopTemplate = "${namespace}::NoFixedImports"
			aopTemplate = "${namespace}::AnnotationImports"
			aopTemplate = "${namespace}::Delegate"
			aopTemplate = "${namespace}::DefaultOverride"
			aopTemplate = "${namespace}::CheckConfiguration"
			typeMappingFile = "typemapping.java.xml"
			typeMappingFile = "typemapping.mwe.xml"
			typeMappingFile = "typemapping.xpand.xml"
			
			excludePackage = "org::genesez::workflow"
			excludePackage = "org::genesez::platform::java::workflow"
			excludePackage = "org::genesez::platform::typo3::workflow"
			excludePackage = "org::genesez::platform::documentation::workflow"
			excludePackage = "org::genesez::platform::dotnet::workflow"
			excludePackage = "org::genesez::metamodel::core::util::workflow"
			excludeContentPackage = ","
			
			globalVarDef = { name = "newAssociationHandling" value = "true"}
			globalVarDef = { name = "generateSectionComments" value = "true"}
		}
	}
	// -- profile generator
	component = workflow.xpand.Model2TextComposite {
		component = platform.java.workflow.Gcore2Java {
			outputDir = "../org.genesez.metamodel.core.util/workflow"
			aopTemplate = "${namespace}::NoFixedImports"
			aopTemplate = "${namespace}::AnnotationImports"
			aopTemplate = "${namespace}::Delegate"
			aopTemplate = "${namespace}::DefaultOverride"
			aopTemplate = "${namespace}::CheckConfiguration"
			typeMappingFile = "typemapping.java.xml"
			typeMappingFile = "typemapping.mwe.xml"
			typeMappingFile = "typemapping.xpand.xml"
			
			excludePackage = "org::genesez::workflow"
			excludePackage = "org::genesez::platform::java::workflow"
			excludePackage = "org::genesez::platform::typo3::workflow"
			excludePackage = "org::genesez::platform::documentation::workflow"
			excludePackage = "org::genesez::platform::dotnet::workflow"
			excludePackage = "org::genesez::platform::php::workflow"
			excludeContentPackage = ","
			
			globalVarDef = { name = "newAssociationHandling" value = "true"}
			globalVarDef = { name = "generateSectionComments" value = "true"}
		}
	}
	/*
	bean = org.eclipse.xtend.typesystem.uml2.Setup {
		standardUML2Setup = true
	}
	bean = org.eclipse.xtend.typesystem.emf.EmfMetaModel : emf {
		metaModelPackage = "org.eclipse.emf.ecore.EcorePackage"
	}
	bean = org.eclipse.xtend.typesystem.uml2.UML2MetaModel : uml {
	}
	component = org.eclipse.emf.mwe.utils.Reader {
		uri = "genesez.workflow.uml"
		modelSlot = "uml2model"
	}
	component = org.eclipse.xtend.check.CheckComponent {
		metaModel = emf
		metaModel = uml
		checkFile = "org::genesez::adapter::uml2::uml2constraints.chk"
		emfAllChildrenSlot = "uml2model"
		abortOnError = true
	}
	component = org.eclipse.xtend.XtendComponent {
		metaModel = emf
		metaModel = uml
		globalVarDef = { name = "nsUri" value = "'${nsUri}'" }
		globalVarDef = { name = "includedPackages" value = "'${includedPackages}'" }
		globalVarDef = { name = "addNameAttribute" value = "${addNameAttribute}" }
		globalVarDef = { name = "resourcePerToplevelPackage" value = "${resourcePerToplevelPackage}" }
		invoke = "org::eclipse::xtend::util::uml2ecore::uml2ecore::top(uml2model)"
		outputSlot = "ecoreModel"
	}
	*/
}