<?xml version="1.0" encoding="ASCII"?>
<gcore:MModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:gcore="http://genesez.org/metamodel/core" xsi:schemaLocation="http://genesez.org/metamodel/core java://org.genesez.metamodel.gcore.GcorePackage" name="org.genesez.m2t" xmiGuid="_q2tSUADuEeK7ac-mrkJBDw">
  <ownedComment xmiGuid="_L6WyEADyEeK7ac-mrkJBDw" annotation="2 file tree walkers:&#xD;&#xA;before generation:&#xD;&#xA;-> import beautifier&#xD;&#xA;-> collect info for file deletion feature&#xD;&#xA;after generation:&#xD;&#xA;-> collect info for folder deletion feature&#xD;&#xA;"/>
  <ownedComment xmiGuid="_N7qigADyEeK7ac-mrkJBDw" annotation=" before generation:&#xD;&#xA;-> file tree walker&#xD;&#xA;after generation&#xD;&#xA;-> file tree walker&#xD;&#xA;-> perform file deletion&#xD;&#xA;-> perform folder deletion"/>
  <classifier xsi:type="gcore:MClass" name="FileTreeObserverAdapter" xmiGuid="_PVtJgADwEeK7ac-mrkJBDw" specialization="_PVtJiQDwEeK7ac-mrkJBDw _PVtJmwDwEeK7ac-mrkJBDw" visibility="public" realization="_PVtJkQDwEeK7ac-mrkJBDw">
    <operation name="updateBeforeDir" xmiGuid="_PVtJgADwEeK7ac-mrkJBDw__PVtJkgDwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
      <parameter name="file" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.19" operation="_PVtJgADwEeK7ac-mrkJBDw__PVtJkgDwEeK7ac-mrkJBDw"/>
    </operation>
    <operation name="updateAfterDir" xmiGuid="_PVtJgADwEeK7ac-mrkJBDw__PVtJlADwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
      <parameter name="file" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.19" operation="_PVtJgADwEeK7ac-mrkJBDw__PVtJlADwEeK7ac-mrkJBDw"/>
    </operation>
    <operation name="updateFileVisit" xmiGuid="_PVtJgADwEeK7ac-mrkJBDw__PVtJlgDwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
      <parameter name="file" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.19" operation="_PVtJgADwEeK7ac-mrkJBDw__PVtJlgDwEeK7ac-mrkJBDw"/>
    </operation>
    <operation name="updateFileVisitFailed" xmiGuid="_PVtJgADwEeK7ac-mrkJBDw__PVtJmADwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
      <parameter name="file" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.19" operation="_PVtJgADwEeK7ac-mrkJBDw__PVtJmADwEeK7ac-mrkJBDw"/>
    </operation>
    <operation name="updateComplete" xmiGuid="_PVtJgADwEeK7ac-mrkJBDw__PVtJmgDwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void"/>
  </classifier>
  <classifier xsi:type="gcore:MClass" name="FolderDeletionFeature" xmiGuid="_PVtJggDwEeK7ac-mrkJBDw" visibility="public" generalization="_PVtJmwDwEeK7ac-mrkJBDw"/>
  <classifier xsi:type="gcore:MClass" name="FileTreeWalkerFeature" xmiGuid="_PVtJhADwEeK7ac-mrkJBDw" visibility="public">
    <property xsi:type="gcore:MAttribute" name="searchedDir" xmiGuid="_PVtJhQDwEeK7ac-mrkJBDw" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String"/>
    <property xsi:type="gcore:MAttribute" name="observer" xmiGuid="_PVtJhgDwEeK7ac-mrkJBDw" visibility="public" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="_PVtJkQDwEeK7ac-mrkJBDw"/>
    <property xsi:type="gcore:MAssociationRole" name="observer" xmiGuid="_xlKnAADxEeK7ac-mrkJBDw" visibility="public" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="_PVtJkQDwEeK7ac-mrkJBDw" oppositeMultiplicity="1" oppositeLowerBoundMultiplicity="1" oppositeUpperBoundMultiplicity="1" association="_xlKnAwDxEeK7ac-mrkJBDw"/>
  </classifier>
  <classifier xsi:type="gcore:MClass" name="ImportBeautifier" xmiGuid="_PVtJiQDwEeK7ac-mrkJBDw" visibility="public" generalization="_PVtJgADwEeK7ac-mrkJBDw">
    <property xsi:type="gcore:MAttribute" name="fileExtension" xmiGuid="_PVtJiwDwEeK7ac-mrkJBDw" visibility="private" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String"/>
    <property xsi:type="gcore:MAttribute" name="importRegExp" xmiGuid="_PVtJjgDwEeK7ac-mrkJBDw" visibility="private" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String"/>
  </classifier>
  <classifier xsi:type="gcore:MInterface" name="FileTreeObserver" xmiGuid="_PVtJkQDwEeK7ac-mrkJBDw" visibility="public">
    <operation name="updateBeforeDir" xmiGuid="_PVtJkgDwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
      <parameter name="file" xmiGuid="_PVtJkwDwEeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.19" operation="_PVtJkgDwEeK7ac-mrkJBDw"/>
    </operation>
    <operation name="updateAfterDir" xmiGuid="_PVtJlADwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
      <parameter name="file" xmiGuid="_PVtJlQDwEeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.19" operation="_PVtJlADwEeK7ac-mrkJBDw"/>
    </operation>
    <operation name="updateFileVisit" xmiGuid="_PVtJlgDwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
      <parameter name="file" xmiGuid="_PVtJlwDwEeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.19" operation="_PVtJlgDwEeK7ac-mrkJBDw"/>
    </operation>
    <operation name="updateFileVisitFailed" xmiGuid="_PVtJmADwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
      <parameter name="file" xmiGuid="_PVtJmQDwEeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.19" operation="_PVtJmADwEeK7ac-mrkJBDw"/>
    </operation>
    <operation name="updateComplete" xmiGuid="_PVtJmgDwEeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void"/>
  </classifier>
  <classifier xsi:type="gcore:MClass" name="DeletionFeature" xmiGuid="_PVtJmwDwEeK7ac-mrkJBDw" specialization="_PVtJggDwEeK7ac-mrkJBDw _PVzQIADwEeK7ac-mrkJBDw" visibility="public" generalization="_PVtJgADwEeK7ac-mrkJBDw">
    <property xsi:type="gcore:MAttribute" name="excludedRelativePath" xmiGuid="_PVtJnQDwEeK7ac-mrkJBDw" visibility="private" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String"/>
    <property xsi:type="gcore:MAttribute" name="excludedDirectoryName" xmiGuid="_PVtJoADwEeK7ac-mrkJBDw" visibility="private" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String"/>
    <property xsi:type="gcore:MAttribute" name="baseDir" xmiGuid="_PVtJowDwEeK7ac-mrkJBDw" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String"/>
  </classifier>
  <classifier xsi:type="gcore:MClass" name="FileDeletionFeature" xmiGuid="_PVzQIADwEeK7ac-mrkJBDw" visibility="public" generalization="_PVtJmwDwEeK7ac-mrkJBDw">
    <property xsi:type="gcore:MAttribute" name="includedFileExtension" xmiGuid="_PVzQIgDwEeK7ac-mrkJBDw" visibility="private" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String"/>
    <property xsi:type="gcore:MAttribute" name="excludedFileExtension" xmiGuid="_PVzQJQDwEeK7ac-mrkJBDw" visibility="private" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String"/>
  </classifier>
  <nestedPackage name="externals" xmiGuid="_TpodwAQaEeK-ufRtI9UaTA"/>
  <nestedPackage name="org" xmiGuid="_pEOrQADyEeK7ac-mrkJBDw_org">
    <nestedPackage name="genesez" xmiGuid="_pEOrQADyEeK7ac-mrkJBDw_genesez">
      <nestedPackage name="m2t" xmiGuid="_pEOrQADyEeK7ac-mrkJBDw">
        <classifier xsi:type="gcore:MInterface" name="FileTreeObserver" xmiGuid="_ZACkSgD0EeK7ac-mrkJBDw" visibility="public" abstract="true">
          <ownedComment xmiGuid="_ZACkSwD0EeK7ac-mrkJBDw" annotation=" The observer interface for observing the FileTreeWalker. If a class needs information from the file tree it should implement this.&#xA;  &#xA; @author Dominik Wetzel&#xA; @date 2011-09-27"/>
          <operation name="updateBeforeDir" xmiGuid="_ZACkTAD0EeK7ac-mrkJBDw" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_ZACkTQD0EeK7ac-mrkJBDw" annotation="Updates the status. Called before FileTreeWalker opens a directory."/>
            <parameter name="dir" xmiGuid="_ZACkTgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZACkTAD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_ZACkTwD0EeK7ac-mrkJBDw" annotation="the directory which will be opened in the next step."/>
            </parameter>
          </operation>
          <operation name="updateAfterDir" xmiGuid="_ZACkUAD0EeK7ac-mrkJBDw" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_ZACkUQD0EeK7ac-mrkJBDw" annotation="Updates the status. Called after FileTreeWalker left a directory."/>
            <parameter name="dir" xmiGuid="_ZACkUgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZACkUAD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_ZACkUwD0EeK7ac-mrkJBDw" annotation="the directory which was left."/>
            </parameter>
          </operation>
          <operation name="updateFileVisit" xmiGuid="_ZACkVAD0EeK7ac-mrkJBDw" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_ZACkVQD0EeK7ac-mrkJBDw" annotation="Updates the status. Called if a file is visited."/>
            <parameter name="file" xmiGuid="_ZACkVgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZACkVAD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_ZACkVwD0EeK7ac-mrkJBDw" annotation="the file that's visited."/>
            </parameter>
          </operation>
          <operation name="updateFileVisitFailed" xmiGuid="_ZACkWAD0EeK7ac-mrkJBDw" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_ZACkWQD0EeK7ac-mrkJBDw" annotation="Updates the status. Called if file visit failed."/>
            <parameter name="file" xmiGuid="_ZACkWgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZACkWAD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_ZACkWwD0EeK7ac-mrkJBDw" annotation="the file thats visitation failed."/>
            </parameter>
          </operation>
          <operation name="updateComplete" xmiGuid="_ZACkXAD0EeK7ac-mrkJBDw" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_ZACkXQD0EeK7ac-mrkJBDw" annotation="Updates the status. Called if file tree walked completely."/>
          </operation>
        </classifier>
        <classifier xsi:type="gcore:MClass" name="FileTreeObserverAdapter" xmiGuid="_ZACkPAD0EeK7ac-mrkJBDw" specialization="_Y_qJgAD0EeK7ac-mrkJBDw _jOF40ATYEeKUpcpqfZ9tsA _ZAIqzgD0EeK7ac-mrkJBDw" visibility="public" abstract="true" realization="_ZACkSgD0EeK7ac-mrkJBDw">
          <ownedComment xmiGuid="_ZACkPQD0EeK7ac-mrkJBDw" annotation="An empty implementation for the FileTreeObserver interface."/>
          <operation name="updateBeforeDir" xmiGuid="_ZACkPwD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <parameter name="dir" xmiGuid="_ZACkQAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZACkPwD0EeK7ac-mrkJBDw"/>
          </operation>
          <operation name="updateAfterDir" xmiGuid="_ZACkQQD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <parameter name="dir" xmiGuid="_ZACkQgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZACkQQD0EeK7ac-mrkJBDw"/>
          </operation>
          <operation name="updateFileVisit" xmiGuid="_ZACkQwD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <parameter name="file" xmiGuid="_ZACkRAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZACkQwD0EeK7ac-mrkJBDw"/>
          </operation>
          <operation name="updateFileVisitFailed" xmiGuid="_ZACkRQD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <parameter name="file" xmiGuid="_ZACkRgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZACkRQD0EeK7ac-mrkJBDw"/>
          </operation>
          <operation name="updateComplete" xmiGuid="_ZACkRwD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void"/>
        </classifier>
        <classifier xsi:type="gcore:MClass" name="FileTreeWalker" xmiGuid="_Y_wQKQD0EeK7ac-mrkJBDw" stereotype="_-PH6MASsEeKUpcpqfZ9tsA" visibility="public" realization="//@externalTypes.1" supplier="LogFactory">
          <ownedComment xmiGuid="_Y_wQKgD0EeK7ac-mrkJBDw" annotation="A FileVisitor that walks the given FileTree and calls the update methods on its Observers.&#xD;&#xA;&#xD;&#xA;@author Dominik Wetzel"/>
          <operation name="removeAllObserver" xmiGuid="_Y_wQUAD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_wQUQD0EeK7ac-mrkJBDw" annotation="Unregisters all currently used observers."/>
          </operation>
          <operation name="countObservers" xmiGuid="_Y_wQUgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="int">
            <ownedComment xmiGuid="_Y_wQUwD0EeK7ac-mrkJBDw" annotation="counts the observers."/>
            <return name="" xmiGuid="_Y_wQVAD0EeK7ac-mrkJBDw" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="int" operation="_Y_wQUgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQVQD0EeK7ac-mrkJBDw" annotation="size of observer set."/>
            </return>
          </operation>
          <operation name="walkFileTree" xmiGuid="_wiLKYASeEeKUpcpqfZ9tsA" visibility="public" multiplicity="1" unique="true" returnType="void"/>
          <operation name="preVisitDirectory" xmiGuid="_Y_wQXgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" raisedException="//@externalTypes.4" returnType="//@externalTypes.2">
            <ownedComment xmiGuid="_Y_wQXwD0EeK7ac-mrkJBDw" annotation="Invoked for a directory before entries in the directory are visited. Calls updateBeforeDir() on the observers &#xA;&#xA;@throws IOException if IO-Error occurs"/>
            <parameter name="dir" xmiGuid="_Y_wQYAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_wQXgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQYQD0EeK7ac-mrkJBDw" annotation="a reference to the directory"/>
            </parameter>
            <parameter name="attrs" xmiGuid="_Y_wQYgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.3" operation="_Y_wQXgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQYwD0EeK7ac-mrkJBDw" annotation="the directory's basic attributes"/>
            </parameter>
            <return name="" xmiGuid="_Y_wQZAD0EeK7ac-mrkJBDw" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.2" operation="_Y_wQXgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQZQD0EeK7ac-mrkJBDw" annotation="CONTINUE"/>
            </return>
          </operation>
          <operation name="postVisitDirectory" xmiGuid="_Y_wQVgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" raisedException="//@externalTypes.4" returnType="//@externalTypes.2">
            <ownedComment xmiGuid="_Y_wQVwD0EeK7ac-mrkJBDw" annotation="Invoked for a directory after entries in the directory, and all of their descendants, have been visited. This method is also invoked when iteration of the directory completes prematurely (by an I/O error when iterating over the directory). Calls updateAfterDir() on the observers.&#xA;&#xA;@throws IOException if IO-Error occurs"/>
            <parameter name="dir" xmiGuid="_Y_wQWAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_wQVgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQWQD0EeK7ac-mrkJBDw" annotation="a reference to the directory"/>
            </parameter>
            <parameter name="exc" xmiGuid="_Y_wQWgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.4" operation="_Y_wQVgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQWwD0EeK7ac-mrkJBDw" annotation="null if the iteration of the directory completes without an error; otherwise the I/O exception that caused the iteration of the directory to complete prematurely."/>
            </parameter>
            <return name="" xmiGuid="_Y_wQXAD0EeK7ac-mrkJBDw" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.2" operation="_Y_wQVgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQXQD0EeK7ac-mrkJBDw" annotation="CONTINUE"/>
            </return>
          </operation>
          <operation name="visitFile" xmiGuid="_Y_wQZgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" raisedException="//@externalTypes.4" returnType="//@externalTypes.5">
            <ownedComment xmiGuid="_Y_wQZwD0EeK7ac-mrkJBDw" annotation="Invoked for a file in a directory. Calls updateFileVisit() on the observers.&#xA;&#xA;@throws IOException if IO-Error occurs"/>
            <parameter name="file" xmiGuid="_Y_wQaAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_wQZgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQaQD0EeK7ac-mrkJBDw" annotation="a reference to the file"/>
            </parameter>
            <parameter name="attrs" xmiGuid="_Y_wQagD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.3" operation="_Y_wQZgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQawD0EeK7ac-mrkJBDw" annotation="the file's basic attributes."/>
            </parameter>
            <return name="" xmiGuid="_Y_wQbAD0EeK7ac-mrkJBDw" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.5" operation="_Y_wQZgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQbQD0EeK7ac-mrkJBDw" annotation="CONTINUE"/>
            </return>
          </operation>
          <operation name="visitFileFailed" xmiGuid="_Y_wQbgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" raisedException="//@externalTypes.4" returnType="//@externalTypes.2">
            <ownedComment xmiGuid="_Y_wQbwD0EeK7ac-mrkJBDw" annotation="Invoked for a file that could not be visited. This method is invoked if the file's attributes could not be read, the file is a directory that could not be opened, and other reasons. Calls updateFileVisitFailed() on the observers.&#xA;&#xA;@throws IOException if an I/O-Error occurs"/>
            <parameter name="file" xmiGuid="_Y_wQcAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_wQbgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQcQD0EeK7ac-mrkJBDw" annotation="a reference to the file"/>
            </parameter>
            <parameter name="exc" xmiGuid="_Y_wQcgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.4" operation="_Y_wQbgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQcwD0EeK7ac-mrkJBDw" annotation="the I/O exception that prevented the file from being visited."/>
            </parameter>
            <return name="" xmiGuid="_Y_wQdAD0EeK7ac-mrkJBDw" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.2" operation="_Y_wQbgD0EeK7ac-mrkJBDw"/>
          </operation>
          <operation name="walkTree" xmiGuid="_Y_wQeQD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_wQegD0EeK7ac-mrkJBDw" annotation="starts the fileTree walk. Calls updateComplete() on the observers after complete FileTreeWalk"/>
            <parameter name="path" xmiGuid="_Y_wQewD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_wQeQD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQfAD0EeK7ac-mrkJBDw" annotation="the path where the walk starts."/>
            </parameter>
          </operation>
          <operation name="notifyObserverBeforeDir" xmiGuid="_Y_wQfQD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_wQfgD0EeK7ac-mrkJBDw" annotation="Notifies all observers with updateBeforeDir."/>
            <parameter name="dir" xmiGuid="_Y_wQfwD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_wQfQD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQgAD0EeK7ac-mrkJBDw" annotation="the directory were the event was called from"/>
            </parameter>
          </operation>
          <operation name="notifyObserverAfterDir" xmiGuid="_Y_wQgQD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_wQggD0EeK7ac-mrkJBDw" annotation="Notifies all observers with updateAfterDir"/>
            <parameter name="dir" xmiGuid="_Y_wQgwD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_wQgQD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQhAD0EeK7ac-mrkJBDw" annotation="the directory were the event was called from."/>
            </parameter>
          </operation>
          <operation name="notifyObserverFileVisit" xmiGuid="_Y_wQhQD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_wQhgD0EeK7ac-mrkJBDw" annotation="Notifies all observers with updateFileVisit"/>
            <parameter name="file" xmiGuid="_Y_wQhwD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_wQhQD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQiAD0EeK7ac-mrkJBDw" annotation="the file, were the event was called from"/>
            </parameter>
          </operation>
          <operation name="notifyObserverFileVisitFailed" xmiGuid="_Y_wQiQD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_wQigD0EeK7ac-mrkJBDw" annotation="Notifies all observers with updateFileVisitFailed"/>
            <parameter name="file" xmiGuid="_Y_wQiwD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_wQiQD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_wQjAD0EeK7ac-mrkJBDw" annotation="the file, were the event was called from."/>
            </parameter>
          </operation>
          <operation name="notifyObserverComplete" xmiGuid="_Y_wQjQD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_wQjgD0EeK7ac-mrkJBDw" annotation="Notifies all observers with updateComplete"/>
          </operation>
          <property xsi:type="gcore:MAttribute" name="observer" xmiGuid="_Y_wQKwD0EeK7ac-mrkJBDw" stereotype="_14_0_b6f02e1_1212567706968_503410_178" visibility="private" multiplicity="-1" lowerBoundMultiplicity="1" upperBoundMultiplicity="-1" unique="true" ordered="true" type="_ZACkSgD0EeK7ac-mrkJBDw">
            <ownedComment xmiGuid="_Y_wQLAD0EeK7ac-mrkJBDw" annotation="the observers"/>
            <taggedValue value="false" tag="//@anyStereotype.1/@property.0"/>
            <taggedValue value="false" tag="//@anyStereotype.1/@property.1"/>
            <taggedValue value="true" tag="//@anyStereotype.1/@property.2"/>
            <taggedValue value="true" tag="//@anyStereotype.1/@property.3"/>
          </property>
          <property xsi:type="gcore:MAttribute" name="baseDir" xmiGuid="_Y_wQNQD0EeK7ac-mrkJBDw" stereotype="_14_0_b6f02e1_1212567706968_503410_178" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String">
            <taggedValue value="false" tag="//@anyStereotype.1/@property.0"/>
            <taggedValue value="true" tag="//@anyStereotype.1/@property.1"/>
            <taggedValue value="true" tag="//@anyStereotype.1/@property.2"/>
            <taggedValue value="true" tag="//@anyStereotype.1/@property.3"/>
          </property>
          <property xsi:type="gcore:MAttribute" name="logger" xmiGuid="_Y_wQKQD0EeK7ac-mrkJBDw_logger" visibility="public" upperBoundMultiplicity="1" unique="true" type="Log" defaultvalue="LogFactory.getLog(getClass())" final="true"/>
        </classifier>
        <classifier xsi:type="gcore:MClass" name="ImportPreserver" xmiGuid="_Y_qJgAD0EeK7ac-mrkJBDw" stereotype="_-PH6MASsEeKUpcpqfZ9tsA" specialization="_higo8ASlEeKUpcpqfZ9tsA" visibility="public" generalization="_ZACkPAD0EeK7ac-mrkJBDw" supplier="LogFactory">
          <ownedComment xmiGuid="_Y_qJgQD0EeK7ac-mrkJBDw" annotation="The task of an import beautifier is the detection and reduction of double&#xA;import statements. It also stores and adds previously added imports.&#xA;Furthermore, this class implements the PostProcessor interface which allows&#xA;to define an import beautifier as a beautifier attribute in the Xpand&#xA;workflow component.&#xA;&#xA;@author nihe&#xA;@author Dominik Wetzel&#xA;@date 2011-10-12"/>
          <operation name="setFileExtensions" xmiGuid="_Y_qJnAD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_qJnQD0EeK7ac-mrkJBDw" annotation="Sets file extensions for files that should be scanned. It creates a regular expression, which looks like: &quot;.*(\\.extension|\\.extension|...)$&quot;"/>
            <parameter name="extension" xmiGuid="_Y_qJngD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_Y_qJnAD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_qJnwD0EeK7ac-mrkJBDw" annotation="the file extensions separated by (&quot;,&quot; or &quot;;&quot;)"/>
            </parameter>
          </operation>
          <operation name="setImportRegex" xmiGuid="_Y_qJoAD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_qJoQD0EeK7ac-mrkJBDw" annotation="Compiles the given string into a regular expression pattern to indicate imports. NOTE: Be sure to use appropriate regular expression syntax.&#xA;@see java.util.regex.Pattern for more information."/>
            <parameter name="regex" xmiGuid="_Y_qJogD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_Y_qJoAD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_qJowD0EeK7ac-mrkJBDw" annotation="the import regular expressions."/>
            </parameter>
          </operation>
          <operation name="setImportStrings" xmiGuid="_Y_qJpAD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_qJpQD0EeK7ac-mrkJBDw" annotation="Only for convenience. Makes an import regular expression.&#xA;@see #setImportRegex(java.lang.String)"/>
            <parameter name="importStrings" xmiGuid="_Y_qJpgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_Y_qJpAD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_qJpwD0EeK7ac-mrkJBDw" annotation="import strings (separated by &quot;,&quot; or &quot;;&quot;)"/>
            </parameter>
          </operation>
          <operation name="updateFileVisit" xmiGuid="_Y_qJlgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_qJlwD0EeK7ac-mrkJBDw" annotation="Searches for the File-ID in the given file and if found it searches the file for imports using the importRegex. After that it stores both in a map."/>
            <parameter name="file" xmiGuid="_Y_qJmAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_Y_qJlgD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_qJmQD0EeK7ac-mrkJBDw" annotation="file to be searched"/>
            </parameter>
          </operation>
          <operation name="updateComplete" xmiGuid="_Y_qJmgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
            <ownedComment xmiGuid="_Y_qJmwD0EeK7ac-mrkJBDw" annotation="Sets prepared to true after file tree walked completely."/>
          </operation>
          <operation name="putImports" xmiGuid="_Y_qJqAD0EeK7ac-mrkJBDw" visibility="protected" multiplicity="1" unique="true" returnType="//@externalTypes.8">
            <ownedComment xmiGuid="_Y_qJqQD0EeK7ac-mrkJBDw" annotation="Puts the before found imports onto the right place in the currently opened file.&#xA;&#xA;@return file as String with included imports&#xA;@throws NotPreparedException thrown if beautifier is not added as observer and/or if file tree not walked properly."/>
            <parameter name="fileContent" xmiGuid="_Y_qJqgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.8" operation="_Y_qJqAD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_qJqwD0EeK7ac-mrkJBDw" annotation="opened filehandle"/>
            </parameter>
            <return name="" xmiGuid="_Y_qJrAD0EeK7ac-mrkJBDw" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.8" operation="_Y_qJqAD0EeK7ac-mrkJBDw">
              <ownedComment xmiGuid="_Y_qJrQD0EeK7ac-mrkJBDw" annotation="file as String with included imports"/>
            </return>
          </operation>
          <property xsi:type="gcore:MAttribute" name="FILE_ID_STRING" xmiGuid="_Y_qJhgD0EeK7ac-mrkJBDw" stereotype="genesez.profile.stereotype.accessor" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" defaultvalue="&quot;@FILE-ID : (&quot;" static="true" final="true">
            <ownedComment xmiGuid="_Y_qJhwD0EeK7ac-mrkJBDw" annotation="To find the place where the file-ID stands."/>
            <taggedValue value="false" tag="//@anyStereotype.2/@property.0"/>
            <taggedValue value="false" tag="//@anyStereotype.2/@property.1"/>
            <taggedValue value="false" tag="//@anyStereotype.2/@property.2"/>
            <taggedValue value="false" tag="//@anyStereotype.2/@property.3"/>
          </property>
          <property xsi:type="gcore:MAttribute" name="importMap" xmiGuid="_Y_qJjAD0EeK7ac-mrkJBDw" visibility="protected" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.6">
            <ownedComment xmiGuid="_Y_qJjQD0EeK7ac-mrkJBDw" annotation="Map with FILE-IDs and corresponding imports"/>
          </property>
          <property xsi:type="gcore:MAttribute" name="extensionsRegex" xmiGuid="_Y_qJjwD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.7"/>
          <property xsi:type="gcore:MAttribute" name="importRegex" xmiGuid="_Y_qJkAD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.7"/>
          <property xsi:type="gcore:MAttribute" name="prepared" xmiGuid="_Y_qJkQD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="Boolean" defaultvalue="false"/>
          <property xsi:type="gcore:MAttribute" name="enabled" xmiGuid="_Y_qJkwD0EeK7ac-mrkJBDw" stereotype="_14_0_b6f02e1_1212567706968_503410_178" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="Boolean" defaultvalue="true">
            <taggedValue value="false" tag="//@anyStereotype.1/@property.0"/>
            <taggedValue value="true" tag="//@anyStereotype.1/@property.1"/>
            <taggedValue value="true" tag="//@anyStereotype.1/@property.2"/>
            <taggedValue value="true" tag="//@anyStereotype.1/@property.3"/>
          </property>
          <property xsi:type="gcore:MAttribute" name="logger" xmiGuid="_Y_qJgAD0EeK7ac-mrkJBDw_logger" visibility="public" upperBoundMultiplicity="1" unique="true" type="Log" defaultvalue="LogFactory.getLog(getClass())" final="true"/>
        </classifier>
      </nestedPackage>
    </nestedPackage>
  </nestedPackage>
  <nestedPackage name="org" xmiGuid="_3llb4ADyEeK7ac-mrkJBDw_org">
    <nestedPackage name="genesez" xmiGuid="_3llb4ADyEeK7ac-mrkJBDw_genesez">
      <nestedPackage name="m2t" xmiGuid="_3llb4ADyEeK7ac-mrkJBDw_m2t">
        <nestedPackage name="deletion" xmiGuid="_3llb4ADyEeK7ac-mrkJBDw">
          <classifier xsi:type="gcore:MInterface" name="RevisionControlSystem" xmiGuid="_qUp80AQdEeK-ufRtI9UaTA" visibility="public" abstract="true">
            <ownedComment xmiGuid="_qUp80QQdEeK-ufRtI9UaTA" annotation="Interface that provides different delete algorithms for different revision control systems (RCS).&#xA;&#xA;@author Dominik Wetzel&#xA;@date 2011-09-15"/>
            <operation name="getMetadataFolderName" xmiGuid="_qUp80gQdEeK-ufRtI9UaTA" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="String">
              <ownedComment xmiGuid="_qUp80wQdEeK-ufRtI9UaTA" annotation="gives the metadata foldername of the currently checked RCS."/>
              <return name="" xmiGuid="_qUp81AQdEeK-ufRtI9UaTA" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_qUp80gQdEeK-ufRtI9UaTA">
                <ownedComment xmiGuid="_qUp81QQdEeK-ufRtI9UaTA" annotation="the metadata folder name"/>
              </return>
            </operation>
            <operation name="setRepositoryRoot" xmiGuid="_qUp81gQdEeK-ufRtI9UaTA" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_qUp81wQdEeK-ufRtI9UaTA" annotation="a callback from the DeletionFeature to set the Path of the metadata folder"/>
              <parameter name="name" xmiGuid="_qUp82AQdEeK-ufRtI9UaTA" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_qUp81gQdEeK-ufRtI9UaTA">
                <ownedComment xmiGuid="_qUp82QQdEeK-ufRtI9UaTA" annotation="the directory where the metadata folder was found"/>
              </parameter>
            </operation>
            <operation name="markForDelete" xmiGuid="_qUp82gQdEeK-ufRtI9UaTA" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_qUp82wQdEeK-ufRtI9UaTA" annotation="deletes a file with the given path String"/>
              <parameter name="file" xmiGuid="_qUp83AQdEeK-ufRtI9UaTA" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_qUp82gQdEeK-ufRtI9UaTA">
                <ownedComment xmiGuid="_qUp83QQdEeK-ufRtI9UaTA" annotation="the file, that should be deleted"/>
              </parameter>
            </operation>
            <operation name="toString" xmiGuid="_qUp83gQdEeK-ufRtI9UaTA" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="String">
              <ownedComment xmiGuid="_qUp83wQdEeK-ufRtI9UaTA" annotation="The name that will be printed on the log"/>
              <return name="" xmiGuid="_qUp84AQdEeK-ufRtI9UaTA" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_qUp83gQdEeK-ufRtI9UaTA">
                <ownedComment xmiGuid="_qUp84QQdEeK-ufRtI9UaTA" annotation="name of the RCS"/>
              </return>
            </operation>
            <property xsi:type="gcore:MAttribute" name="REGISTRY" xmiGuid="_5alX4ATSEeKUpcpqfZ9tsA" visibility="public" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="_qUp80AQdEeK-ufRtI9UaTA"/>
          </classifier>
          <classifier xsi:type="gcore:MClass" name="RevisionControlSystemFinder" xmiGuid="_jOF40ATYEeKUpcpqfZ9tsA" stereotype="_-PH6MASsEeKUpcpqfZ9tsA" visibility="public" generalization="_ZACkPAD0EeK7ac-mrkJBDw" supplier="LogFactory">
            <ownedComment xmiGuid="_qz07IATYEeKUpcpqfZ9tsA" annotation="org.eclipse.jgit-1.0.0.201106090707-r.jar&#xA;svnkit.jar"/>
            <operation name="updateBeforeDir" xmiGuid="_v2WZ0ATYEeKUpcpqfZ9tsA" visibility="public" multiplicity="1" unique="true" returnType="void">
              <parameter name="dir" xmiGuid="_v2WZ0QTYEeKUpcpqfZ9tsA" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_v2WZ0ATYEeKUpcpqfZ9tsA"/>
            </operation>
            <operation name="updateComplete" xmiGuid="__fn0wATYEeKUpcpqfZ9tsA" visibility="public" multiplicity="1" unique="true" returnType="void"/>
            <operation name="checkAbove" xmiGuid="_ZAIq7QD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_ZAIq7gD0EeK7ac-mrkJBDw" annotation="Checks if there is another repository metadata folder above the given path."/>
              <parameter name="folder" xmiGuid="_oY4egATfEeKUpcpqfZ9tsA" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZAIq7QD0EeK7ac-mrkJBDw"/>
            </operation>
            <property xsi:type="gcore:MAttribute" name="available" xmiGuid="_48HSMATdEeKUpcpqfZ9tsA" visibility="public" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="_qUp80AQdEeK-ufRtI9UaTA" static="true"/>
            <property xsi:type="gcore:MAttribute" name="baseDir" xmiGuid="_ZAIq3AD0EeK7ac-mrkJBDw" stereotype="_14_0_b6f02e1_1212567706968_503410_178" visibility="protected" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String">
              <ownedComment xmiGuid="_ZAIq3QD0EeK7ac-mrkJBDw" annotation="The outputPath, where deletion should take place."/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.0"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.1"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.2"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.3"/>
            </property>
            <property xsi:type="gcore:MAttribute" name="logger" xmiGuid="_jOF40ATYEeKUpcpqfZ9tsA_logger" visibility="public" upperBoundMultiplicity="1" unique="true" type="Log" defaultvalue="LogFactory.getLog(getClass())" final="true"/>
          </classifier>
          <classifier xsi:type="gcore:MClass" name="GitRcs" xmiGuid="_bPxLoAS9EeKUpcpqfZ9tsA" visibility="public" realization="_qUp80AQdEeK-ufRtI9UaTA">
            <ownedComment xmiGuid="_bPxLoQS9EeKUpcpqfZ9tsA" annotation="Implementation of the delete algorithm for Git.&#xA;&#xA;@author Dominik Wetzel&#xA;@date 2011-09-15"/>
            <operation name="getMetadataFolderName" xmiGuid="_bPxLoAS9EeKUpcpqfZ9tsA__qUp80gQdEeK-ufRtI9UaTA" visibility="public" multiplicity="1" unique="true" returnType="String">
              <ownedComment xmiGuid="_bPxLoAS9EeKUpcpqfZ9tsA__qUp80gQdEeK-ufRtI9UaTA__qUp80wQdEeK-ufRtI9UaTA" annotation="gives the metadata foldername of the currently checked RCS."/>
              <return name="" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_bPxLoAS9EeKUpcpqfZ9tsA__qUp80gQdEeK-ufRtI9UaTA">
                <ownedComment annotation="the metadata folder name"/>
              </return>
            </operation>
            <operation name="setRepositoryRoot" xmiGuid="_bPxLoAS9EeKUpcpqfZ9tsA__qUp81gQdEeK-ufRtI9UaTA" visibility="public" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_bPxLoAS9EeKUpcpqfZ9tsA__qUp81gQdEeK-ufRtI9UaTA__qUp81wQdEeK-ufRtI9UaTA" annotation="a callback from the DeletionFeature to set the Path of the metadata folder"/>
              <parameter name="name" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_bPxLoAS9EeKUpcpqfZ9tsA__qUp81gQdEeK-ufRtI9UaTA">
                <ownedComment annotation="the directory where the metadata folder was found"/>
              </parameter>
            </operation>
            <operation name="markForDelete" xmiGuid="_bPxLoAS9EeKUpcpqfZ9tsA__qUp82gQdEeK-ufRtI9UaTA" visibility="public" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_bPxLoAS9EeKUpcpqfZ9tsA__qUp82gQdEeK-ufRtI9UaTA__qUp82wQdEeK-ufRtI9UaTA" annotation="deletes a file with the given path String"/>
              <parameter name="file" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_bPxLoAS9EeKUpcpqfZ9tsA__qUp82gQdEeK-ufRtI9UaTA">
                <ownedComment annotation="the file, that should be deleted"/>
              </parameter>
            </operation>
            <operation name="toString" xmiGuid="_bPxLoAS9EeKUpcpqfZ9tsA__qUp83gQdEeK-ufRtI9UaTA" visibility="public" multiplicity="1" unique="true" returnType="String">
              <ownedComment xmiGuid="_bPxLoAS9EeKUpcpqfZ9tsA__qUp83gQdEeK-ufRtI9UaTA__qUp83wQdEeK-ufRtI9UaTA" annotation="The name that will be printed on the log"/>
              <return name="" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_bPxLoAS9EeKUpcpqfZ9tsA__qUp83gQdEeK-ufRtI9UaTA">
                <ownedComment annotation="name of the RCS"/>
              </return>
            </operation>
            <property xsi:type="gcore:MAttribute" name="metadataFolderName" xmiGuid="_bPxLogS9EeKUpcpqfZ9tsA" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" defaultvalue="&quot;.git&quot;"/>
            <property xsi:type="gcore:MAttribute" name="rootDir" xmiGuid="_bPxLpAS9EeKUpcpqfZ9tsA" visibility="private" multiplicity="-1" lowerBoundMultiplicity="1" upperBoundMultiplicity="-1" unique="true" type="String"/>
          </classifier>
          <classifier xsi:type="gcore:MClass" name="SubversionRcs" xmiGuid="_bP3SQAS9EeKUpcpqfZ9tsA" visibility="public" realization="_qUp80AQdEeK-ufRtI9UaTA">
            <ownedComment xmiGuid="_bP3SQQS9EeKUpcpqfZ9tsA" annotation="Implementation of the delete algorithm for SVN.&#xA;&#xA;@author Dominik Wetzel&#xA;@date 2011-09-15"/>
            <operation name="getMetadataFolderName" xmiGuid="_bP3SQAS9EeKUpcpqfZ9tsA__qUp80gQdEeK-ufRtI9UaTA" visibility="public" multiplicity="1" unique="true" returnType="String">
              <ownedComment xmiGuid="_bP3SQAS9EeKUpcpqfZ9tsA__qUp80gQdEeK-ufRtI9UaTA__qUp80wQdEeK-ufRtI9UaTA" annotation="gives the metadata foldername of the currently checked RCS."/>
              <return name="" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_bP3SQAS9EeKUpcpqfZ9tsA__qUp80gQdEeK-ufRtI9UaTA">
                <ownedComment annotation="the metadata folder name"/>
              </return>
            </operation>
            <operation name="setRepositoryRoot" xmiGuid="_bP3SQAS9EeKUpcpqfZ9tsA__qUp81gQdEeK-ufRtI9UaTA" visibility="public" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_bP3SQAS9EeKUpcpqfZ9tsA__qUp81gQdEeK-ufRtI9UaTA__qUp81wQdEeK-ufRtI9UaTA" annotation="a callback from the DeletionFeature to set the Path of the metadata folder"/>
              <parameter name="name" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_bP3SQAS9EeKUpcpqfZ9tsA__qUp81gQdEeK-ufRtI9UaTA">
                <ownedComment annotation="the directory where the metadata folder was found"/>
              </parameter>
            </operation>
            <operation name="markForDelete" xmiGuid="_bP3SQAS9EeKUpcpqfZ9tsA__qUp82gQdEeK-ufRtI9UaTA" visibility="public" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_bP3SQAS9EeKUpcpqfZ9tsA__qUp82gQdEeK-ufRtI9UaTA__qUp82wQdEeK-ufRtI9UaTA" annotation="deletes a file with the given path String"/>
              <parameter name="file" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_bP3SQAS9EeKUpcpqfZ9tsA__qUp82gQdEeK-ufRtI9UaTA">
                <ownedComment annotation="the file, that should be deleted"/>
              </parameter>
            </operation>
            <operation name="toString" xmiGuid="_bP3SQAS9EeKUpcpqfZ9tsA__qUp83gQdEeK-ufRtI9UaTA" visibility="public" multiplicity="1" unique="true" returnType="String">
              <ownedComment xmiGuid="_bP3SQAS9EeKUpcpqfZ9tsA__qUp83gQdEeK-ufRtI9UaTA__qUp83wQdEeK-ufRtI9UaTA" annotation="The name that will be printed on the log"/>
              <return name="" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" operation="_bP3SQAS9EeKUpcpqfZ9tsA__qUp83gQdEeK-ufRtI9UaTA">
                <ownedComment annotation="name of the RCS"/>
              </return>
            </operation>
            <property xsi:type="gcore:MAttribute" name="metadataFolderName" xmiGuid="_bP3SQgS9EeKUpcpqfZ9tsA" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="String" defaultvalue="&quot;.svn&quot;"/>
            <property xsi:type="gcore:MAttribute" name="manager" xmiGuid="_bP3SRAS9EeKUpcpqfZ9tsA" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.9" defaultvalue="SVNClientManager.newInstance()"/>
            <property xsi:type="gcore:MAttribute" name="wcClient" xmiGuid="_bP3SRgS9EeKUpcpqfZ9tsA" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.10" defaultvalue="manager.getWCClient()"/>
          </classifier>
          <classifier xsi:type="gcore:MClass" name="DeletionFeature" xmiGuid="_ZAIqzgD0EeK7ac-mrkJBDw" specialization="_ZACkBgD0EeK7ac-mrkJBDw _ZAIqqwD0EeK7ac-mrkJBDw" visibility="public" abstract="true" generalization="_ZACkPAD0EeK7ac-mrkJBDw">
            <ownedComment xmiGuid="_ZAIqzwD0EeK7ac-mrkJBDw" annotation="Superclass for the FileDeletion. Contains methods to check which repository is in use and logs them.&#xA;&#xA;@author Dominik Wetzel&#xA;@date 2011-10-11"/>
            <operation name="updateComplete" xmiGuid="_ZAIqwgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_ZAIqwwD0EeK7ac-mrkJBDw" annotation="Sets prepared to true. Called if file tree walked completely."/>
            </operation>
            <operation name="delete" xmiGuid="_fxr7AATmEeKUpcpqfZ9tsA" visibility="public" abstract="true" multiplicity="1" unique="true" returnType="void"/>
            <property xsi:type="gcore:MAttribute" name="excludedDirectoryNames" xmiGuid="_ZAIq1AD0EeK7ac-mrkJBDw" stereotype="_14_0_b6f02e1_1212567706968_503410_178" visibility="protected" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String">
              <ownedComment xmiGuid="_ZAIq1QD0EeK7ac-mrkJBDw" annotation="Directory names that are excluded during file search"/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.0"/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.1"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.2"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.3"/>
            </property>
            <property xsi:type="gcore:MAttribute" name="excludedRelativePaths" xmiGuid="_ZAIq2AD0EeK7ac-mrkJBDw" stereotype="_14_0_b6f02e1_1212567706968_503410_178" visibility="protected" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String">
              <ownedComment xmiGuid="_ZAIq2QD0EeK7ac-mrkJBDw" annotation="paths relative to output directory that are excluded during the file search."/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.0"/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.1"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.2"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.3"/>
            </property>
            <property xsi:type="gcore:MAttribute" name="enabled" xmiGuid="_ZACkFAD0EeK7ac-mrkJBDw" stereotype="_14_0_b6f02e1_1212567706968_503410_178" visibility="protected" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="Boolean" defaultvalue="true">
              <ownedComment xmiGuid="_ZACkFQD0EeK7ac-mrkJBDw" annotation="switch for deletion"/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.0"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.1"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.2"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.3"/>
            </property>
            <property xsi:type="gcore:MAttribute" name="prepared" xmiGuid="_ZACkFwD0EeK7ac-mrkJBDw" visibility="protected" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="Boolean" defaultvalue="false">
              <ownedComment xmiGuid="_ZACkGAD0EeK7ac-mrkJBDw" annotation="trigger for the NotPreparedException"/>
            </property>
          </classifier>
          <classifier xsi:type="gcore:MClass" name="FileDeletion" xmiGuid="_ZACkBgD0EeK7ac-mrkJBDw" stereotype="_-PH6MASsEeKUpcpqfZ9tsA" visibility="public" generalization="_ZAIqzgD0EeK7ac-mrkJBDw" supplier="LogFactory">
            <ownedComment xmiGuid="_ZACkBwD0EeK7ac-mrkJBDw" annotation="The FileDeletionFeature handles the deletion of unchanged files during the generation process. With the filter-options the search can be specified.&#xA;&#xA;@author Dominik Wetzel&#xA;@date 2011-09-20"/>
            <operation name="updateFileVisit" xmiGuid="_ZACkJQD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
              <parameter name="file" xmiGuid="_ZACkJgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZACkJQD0EeK7ac-mrkJBDw"/>
            </operation>
            <operation name="updateComplete" xmiGuid="_ZACkJwD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_ZACkKAD0EeK7ac-mrkJBDw" annotation="Logs revision systems and found files, also sets prepared to true. Called if file tree completely walked."/>
            </operation>
            <operation name="getOldFileCount" xmiGuid="_ZACkKQD0EeK7ac-mrkJBDw" visibility="protected" multiplicity="1" unique="true" returnType="int">
              <ownedComment xmiGuid="_ZACkKgD0EeK7ac-mrkJBDw" annotation="Only for testing, gives the count of files found."/>
              <return name="" xmiGuid="_ZACkKwD0EeK7ac-mrkJBDw" direction="return" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="int" operation="_ZACkKQD0EeK7ac-mrkJBDw">
                <ownedComment xmiGuid="_ZACkLAD0EeK7ac-mrkJBDw" annotation="size of oldFiles set."/>
              </return>
            </operation>
            <operation name="deleteUntouchedFiles" xmiGuid="_ZACkNQD0EeK7ac-mrkJBDw" visibility="protected" multiplicity="-1" unique="true" returnType="String">
              <ownedComment xmiGuid="_ZACkNgD0EeK7ac-mrkJBDw" annotation="deletes the unchanged files. Therefore it compares the old last modification dates with the new ones.&#xA;&#xA;@throws NotPreparedException if prepare wasn't called before"/>
              <return name="" xmiGuid="_ZACkNwD0EeK7ac-mrkJBDw" direction="return" multiplicity="-1" lowerBoundMultiplicity="1" upperBoundMultiplicity="-1" unique="true" type="String" operation="_ZACkNQD0EeK7ac-mrkJBDw"/>
            </operation>
            <operation name="delete" xmiGuid="_ZACkBgD0EeK7ac-mrkJBDw__fxr7AATmEeKUpcpqfZ9tsA" visibility="public" multiplicity="1" unique="true" returnType="void"/>
            <property xsi:type="gcore:MAttribute" name="includedFiles" xmiGuid="_ZACkDAD0EeK7ac-mrkJBDw" stereotype="_14_0_b6f02e1_1212567706968_503410_178" visibility="private" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String">
              <ownedComment xmiGuid="_ZACkDQD0EeK7ac-mrkJBDw" annotation="the includes"/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.0"/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.1"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.2"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.3"/>
            </property>
            <property xsi:type="gcore:MAttribute" name="excludedFiles" xmiGuid="_ZACkEAD0EeK7ac-mrkJBDw" stereotype="_14_0_b6f02e1_1212567706968_503410_178" visibility="private" multiplicity="-1" upperBoundMultiplicity="-1" unique="true" type="String">
              <ownedComment xmiGuid="_ZACkEQD0EeK7ac-mrkJBDw" annotation="the excludes"/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.0"/>
              <taggedValue value="false" tag="//@anyStereotype.1/@property.1"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.2"/>
              <taggedValue value="true" tag="//@anyStereotype.1/@property.3"/>
            </property>
            <property xsi:type="gcore:MAttribute" name="files" xmiGuid="_ZACkGgD0EeK7ac-mrkJBDw" visibility="private" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.11">
              <ownedComment xmiGuid="_ZACkGwD0EeK7ac-mrkJBDw" annotation="the map for comparison between last modification dates"/>
            </property>
            <property xsi:type="gcore:MAttribute" name="logger" xmiGuid="_ZACkBgD0EeK7ac-mrkJBDw_logger" visibility="public" upperBoundMultiplicity="1" unique="true" type="Log" defaultvalue="LogFactory.getLog(getClass())" final="true"/>
          </classifier>
          <classifier xsi:type="gcore:MClass" name="FolderDeletion" xmiGuid="_ZAIqqwD0EeK7ac-mrkJBDw" stereotype="_-PH6MASsEeKUpcpqfZ9tsA" visibility="public" generalization="_ZAIqzgD0EeK7ac-mrkJBDw" supplier="LogFactory">
            <ownedComment xmiGuid="_ZAIqrAD0EeK7ac-mrkJBDw" annotation="Does the deletion of empty packages, it runs after generation and should run after deletion.&#xA;&#xA;@author Dominik Wetzel&#xA;@date 2011-10-11"/>
            <operation name="updateAfterDir" xmiGuid="_ZAIqvgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_ZAIqvwD0EeK7ac-mrkJBDw" annotation="Prepares the deletion of empty packages. Called after a directory was completely visited."/>
              <parameter name="dir" xmiGuid="_ZAIqwAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZAIqvgD0EeK7ac-mrkJBDw">
                <ownedComment xmiGuid="_ZAIqwQD0EeK7ac-mrkJBDw" annotation="the directory that will be checked."/>
              </parameter>
            </operation>
            <operation name="prepareDeletion" xmiGuid="_ZAIqxAD0EeK7ac-mrkJBDw" visibility="protected" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_ZAIqxQD0EeK7ac-mrkJBDw" annotation="Prepares deletion of empty packages (folders). It checks whether the subfolders are empty or not and stores the folder paths if its empty."/>
              <parameter name="dir" xmiGuid="_ZAIqxgD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.0" operation="_ZAIqxAD0EeK7ac-mrkJBDw">
                <ownedComment xmiGuid="_ZAIqxwD0EeK7ac-mrkJBDw" annotation="the current directory that will be checked"/>
              </parameter>
            </operation>
            <operation name="deleteEmptyFolders" xmiGuid="_ZAIqyAD0EeK7ac-mrkJBDw" visibility="protected" multiplicity="-1" unique="true" returnType="String">
              <ownedComment xmiGuid="_ZAIqyQD0EeK7ac-mrkJBDw" annotation="deletes previously found empty folders."/>
              <return name="" xmiGuid="_ZAIqygD0EeK7ac-mrkJBDw" direction="return" multiplicity="-1" lowerBoundMultiplicity="1" upperBoundMultiplicity="-1" unique="true" type="String" operation="_ZAIqyAD0EeK7ac-mrkJBDw">
                <ownedComment xmiGuid="_ZAIqywD0EeK7ac-mrkJBDw" annotation="set with deleted folders"/>
              </return>
            </operation>
            <operation name="delete" xmiGuid="_ZAIqqwD0EeK7ac-mrkJBDw__fxr7AATmEeKUpcpqfZ9tsA" visibility="public" multiplicity="1" unique="true" returnType="void"/>
            <property xsi:type="gcore:MAttribute" name="emptyFolders" xmiGuid="_ZAIqtwD0EeK7ac-mrkJBDw" visibility="private" multiplicity="-1" upperBoundMultiplicity="-1" ordered="true" type="//@externalTypes.0"/>
            <property xsi:type="gcore:MAttribute" name="logger" xmiGuid="_ZAIqqwD0EeK7ac-mrkJBDw_logger" visibility="public" upperBoundMultiplicity="1" unique="true" type="Log" defaultvalue="LogFactory.getLog(getClass())" final="true"/>
          </classifier>
        </nestedPackage>
      </nestedPackage>
    </nestedPackage>
  </nestedPackage>
  <nestedPackage name="org" xmiGuid="_KyKywASnEeKUpcpqfZ9tsA_org">
    <nestedPackage name="genesez" xmiGuid="_KyKywASnEeKUpcpqfZ9tsA_genesez">
      <nestedPackage name="m2t" xmiGuid="_KyKywASnEeKUpcpqfZ9tsA_m2t">
        <nestedPackage name="xpand" xmiGuid="_KyKywASnEeKUpcpqfZ9tsA">
          <classifier xsi:type="gcore:MClass" name="XpandImportPreserver" xmiGuid="_higo8ASlEeKUpcpqfZ9tsA" visibility="public" realization="//@externalTypes.12" generalization="_Y_qJgAD0EeK7ac-mrkJBDw">
            <operation name="beforeWriteAndClose" xmiGuid="_Y_qJrgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_Y_qJrwD0EeK7ac-mrkJBDw" annotation="This method is implemented from the oAW PostProcessor interface. It is called before the file will be written and closed."/>
              <parameter name="file" xmiGuid="_Y_qJsAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.13" operation="_Y_qJrgD0EeK7ac-mrkJBDw">
                <ownedComment xmiGuid="_Y_qJsQD0EeK7ac-mrkJBDw" annotation="the file which shall be modified."/>
              </parameter>
            </operation>
            <operation name="afterClose" xmiGuid="_Y_qJsgD0EeK7ac-mrkJBDw" visibility="public" multiplicity="1" unique="true" returnType="void">
              <ownedComment xmiGuid="_Y_qJswD0EeK7ac-mrkJBDw" annotation="This method is implemented from the oAW PostProcessor interface. It is called after the file is closed. Does nothing."/>
              <parameter name="file" xmiGuid="_Y_qJtAD0EeK7ac-mrkJBDw" direction="in" multiplicity="1" lowerBoundMultiplicity="1" upperBoundMultiplicity="1" unique="true" type="//@externalTypes.13" operation="_Y_qJsgD0EeK7ac-mrkJBDw">
                <ownedComment xmiGuid="_Y_qJtQD0EeK7ac-mrkJBDw" annotation="file which shall be modified."/>
              </parameter>
            </operation>
          </classifier>
        </nestedPackage>
      </nestedPackage>
    </nestedPackage>
  </nestedPackage>
  <nestedPackage name="externals" xmiGuid="_htG3QADzEeK7ac-mrkJBDw_externals">
    <nestedPackage name="java" xmiGuid="_htG3QADzEeK7ac-mrkJBDw"/>
  </nestedPackage>
  <nestedPackage name="externals" xmiGuid="_PYNE0AQaEeK-ufRtI9UaTA_externals">
    <nestedPackage name="xpand" xmiGuid="_PYNE0AQaEeK-ufRtI9UaTA"/>
  </nestedPackage>
  <association name="fileTreeWalkerFeature_fileTreeObserver_1" xmiGuid="_xlKnAwDxEeK7ac-mrkJBDw" end="_xlKnAADxEeK7ac-mrkJBDw"/>
  <primitiveTypes name="void" xmiGuid="void"/>
  <primitiveTypes name="String" xmiGuid="String"/>
  <primitiveTypes name="int" xmiGuid="int"/>
  <primitiveTypes name="Boolean" xmiGuid="Boolean"/>
  <anyStereotype name="log" xmiGuid="_-PH6MASsEeKUpcpqfZ9tsA"/>
  <anyStereotype name="accessor" xmiGuid="_14_0_b6f02e1_1212567706968_503410_178">
    <property name="getter" type="Boolean"/>
    <property name="setter" type="Boolean"/>
    <property name="add" type="Boolean"/>
    <property name="remove" type="Boolean"/>
  </anyStereotype>
  <anyStereotype name="accessor" xmiGuid="genesez.profile.stereotype.accessor">
    <property name="getter" type="Boolean"/>
    <property name="setter" type="Boolean"/>
    <property name="add" type="Boolean"/>
    <property name="remove" type="Boolean"/>
  </anyStereotype>
  <externalTypes specification="Path"/>
  <externalTypes specification="FileVisitor"/>
  <externalTypes specification="FileVisitResult"/>
  <externalTypes specification="BasicFileAttributes"/>
  <externalTypes specification="IOException"/>
  <externalTypes specification="FileVisitResult"/>
  <externalTypes specification="MapStringSetString"/>
  <externalTypes specification="Pattern"/>
  <externalTypes specification="CharSequence"/>
  <externalTypes specification="SVNClientManager"/>
  <externalTypes specification="WorkingCopyClient"/>
  <externalTypes specification="MapStringLong"/>
  <externalTypes specification="PostProcessor"/>
  <externalTypes specification="FileHandle"/>
  <externalTypes specification="File"/>
  <externalTypes specification="RuntimeException"/>
  <externalTypes specification="LogFactory"/>
  <externalTypes specification="StringBuffer"/>
  <externalTypes specification="FileHandle"/>
  <externalTypes specification="Path"/>
  <externalTypes name="Log" xmiGuid="Log"/>
  <externalTypes name="LogFactory" xmiGuid="LogFactory"/>
</gcore:MModel>
