/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */


/**
 * Frontend for the logging support based on Apache commons logging.
 * 
 * @author	Tobias Haubold <tobias.haubold@fh-zwickau.de> (maintainer)
 * @author	Nico Herbig <nico.herbig@fh-zwickau.de> (maintainer)
 */


/**
 * Selects the logger to use by it's name.
 *
 * @param	logger	The name of the logger.
 */
Void useLogger(String loggerName) :
	JAVA org.genesez.util.logging.GenesezLogger.selectLogger(java.lang.String);


/**
 * Logs a message with 'fatal' log level.
 */
Void logFatal(String message) :
	JAVA org.genesez.util.logging.GenesezLogger.fatal(java.lang.String);

/**
 * Logs the specified object with 'fatal' log level and returns it.
 */
Object logFatal(Object this) :
	logFatal( toString() ) -> 
	this;
	
/**
 * Logs the message with the specified object using 'fatal' log level and returns the object.
 */
Object logFatal(Object this, String message) :
	logFatal( message + toString() ) ->
	this;


/**
 * Logs a message with 'error' log level.
 */
Void logError(String message) :
	JAVA org.genesez.util.logging.GenesezLogger.error(java.lang.String);

/**
 * Logs the specified object with 'error' log level and returns it.
 */
Object logError(Object this) :
	logError( toString() ) ->
	this;
	
/**
 * Logs the message with the specified object using 'error' log level and returns the object.
 */
Object logError(Object this, String message) :
	logError( message + toString() ) ->
	this;


/**
 * Logs a message with 'warn' log level.
 */
Void logWarn(String message) :
	JAVA org.genesez.util.logging.GenesezLogger.warn(java.lang.String);

/**
 * Logs the specified object with 'warning' log level and returns it.
 */
Object logWarn(Object this) :
	logWarn( toString() ) ->
	this;

/**
 * Logs the message with the specified object using 'warn' log level and returns the object.
 */
Object logWarn(Object this, String message) :
	logWarn( message + toString() ) ->
	this;


/**
 * Logs a message with 'info' log level.
 */
Void logInfo(String message) :
	JAVA org.genesez.util.logging.GenesezLogger.info(java.lang.String);

/**
 * Logs the specified object with 'info' log level and returns it.
 */
Object logInfo(Object this) :
	logInfo( toString() ) ->
	this;
	
/**
 * Logs the message with the specified object using 'info' log level and returns the object.
 */
Object logInfo(Object this, String message) :
	logInfo( message + toString() ) ->
	this;


/**
 * Logs a message with 'debug' log level.
 */
Void logDebug(String message) :
	JAVA org.genesez.util.logging.GenesezLogger.debug(java.lang.String);

/**
 * Logs the specified object with 'debug' log level and returns it.
 */
Object logDebug(Object this) :
	logDebug( toString() ) -> 
	this;

/**
 * Logs the message with the specified object using 'debug' log level and returns the object.
 */
Object logDebug(Object this, String message) :
	logDebug( message + toString() ) ->
	this;


/**
 * Logs a message with 'trace' log level.
 */
Void logTrace(String message) :
	JAVA org.genesez.util.logging.GenesezLogger.trace(java.lang.String);

/**
 * Logs the specified object with 'trace' log level and returns it.
 */
Object logTrace(Object this) :
	logTrace( toString() ) ->
	this;

/**
 * Logs the message with the specified object using 'trace' log level and returns the object.
 */
Object logTrace(Object this, String message) :
	logTrace( message + toString() ) ->
	this;
