<?xml version="1.0" encoding="utf-8"?>

<workflow>

	<!-- 
		executes the transformation from genesez model to genesez testing model
		
		following parameters are required:
		==================================
		
		$genesezModel		name of the slot which holds the genesez model
		$testingModel		name of the slot which holds the genesez testing model
	 -->

	<!-- initialize the support for UML2 models -->
	<bean class="org.eclipse.xtend.typesystem.uml2.Setup" standardUML2Setup="true" />
	
	<!-- working with genesez models requires the genesez meta model -->
	<bean id="gcore" class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
		<metaModelPackage value="org.genesez.metamodel.gcore.GcorePackage" />
	</bean>

	<!-- working with genesez models requires the genesez meta model -->
	<bean id="gtesting" class="org.eclipse.xtend.typesystem.emf.EmfMetaModel">
		<metaModelPackage value="org.genesez.testing.gtesting.GtestingPackage" />
	</bean>
	
	<component id="gcore2gtesting" class="org.eclipse.xtend.XtendComponent">
		
		<metaModel idRef="gcore" />
		<metaModel idRef="gtesting" />
		
		<globalVarDef name="genesezmodel" value="${genesezModel}" />
		
		<!-- Run the model to model transformation itself. There's an 
			 extension file called genesez2testing.ext in the respective location
			 in the classpath that contains a function called transform that
			 takes an object of type gcore::Model as its parameter. Note that 
			 we can use the slot name genesezmodel as a variable in this expression. -->
		<invoke	value="org::genesez::testing::scripts::genesez2testing::transform(genesezmodel)" />
		
		<!-- Finally, the return value of the transformation is put into the 
			 generatorModel slot in the workflow. -->
		<outputSlot value="${testingModel}" />
	</component>

</workflow>
