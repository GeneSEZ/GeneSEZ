package de.genesez.j2meframework.sensors;/* PROTECTED REGION ID(java.mclassifier.other.import.code_12_5_8a7027a_1184754863065_958703_1059) ENABLED START *//* TODO put your imports here */import java.lang.String;/* PROTECTED REGION END *//** * The measure controller contains all methods from the measure interface. * @author nicher */public abstract class SensorController implements ISensorController {		// ////////////////////////////////////////////////////////////////////////	// generated variable, constant and association declarations	// ////////////////////////////////////////////////////////////////////////		/**	 * variable for association to sensor	 */	protected ISensor sensor;	/**	 * variable for association to sensorListener	 */	private java.util.Vector sensorListener = new java.util.Vector();		// ////////////////////////////////////////////////////////////////////////	// generated constructor implementations	// ////////////////////////////////////////////////////////////////////////		/**	 * @param  sensor  	 * @return  	 */	public SensorController(ISensor sensor) {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._12_5_8a7027a_1184786332336_927305_604) ENABLED START */		/* TODO put your own implementation code here */		this.sensor = sensor;		/* PROTECTED REGION END */	}		// ////////////////////////////////////////////////////////////////////////	// generated derived attribute method implementations	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// generated association method implementations	// ////////////////////////////////////////////////////////////////////////		/**	 * accessor for association to sensor	 */	public ISensor getSensor() {		return sensor;	}		/**	 * accessor for association to sensor	 */	public void insertInSensor(ISensor _in) {		if (sensor == _in) {			return;		}		sensor = _in;	}		/**	 * accessor for association to sensor	 */	public void removeFromSensor(ISensor _ex) {		if (sensor != _ex) {			return;		}		sensor = null;	}		/**	 * accessor for association to sensorListener	 */	public java.util.Vector getSensorListener() {		return sensorListener;	}		/**	 * accessor for association to sensorListener	 */	public void insertInSensorListener(ISensorListener _in) {		if (sensorListener.contains(_in)) {			return;		}		sensorListener.addElement(_in);	}		/**	 * accessor for association to sensorListener	 */	public void removeFromSensorListener(ISensorListener _ex) {		if (!sensorListener.contains(_ex)) {			return;		}		sensorListener.removeElement(_ex);	}		// ////////////////////////////////////////////////////////////////////////	// generated abstract method declaration	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// generated normal method implementations	// ////////////////////////////////////////////////////////////////////////		/**	 * Method which receives an measure event and send this event to all measure listeners.	 * @param  se  	 */	public void sendMeasureValue(SensorEvent se) {				/* PROTECTED REGION ID(java.moperation.implementation.operation.code._12_5_8a7027a_1185458791721_340899_1517) ENABLED START */		/* TODO put your own implementation code here */		ISensorListener listener;				// notify all listeners witch listens to the pressure sensor		for (int i = 0; i < sensorListener.size(); i++) {			listener = (ISensorListener) sensorListener.elementAt(i);			listener.receiveMeasureValue(se);		}		/* PROTECTED REGION END */	}		// ////////////////////////////////////////////////////////////////////////	// generated getter and setter method implementations	// ////////////////////////////////////////////////////////////////////////		// ////////////////////////////////////////////////////////////////////////	// own implementations	// ////////////////////////////////////////////////////////////////////////		/* PROTECTED REGION ID(java.mclassifier.implementation.owncode.code._12_5_8a7027a_1184754863065_958703_1059) ENABLED START */	/* TODO put your own implementation code here */	/* PROTECTED REGION END */}