/** *	templates for generation of JUnit classes have been written by * * André Pflüger * Email: admin@andre-pflueger.de * Date: 2008 Jun 10 * Version: 1.0 * */package server;/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658_ManualImports) ENABLED START *//* TODO: put your own testing code here */import org.junit.Test;import static org.junit.Assert.assertEquals;import static org.junit.Assert.assertFalse;import static org.junit.Assert.assertTrue;import org.junit.After;import org.junit.Before;/* PROTECTED REGION END *//** * generated JUnit test class for "Customer" * */public class CustomerTest {	/**	 * generated method for testing "existAccount()"	 */	@Test(timeout = 60000)	public void accountNotExist() {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658_accountNotExist) ENABLED START */		/* TODO: put your own testing code here */		//c.insertInAccounts(null);		assertFalse(c.existAccount(a.getAccountNumber()));		assertFalse(c.existAccount(1));		/* PROTECTED REGION END */	}		/**	 * generated method for testing "existAccount()"	 */	@Test(timeout = 60000)	public void accountExist() {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658_accountExist) ENABLED START */		/* TODO: put your own testing code here */		c.insertInAccounts(a);		assertTrue(c.existAccount(a.getAccountNumber()));		c.removeFromAccounts(a);		/* PROTECTED REGION END */	}		/**	 * generated method for testing "equals()"	 */	@Test(timeout = 60000)	public void equalsTest() {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658_equals) ENABLED START */		/* TODO: put your own testing code here */		assertFalse(t1.equals(c));		assertTrue(c.equals(c));		/* PROTECTED REGION END */	}		/**	 * generated method for testing "printAccounts()"	 */	@Test(timeout = 60000)	public void printAccountsTest() {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658_printAccounts) ENABLED START */		/* TODO: put your own testing code here */		c.printAccounts();		/* PROTECTED REGION END */	}		/**	 * generated method for testing "getAccount()"	 */	@Test(timeout = 60000)	public void getAccountTest() {		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658_getAccount) ENABLED START */		/* TODO: put your own testing code here */		c.insertInAccounts(a);		assertEquals(a, c.getAccount(a.getAccountNumber()));		c.removeFromAccounts(a);		/* PROTECTED REGION END */	}		/**	 * generated method for actions before all test methods run	 *	 */	@Before	public void setUp() {		t1 = new Customer();		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658_setUp) ENABLED START */		/* TODO: put your own testing code here */		c = new Customer("André", "Pflüger", "Äußere Schneeberger Straße 31", "08056", "Zwickau");		a = new Account();		/* PROTECTED REGION END */	}		/**	 * generated method for actions after all test methods have been run	 *	 */	@After	public void tearDown() {		t1 = null;		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658_tearDown) ENABLED START */		/* TODO: put your own testing code here */		c = null;		a = null;		/* PROTECTED REGION END */	}		/**	 * generated test method for getter and setter methods of 	 * primitive data types and strings	 *	 * implemented test cases: 	 *		getter and setter methods are available 	 *		getter method is available	 *	 * the test of a variable with only a setter method is not implemented	 * because the author holds that variables should be private or	 * protected	 *	 */	@Test	public void getterSetterTest() {				{			String temp;			temp = t1.getFirstname();			t1.setFirstname("test");			try {				assertEquals("test", t1.getFirstname());				t1.setFirstname(temp);			} catch (NullPointerException npe) {				assertFalse(true);			}		}				{			String temp;			temp = t1.getSirname();			t1.setSirname("test");			try {				assertEquals("test", t1.getSirname());				t1.setSirname(temp);			} catch (NullPointerException npe) {				assertFalse(true);			}		}				{			String temp;			temp = t1.getAddress();			t1.setAddress("test");			try {				assertEquals("test", t1.getAddress());				t1.setAddress(temp);			} catch (NullPointerException npe) {				assertFalse(true);			}		}				{			String temp;			temp = t1.getPostalCode();			t1.setPostalCode("test");			try {				assertEquals("test", t1.getPostalCode());				t1.setPostalCode(temp);			} catch (NullPointerException npe) {				assertFalse(true);			}		}				{			String temp;			temp = t1.getCity();			t1.setCity("test");			try {				assertEquals("test", t1.getCity());				t1.setCity(temp);			} catch (NullPointerException npe) {				assertFalse(true);			}		}				{			int temp;			temp = t1.getCustomerNumber();			assertEquals(temp, t1.getCustomerNumber());		}			}		/* generated variables for testing purposes */	Customer t1;		/* PROTECTED REGION ID(java.moperation.implementation.operation.code._14_0_590059_1207998915198_123982_658_restOfClass) ENABLED START */	/* TODO: put your own testing code here */	Customer c;	Account a;	/* PROTECTED REGION END */}