import codegenMm;

/**
	getter for the file path from a class
*/
String getFilePath(MClassifier clazz) :
	getPackagePath(clazz).replaceAll("\\.", "/");
	
/**
	get extension for MClass and others
*/
extensions(MClassifier c) :
	c.supertype.typeSelect(MClass).size > 0 ?
		" extends " + c.supertype.typeSelect(MClass).first().name :
		"";
	
/**
	treat MInterface differently
*/
extensions(MInterface c) :
	c.supertype.typeSelect(MInterface).size > 0 ?
		" extends " + c.supertype.typeSelect(MInterface).namelist() :
		"";
	
/**
	get implements for MClass and others
*/
implementedInterfaces(MClassifier c) :
	c.supertype.typeSelect(MInterface).size > 0 ?
		" implements " + c.supertype.typeSelect(MInterface).namelist() :
		"";

/**
	all modifiers for java fields
*/
modifiers (MAttribute a) :
	(a.visibility.length > 0 ? a.visibility + " " : "") +
	(a.static ? "static " : "") +
	(a.final ? "final " : "");

/**
	all modifiers for java methods
*/
modifiers (MOperation o) :
	(o.visibility.length > 0 ? o.visibility + " " : "") +
	(o.static ? "static " : "") +
	(o.final ? "final " : "") +
	(o.abstract ? "abstract " : "");
	
/**
	parameter list for operations
*/
arguments(MOperation op) :
	op.parameter.collect(e|e.asArgument()).itemlist(", ");
	
/**
	exceptions thrown by method
*/
exceptions(MOperation op) :
	op.raisedException.size > 0 ? " throws " + op.raisedException.name.itemlist(", ") : "";
	
/**
	declaration for return value parameter
*/
returnValDecl(MOperation op) :
	switch (op.returnType.name) {
	case "void" : ""
	case "Void" : ""
	case "int" : op.returnType.name + " retval = 0;\n"
	case "Integer" : op.returnType.name + " retval = 0;\n"
	case "boolean" : op.returnType.name + " retval = false;\n"
	case "Boolean" : op.returnType.name + " retval = false;\n"
	default : op.returnType.name + " retval = null;\n"
	};

/**
	return the return value parameter
*/
returnValReturn(MOperation op) :
	switch (op.returnType.name) {
	case "void" : ""
	case "Void" : ""
	default : "return retval;\n"
	};

/**
	default value for attributes
*/
defaultValue(MAttribute a) :
	a.defaultvalue.length > 0 ? " = " + a.defaultvalue : "";

// ------------------- private helper functions ----------------------------------

private String namelist(List l) :
	l.size > 1 ? ((MElement) l.first()).name + ", " + namelist(l.withoutFirst()) :
		( l.size > 0 ? ((MElement) l.first()).name :
		  "" );

private String itemlist(List l, String sep) :
	l.size > 1 ? l.first().toString() + sep + itemlist(l.withoutFirst(), sep) :
		( l.size > 0 ? l.first().toString() :
		  "" );

private asArgument(MParameter p) :
	p.type.name + " " + p.name;
	
// ------------------- JAVA functions --------------------------------------------
/**
	getter for the package path from a class
*/
String getPackagePath(MClassifier clazz) :
	JAVA de.genesez.util.TransUtils.getPackagePath(codegenMm.MClassifier);

	/**
	getter for the current timestamp
 */
String getTimestamp() :
	JAVA de.genesez.util.TransUtils.getTimestamp();

/**
	getter for the current system user who is logged on
 */
String getUser() :
	JAVA de.genesez.util.TransUtils.getUser();
