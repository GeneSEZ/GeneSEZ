<?xml version="1.0" encoding="UTF-8"?>
<uml:Profile xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/1.0.0/UML" xmi:id="_R5Rb8P05Edu9nZizHLBSZg" name="UML Standard Profile" metamodelReference="_R5RcPv05Edu9nZizHLBSZg">
  <eAnnotations xmi:id="_R5Rb8f05Edu9nZizHLBSZg" source="attributes">
    <details xmi:id="_R5Rb8v05Edu9nZizHLBSZg" key="version" value="0"/>
  </eAnnotations>
  <eAnnotations xmi:id="_R5Rb8_05Edu9nZizHLBSZg" source="ePackages">
    <contents xmi:type="ecore:EPackage" xmi:id="_R5Rb9P05Edu9nZizHLBSZg" name="UMLStandardProfile_0" nsURI="http:///UMLStandardProfile_0_R40wAP05Edu9nZizHLBSZg.profile.uml2" nsPrefix="UMLStandardProfile_0">
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5Rb9f05Edu9nZizHLBSZg" name="UMLStandardProfile__metamodel">
        <eAnnotations xmi:id="_R5Rb9v05Edu9nZizHLBSZg" source="stereotype" references="_R5RcQf05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5Rb9_05Edu9nZizHLBSZg" name="UMLStandardProfile__responsibility">
        <eAnnotations xmi:id="_R5Rb-P05Edu9nZizHLBSZg" source="stereotype" references="_R5RcSP05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5Rb-f05Edu9nZizHLBSZg" name="UMLStandardProfile__create">
        <eAnnotations xmi:id="_R5Rb-v05Edu9nZizHLBSZg" source="stereotype" references="_R5RcT_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5Rb-_05Edu9nZizHLBSZg" name="UMLStandardProfile__implement">
        <eAnnotations xmi:id="_R5Rb_P05Edu9nZizHLBSZg" source="stereotype" references="_R5RcW_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5Rb_f05Edu9nZizHLBSZg" name="UMLStandardProfile__source" eSuperTypes="_R5Rb__05Edu9nZizHLBSZg">
        <eAnnotations xmi:id="_R5Rb_v05Edu9nZizHLBSZg" source="stereotype" references="_R5RcYv05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5Rb__05Edu9nZizHLBSZg" name="UMLStandardProfile__file">
        <eAnnotations xmi:id="_R5RcAP05Edu9nZizHLBSZg" source="stereotype" references="_R5RdN_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcAf05Edu9nZizHLBSZg" name="UMLStandardProfile__instantiate">
        <eAnnotations xmi:id="_R5RcAv05Edu9nZizHLBSZg" source="stereotype" references="_R5Rcav05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcA_05Edu9nZizHLBSZg" name="UMLStandardProfile__derive">
        <eAnnotations xmi:id="_R5RcBP05Edu9nZizHLBSZg" source="stereotype" references="_R5Rccf05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcBf05Edu9nZizHLBSZg" name="UMLStandardProfile__executable" eSuperTypes="_R5Rb__05Edu9nZizHLBSZg">
        <eAnnotations xmi:id="_R5RcBv05Edu9nZizHLBSZg" source="stereotype" references="_R5RceP05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcB_05Edu9nZizHLBSZg" name="UMLStandardProfile__modelLibrary">
        <eAnnotations xmi:id="_R5RcCP05Edu9nZizHLBSZg" source="stereotype" references="_R5RcgP05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcCf05Edu9nZizHLBSZg" name="UMLStandardProfile__call">
        <eAnnotations xmi:id="_R5RcCv05Edu9nZizHLBSZg" source="stereotype" references="_R5Rch_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcC_05Edu9nZizHLBSZg" name="UMLStandardProfile__specification">
        <eAnnotations xmi:id="_R5RcDP05Edu9nZizHLBSZg" source="stereotype" references="_R5Rcjv05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcDf05Edu9nZizHLBSZg" name="UMLStandardProfile__realization">
        <eAnnotations xmi:id="_R5RcDv05Edu9nZizHLBSZg" source="stereotype" references="_R5Rclf05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcD_05Edu9nZizHLBSZg" name="UMLStandardProfile__process">
        <eAnnotations xmi:id="_R5RcEP05Edu9nZizHLBSZg" source="stereotype" references="_R5RcnP05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcEf05Edu9nZizHLBSZg" name="UMLStandardProfile__service">
        <eAnnotations xmi:id="_R5RcEv05Edu9nZizHLBSZg" source="stereotype" references="_R5Rco_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcE_05Edu9nZizHLBSZg" name="UMLStandardProfile__utility">
        <eAnnotations xmi:id="_R5RcFP05Edu9nZizHLBSZg" source="stereotype" references="_R5Rcqv05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcFf05Edu9nZizHLBSZg" name="UMLStandardProfile__framework">
        <eAnnotations xmi:id="_R5RcFv05Edu9nZizHLBSZg" source="stereotype" references="_R5Rcsf05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcF_05Edu9nZizHLBSZg" name="UMLStandardProfile__library" eSuperTypes="_R5Rb__05Edu9nZizHLBSZg">
        <eAnnotations xmi:id="_R5RcGP05Edu9nZizHLBSZg" source="stereotype" references="_R5RcuP05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcGf05Edu9nZizHLBSZg" name="UMLStandardProfile__boundary">
        <eAnnotations xmi:id="_R5RcGv05Edu9nZizHLBSZg" source="stereotype" references="_R5RcwP05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcG_05Edu9nZizHLBSZg" name="UMLStandardProfile__document" eSuperTypes="_R5Rb__05Edu9nZizHLBSZg">
        <eAnnotations xmi:id="_R5RcHP05Edu9nZizHLBSZg" source="stereotype" references="_R5Rcx_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcHf05Edu9nZizHLBSZg" name="UMLStandardProfile__send">
        <eAnnotations xmi:id="_R5RcHv05Edu9nZizHLBSZg" source="stereotype" references="_R5Rcz_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcH_05Edu9nZizHLBSZg" name="UMLStandardProfile__implementationClass">
        <eAnnotations xmi:id="_R5RcIP05Edu9nZizHLBSZg" source="stereotype" references="_R5Rc1v05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcIf05Edu9nZizHLBSZg" name="UMLStandardProfile__script" eSuperTypes="_R5Rb__05Edu9nZizHLBSZg">
        <eAnnotations xmi:id="_R5RcIv05Edu9nZizHLBSZg" source="stereotype" references="_R5Rc3f05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcI_05Edu9nZizHLBSZg" name="UMLStandardProfile__buildComponent">
        <eAnnotations xmi:id="_R5RcJP05Edu9nZizHLBSZg" source="stereotype" references="_R5Rc5f05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcJf05Edu9nZizHLBSZg" name="UMLStandardProfile__auxiliary">
        <eAnnotations xmi:id="_R5RcJv05Edu9nZizHLBSZg" source="stereotype" references="_R5Rc7P05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcJ_05Edu9nZizHLBSZg" name="UMLStandardProfile__systemModel">
        <eAnnotations xmi:id="_R5RcKP05Edu9nZizHLBSZg" source="stereotype" references="_R5Rc8_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcKf05Edu9nZizHLBSZg" name="UMLStandardProfile__entity">
        <eAnnotations xmi:id="_R5RcKv05Edu9nZizHLBSZg" source="stereotype" references="_R5Rc-v05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcK_05Edu9nZizHLBSZg" name="UMLStandardProfile__assembly">
        <eAnnotations xmi:id="_R5RcLP05Edu9nZizHLBSZg" source="stereotype" references="_R5RdAf05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcLf05Edu9nZizHLBSZg" name="UMLStandardProfile__destroy">
        <eAnnotations xmi:id="_R5RcLv05Edu9nZizHLBSZg" source="stereotype" references="_R5RdB_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcL_05Edu9nZizHLBSZg" name="UMLStandardProfile__subsystem">
        <eAnnotations xmi:id="_R5RcMP05Edu9nZizHLBSZg" source="stereotype" references="_R5RdDv05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcMf05Edu9nZizHLBSZg" name="UMLStandardProfile__control">
        <eAnnotations xmi:id="_R5RcMv05Edu9nZizHLBSZg" source="stereotype" references="_R5RdFf05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcM_05Edu9nZizHLBSZg" name="UMLStandardProfile__focus">
        <eAnnotations xmi:id="_R5RcNP05Edu9nZizHLBSZg" source="stereotype" references="_R5RdHP05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcNf05Edu9nZizHLBSZg" name="UMLStandardProfile__delegate">
        <eAnnotations xmi:id="_R5RcNv05Edu9nZizHLBSZg" source="stereotype" references="_R5RdI_05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcN_05Edu9nZizHLBSZg" name="UMLStandardProfile__refine">
        <eAnnotations xmi:id="_R5RcOP05Edu9nZizHLBSZg" source="stereotype" references="_R5RdKf05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcOf05Edu9nZizHLBSZg" name="UMLStandardProfile__type">
        <eAnnotations xmi:id="_R5RcOv05Edu9nZizHLBSZg" source="stereotype" references="_R5RdMP05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_R5RcO_05Edu9nZizHLBSZg" name="UMLStandardProfile__trace">
        <eAnnotations xmi:id="_R5RcPP05Edu9nZizHLBSZg" source="stereotype" references="_R5RdPv05Edu9nZizHLBSZg"/>
      </eClassifiers>
      <eSubpackages xmi:id="_R5RcPf05Edu9nZizHLBSZg" name="datatypes" nsURI="http:///UMLStandardProfile_0/datatypes.ecore" nsPrefix="UMLStandardProfile_0.datatypes"/>
    </contents>
  </eAnnotations>
  <packageImport xmi:id="_R5RcPv05Edu9nZizHLBSZg" visibility="private">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m8qbA686EdiEh75YJ_3n8g"/>
  </packageImport>
  <packageImport xmi:id="_R5RcP_05Edu9nZizHLBSZg">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML2_LIBRARIES/UML2PrimitiveTypes.library.uml2#_EfRZoK86EdieaYgxtVWN8Q"/>
  </packageImport>
  <packageImport xmi:id="_R5RcQP05Edu9nZizHLBSZg">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML2_LIBRARIES/JavaPrimitiveTypes.library.uml2#_RjmyoK86EdieaYgxtVWN8Q"/>
  </packageImport>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RcQf05Edu9nZizHLBSZg" name="metamodel">
    <ownedComment xmi:id="_R5RcQv05Edu9nZizHLBSZg" body="A model of a model, that typically contains metaclasses."/>
    <ownedAttribute xmi:id="_R5RcQ_05Edu9nZizHLBSZg" name="base$Model" visibility="private" association="_R5RcRP05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9ndba86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcRP05Edu9nZizHLBSZg" memberEnd="_R5RcRf05Edu9nZizHLBSZg _R5RcQ_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RcRf05Edu9nZizHLBSZg" name="extension$metamodel" visibility="private" type="_R5RcQf05Edu9nZizHLBSZg" association="_R5RcRP05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RcRv05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RcR_05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RcSP05Edu9nZizHLBSZg" name="responsibility">
    <ownedComment xmi:id="_R5RcSf05Edu9nZizHLBSZg" body="A contract or an obligation of an element in its relationship&#xA;to other elements."/>
    <ownedAttribute xmi:id="_R5RcSv05Edu9nZizHLBSZg" name="base$Usage" visibility="private" association="_R5RcS_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9nda686EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcS_05Edu9nZizHLBSZg" memberEnd="_R5RcSv05Edu9nZizHLBSZg _R5RcTP05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RcTP05Edu9nZizHLBSZg" name="extension$responsibility" visibility="private" type="_R5RcSP05Edu9nZizHLBSZg" association="_R5RcS_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RcTf05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RcTv05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RcT_05Edu9nZizHLBSZg" name="create">
    <ownedComment xmi:id="_R5RcUP05Edu9nZizHLBSZg" body="A usage dependency denoting that the client classifier&#xA;creates instances of the supplier classifier.&#xA;Specifies that the designated feature creates an instance of the classifier to which the feature is attached. May be promoted to the Classifier containing the feature."/>
    <ownedAttribute xmi:id="_R5RcUf05Edu9nZizHLBSZg" name="base$BehavioralFeature" visibility="private" association="_R5RcU_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9I8Kq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_R5RcUv05Edu9nZizHLBSZg" name="base$Usage" visibility="private" association="_R5RcV_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9nda686EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcU_05Edu9nZizHLBSZg" memberEnd="_R5RcVP05Edu9nZizHLBSZg _R5RcUf05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RcVP05Edu9nZizHLBSZg" name="extension$create" visibility="private" type="_R5RcT_05Edu9nZizHLBSZg" association="_R5RcU_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RcVf05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RcVv05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcV_05Edu9nZizHLBSZg" memberEnd="_R5RcUv05Edu9nZizHLBSZg _R5RcWP05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RcWP05Edu9nZizHLBSZg" name="extension$create" visibility="private" type="_R5RcT_05Edu9nZizHLBSZg" association="_R5RcV_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RcWf05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RcWv05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RcW_05Edu9nZizHLBSZg" name="implement">
    <ownedComment xmi:id="_R5RcXP05Edu9nZizHLBSZg" body="A component definition that is not intended to have a&#xA;specification itself. Rather, it is an implementation for a&#xA;separate «specification» to which it has a Dependency."/>
    <ownedAttribute xmi:id="_R5RcXf05Edu9nZizHLBSZg" name="base$Component" visibility="private" association="_R5RcXv05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9VJjK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcXv05Edu9nZizHLBSZg" memberEnd="_R5RcX_05Edu9nZizHLBSZg _R5RcXf05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RcX_05Edu9nZizHLBSZg" name="extension$implement" visibility="private" type="_R5RcW_05Edu9nZizHLBSZg" association="_R5RcXv05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RcYP05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RcYf05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RcYv05Edu9nZizHLBSZg" name="source">
    <ownedComment xmi:id="_R5RcY_05Edu9nZizHLBSZg" body="Denotes a source file that can be compiled into an executable file.Subclass of &lt;&lt;file>>."/>
    <generalization xmi:id="_R5RcZP05Edu9nZizHLBSZg" general="_R5RdN_05Edu9nZizHLBSZg"/>
    <ownedAttribute xmi:id="_R5RcZf05Edu9nZizHLBSZg" name="base$Artifact" visibility="private" association="_R5RcZv05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2Oq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcZv05Edu9nZizHLBSZg" memberEnd="_R5RcZ_05Edu9nZizHLBSZg _R5RcZf05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RcZ_05Edu9nZizHLBSZg" name="extension$source" visibility="private" type="_R5RcYv05Edu9nZizHLBSZg" association="_R5RcZv05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RcaP05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rcaf05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rcav05Edu9nZizHLBSZg" name="instantiate">
    <ownedComment xmi:id="_R5Rca_05Edu9nZizHLBSZg" body="A usage dependency among classifiers indicating that&#xA;operations on the client create instances of the supplier."/>
    <ownedAttribute xmi:id="_R5RcbP05Edu9nZizHLBSZg" name="base$Usage" visibility="private" association="_R5Rcbf05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9nda686EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rcbf05Edu9nZizHLBSZg" memberEnd="_R5Rcbv05Edu9nZizHLBSZg _R5RcbP05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rcbv05Edu9nZizHLBSZg" name="extension$instantiate" visibility="private" type="_R5Rcav05Edu9nZizHLBSZg" association="_R5Rcbf05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rcb_05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RccP05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rccf05Edu9nZizHLBSZg" name="derive">
    <ownedComment xmi:id="_R5Rccv05Edu9nZizHLBSZg" body="Specifies a derivation relationship among model elements&#xA;that are usually, but not necessarily, of the same type. A&#xA;derived dependency specifies that the client may be&#xA;computed from the supplier. The mapping specifies the&#xA;computation. The client may be implemented for design&#xA;reasons, such as efficiency, even though it is logically&#xA;redundant."/>
    <ownedAttribute xmi:id="_R5Rcc_05Edu9nZizHLBSZg" name="base$Abstraction" visibility="private" association="_R5RcdP05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2YK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcdP05Edu9nZizHLBSZg" memberEnd="_R5Rcdf05Edu9nZizHLBSZg _R5Rcc_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rcdf05Edu9nZizHLBSZg" name="extension$derive" visibility="private" type="_R5Rccf05Edu9nZizHLBSZg" association="_R5RcdP05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rcdv05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rcd_05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RceP05Edu9nZizHLBSZg" name="executable">
    <ownedComment xmi:id="_R5Rcef05Edu9nZizHLBSZg" body="Denotes a program that may be run on a node.&#xA;Denotes a program file that can be executed on a computer system.Subclass of &lt;&lt;file>>."/>
    <generalization xmi:id="_R5Rcev05Edu9nZizHLBSZg" general="_R5RdN_05Edu9nZizHLBSZg"/>
    <ownedAttribute xmi:id="_R5Rce_05Edu9nZizHLBSZg" name="base$Artifact" visibility="private" association="_R5RcfP05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2Oq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcfP05Edu9nZizHLBSZg" memberEnd="_R5Rcff05Edu9nZizHLBSZg _R5Rce_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rcff05Edu9nZizHLBSZg" name="extension$executable" visibility="private" type="_R5RceP05Edu9nZizHLBSZg" association="_R5RcfP05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rcfv05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rcf_05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RcgP05Edu9nZizHLBSZg" name="modelLibrary">
    <ownedComment xmi:id="_R5Rcgf05Edu9nZizHLBSZg" body="A package that contains model elements which are inteded to&#xA;be reused by other packages. Model libraries are frequently&#xA;used in conjunction with applied profiles. This is expressed&#xA;by defining a dependency between a profile and a model&#xA;library package, or by defining a model library as contained&#xA;in a profile package. The classes in a model library are not&#xA;stereotypes and tagged definitions extending the metamodel.&#xA;A model library is analogous to a class library in some&#xA;programming languages.&#xA;When a model library is defined as a part of a profile, it is&#xA;imported or deleted with the application or removal of the&#xA;profile. The profile is implicitly applied to its model library.&#xA;In the other case, when the model library is defined as an&#xA;external package imported by a profile, the profile requires&#xA;that the model library be there in the model at the stage of the&#xA;profile application. The application or the removal of the&#xA;profile does not affect the presence of the model library&#xA;elements."/>
    <ownedAttribute xmi:id="_R5Rcgv05Edu9nZizHLBSZg" name="base$Package" visibility="private" association="_R5Rcg_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m82oYa86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rcg_05Edu9nZizHLBSZg" memberEnd="_R5RchP05Edu9nZizHLBSZg _R5Rcgv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RchP05Edu9nZizHLBSZg" name="extension$modelLibrary" visibility="private" type="_R5RcgP05Edu9nZizHLBSZg" association="_R5Rcg_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rchf05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rchv05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rch_05Edu9nZizHLBSZg" name="call">
    <ownedComment xmi:id="_R5RciP05Edu9nZizHLBSZg" body="A usage dependency whose source is an operation and&#xA;whose target is an operation. The relationship may also be&#xA;subsumed to the class containing an operation, with the&#xA;meaning that there exists an operation in the class to which&#xA;the dependency applies.&#xA;A call dependency specifies that the source operation or an&#xA;operation in the source class invokes the target operation or&#xA;an operation in the target class. A call dependency may&#xA;connect a source operation to any target operation that is&#xA;within scope including, but not limited to, operations of the&#xA;enclosing classifier and operations of other visible&#xA;classifiers."/>
    <ownedAttribute xmi:id="_R5Rcif05Edu9nZizHLBSZg" name="base$Usage" visibility="private" association="_R5Rciv05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9nda686EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rciv05Edu9nZizHLBSZg" memberEnd="_R5Rci_05Edu9nZizHLBSZg _R5Rcif05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rci_05Edu9nZizHLBSZg" name="extension$call" visibility="private" type="_R5Rch_05Edu9nZizHLBSZg" association="_R5Rciv05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RcjP05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rcjf05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rcjv05Edu9nZizHLBSZg" name="specification">
    <ownedComment xmi:id="_R5Rcj_05Edu9nZizHLBSZg" body="A classifier that specifies a domain of objects without&#xA;defining the physical implementation of those objects. For&#xA;example, a Component stereotyped by «specification» will&#xA;only have provided and required interfaces, and is not&#xA;intended to have any realizingClassifiers as part of its&#xA;definition. This differs from «type» because a «type» can&#xA;have features such as attributes and methods which is useful&#xA;to analysts modeling systems. Also see: «realization»"/>
    <ownedAttribute xmi:id="_R5RckP05Edu9nZizHLBSZg" name="base$Classifier" visibility="private" association="_R5Rckf05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88vAa86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rckf05Edu9nZizHLBSZg" memberEnd="_R5RckP05Edu9nZizHLBSZg _R5Rckv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rckv05Edu9nZizHLBSZg" name="extension$specification" visibility="private" type="_R5Rcjv05Edu9nZizHLBSZg" association="_R5Rckf05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rck_05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RclP05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rclf05Edu9nZizHLBSZg" name="realization">
    <ownedComment xmi:id="_R5Rclv05Edu9nZizHLBSZg" body="A classifier that specifies a domain of objects and that also&#xA;defines the physical implementation of those objects. For&#xA;example, a Component stereotyped by «realization» will&#xA;only have realizing Classifiers that implement behavior&#xA;specified by a separate «specification» Component. See&#xA;«specification». This differs from «implementation class»&#xA;because an «implementation class» ia a realization of a Class&#xA;which can have features such as attributes and methods&#xA;which is useful to system designers."/>
    <ownedAttribute xmi:id="_R5Rcl_05Edu9nZizHLBSZg" name="base$Classifier" visibility="private" association="_R5RcmP05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88vAa86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcmP05Edu9nZizHLBSZg" memberEnd="_R5Rcmf05Edu9nZizHLBSZg _R5Rcl_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rcmf05Edu9nZizHLBSZg" name="extension$realization" visibility="private" type="_R5Rclf05Edu9nZizHLBSZg" association="_R5RcmP05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rcmv05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rcm_05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RcnP05Edu9nZizHLBSZg" name="process">
    <ownedComment xmi:id="_R5Rcnf05Edu9nZizHLBSZg" body="A transaction based component."/>
    <ownedAttribute xmi:id="_R5Rcnv05Edu9nZizHLBSZg" name="base$Component" visibility="private" association="_R5Rcn_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9VJjK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rcn_05Edu9nZizHLBSZg" memberEnd="_R5RcoP05Edu9nZizHLBSZg _R5Rcnv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RcoP05Edu9nZizHLBSZg" name="extension$process" visibility="private" type="_R5RcnP05Edu9nZizHLBSZg" association="_R5Rcn_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rcof05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rcov05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rco_05Edu9nZizHLBSZg" name="service">
    <ownedComment xmi:id="_R5RcpP05Edu9nZizHLBSZg" body="A stateless, functional component (computes a value)."/>
    <ownedAttribute xmi:id="_R5Rcpf05Edu9nZizHLBSZg" name="base$Component" visibility="private" association="_R5Rcpv05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9VJjK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rcpv05Edu9nZizHLBSZg" memberEnd="_R5Rcpf05Edu9nZizHLBSZg _R5Rcp_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rcp_05Edu9nZizHLBSZg" name="extension$service" visibility="private" type="_R5Rco_05Edu9nZizHLBSZg" association="_R5Rcpv05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RcqP05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rcqf05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rcqv05Edu9nZizHLBSZg" name="utility">
    <ownedComment xmi:id="_R5Rcq_05Edu9nZizHLBSZg" body="A class that has no instances, but rather denotes a named&#xA;collection of non-member attributes and operations, all of&#xA;which are class-scoped."/>
    <ownedAttribute xmi:id="_R5RcrP05Edu9nZizHLBSZg" name="base$Class" visibility="private" association="_R5Rcrf05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88uxq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rcrf05Edu9nZizHLBSZg" memberEnd="_R5Rcrv05Edu9nZizHLBSZg _R5RcrP05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rcrv05Edu9nZizHLBSZg" name="extension$utility" visibility="private" type="_R5Rcqv05Edu9nZizHLBSZg" association="_R5Rcrf05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rcr_05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RcsP05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rcsf05Edu9nZizHLBSZg" name="framework">
    <ownedComment xmi:id="_R5Rcsv05Edu9nZizHLBSZg" body="A package that contains model elements which specify a&#xA;reusable architecture for all or part of a&#xA;system. Frameworks typically include classes, patterns or&#xA;templates. When frameworks are specialized for an&#xA;application domain, they are sometimes referred to as&#xA;application frameworks."/>
    <ownedAttribute xmi:id="_R5Rcs_05Edu9nZizHLBSZg" name="base$Package" visibility="private" association="_R5RctP05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m82oYa86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RctP05Edu9nZizHLBSZg" memberEnd="_R5Rcs_05Edu9nZizHLBSZg _R5Rctf05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rctf05Edu9nZizHLBSZg" name="extension$framework" visibility="private" type="_R5Rcsf05Edu9nZizHLBSZg" association="_R5RctP05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rctv05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rct_05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RcuP05Edu9nZizHLBSZg" name="library">
    <ownedComment xmi:id="_R5Rcuf05Edu9nZizHLBSZg" body="Denotes a static or dynamic library.&#xA;Denotes a static or dynamic library file. Subclass of &lt;&lt;file>>."/>
    <generalization xmi:id="_R5Rcuv05Edu9nZizHLBSZg" general="_R5RdN_05Edu9nZizHLBSZg"/>
    <ownedAttribute xmi:id="_R5Rcu_05Edu9nZizHLBSZg" name="base$Artifact" visibility="private" association="_R5RcvP05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2Oq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RcvP05Edu9nZizHLBSZg" memberEnd="_R5Rcvf05Edu9nZizHLBSZg _R5Rcu_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rcvf05Edu9nZizHLBSZg" name="extension$library" visibility="private" type="_R5RcuP05Edu9nZizHLBSZg" association="_R5RcvP05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rcvv05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rcv_05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RcwP05Edu9nZizHLBSZg" name="boundary">
    <ownedComment xmi:id="_R5Rcwf05Edu9nZizHLBSZg" body="A boundary is a class that lies on the periphery of a system, but within it. It interacts with actors outside the system as well as with entity, control, and other boundary classes within the system."/>
    <ownedAttribute xmi:id="_R5Rcwv05Edu9nZizHLBSZg" name="base$Class" visibility="private" association="_R5Rcw_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88uxq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rcw_05Edu9nZizHLBSZg" memberEnd="_R5RcxP05Edu9nZizHLBSZg _R5Rcwv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RcxP05Edu9nZizHLBSZg" name="extension$boundary" visibility="private" type="_R5RcwP05Edu9nZizHLBSZg" association="_R5Rcw_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rcxf05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rcxv05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rcx_05Edu9nZizHLBSZg" name="document">
    <ownedComment xmi:id="_R5RcyP05Edu9nZizHLBSZg" body="A generic file that is not a «source» file or «executable».&#xA;Subclass of «file»."/>
    <generalization xmi:id="_R5Rcyf05Edu9nZizHLBSZg" general="_R5RdN_05Edu9nZizHLBSZg"/>
    <ownedAttribute xmi:id="_R5Rcyv05Edu9nZizHLBSZg" name="base$Artifact" visibility="private" association="_R5Rcy_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2Oq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rcy_05Edu9nZizHLBSZg" memberEnd="_R5RczP05Edu9nZizHLBSZg _R5Rcyv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RczP05Edu9nZizHLBSZg" name="extension$document" visibility="private" type="_R5Rcx_05Edu9nZizHLBSZg" association="_R5Rcy_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rczf05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rczv05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rcz_05Edu9nZizHLBSZg" name="send">
    <ownedComment xmi:id="_R5Rc0P05Edu9nZizHLBSZg" body="A usage dependency whose source is an operation and&#xA;whose target is a signal, specifying that the source sends the&#xA;target signal."/>
    <ownedAttribute xmi:id="_R5Rc0f05Edu9nZizHLBSZg" name="base$Usage" visibility="private" association="_R5Rc0v05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9nda686EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rc0v05Edu9nZizHLBSZg" memberEnd="_R5Rc0_05Edu9nZizHLBSZg _R5Rc0f05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rc0_05Edu9nZizHLBSZg" name="extension$send" visibility="private" type="_R5Rcz_05Edu9nZizHLBSZg" association="_R5Rc0v05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rc1P05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rc1f05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rc1v05Edu9nZizHLBSZg" name="implementationClass">
    <ownedComment xmi:id="_R5Rc1_05Edu9nZizHLBSZg" body="The implementation of a class in some programming&#xA;language (e.g., C++, Smalltalk, Java) in which an instance&#xA;may not have more than one class. This is in contrast to&#xA;Class, for which an instance may have multiple classes at one&#xA;time and may gain or lose classes over time, and an object (a&#xA;child of instance) may dynamically&#xA;have multiple classes.&#xA;An Implementation class is said to realize a Classifier if it&#xA;provides all of the operations defined for the Classifier with&#xA;the same behavior as specified for the Classifier's operations.&#xA;An Implementation Class may realize a number of different&#xA;Types. Note that the physical attributes and associations of&#xA;the Implementation class do not have to be the same as those&#xA;of any Classifier it realizes and that the Implementation&#xA;Class may provide methods for its operations in terms of its&#xA;physical attributes and associations. See also: «type»."/>
    <ownedAttribute xmi:id="_R5Rc2P05Edu9nZizHLBSZg" name="base$Class" visibility="private" association="_R5Rc2f05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88uxq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rc2f05Edu9nZizHLBSZg" memberEnd="_R5Rc2v05Edu9nZizHLBSZg _R5Rc2P05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rc2v05Edu9nZizHLBSZg" name="extension$implementationClass" visibility="private" type="_R5Rc1v05Edu9nZizHLBSZg" association="_R5Rc2f05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rc2_05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rc3P05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rc3f05Edu9nZizHLBSZg" name="script">
    <ownedComment xmi:id="_R5Rc3v05Edu9nZizHLBSZg" body="A script file that can be interpreted by a computer system.&#xA;Subclass of «file»."/>
    <generalization xmi:id="_R5Rc3_05Edu9nZizHLBSZg" general="_R5RdN_05Edu9nZizHLBSZg"/>
    <ownedAttribute xmi:id="_R5Rc4P05Edu9nZizHLBSZg" name="base$Artifact" visibility="private" association="_R5Rc4f05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2Oq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rc4f05Edu9nZizHLBSZg" memberEnd="_R5Rc4v05Edu9nZizHLBSZg _R5Rc4P05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rc4v05Edu9nZizHLBSZg" name="extension$script" visibility="private" type="_R5Rc3f05Edu9nZizHLBSZg" association="_R5Rc4f05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rc4_05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rc5P05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rc5f05Edu9nZizHLBSZg" name="buildComponent">
    <ownedComment xmi:id="_R5Rc5v05Edu9nZizHLBSZg" body="A collection of elements defined for the purpose of system level decelopment activities, such as compilation and versioning."/>
    <ownedAttribute xmi:id="_R5Rc5_05Edu9nZizHLBSZg" name="base$Component" visibility="private" association="_R5Rc6P05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9VJjK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rc6P05Edu9nZizHLBSZg" memberEnd="_R5Rc6f05Edu9nZizHLBSZg _R5Rc5_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rc6f05Edu9nZizHLBSZg" name="extension$buildComponent" visibility="private" type="_R5Rc5f05Edu9nZizHLBSZg" association="_R5Rc6P05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rc6v05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rc6_05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rc7P05Edu9nZizHLBSZg" name="auxiliary">
    <ownedComment xmi:id="_R5Rc7f05Edu9nZizHLBSZg" body="A class that supports another more central or fundamental&#xA;class, typically by implementing secondary logic or control&#xA;flow. The class that the auxiliary supports may be defined&#xA;explicitly using a Focus class or implicitly by a dependency&#xA;relationship. Auxiliary classes are typically used together&#xA;with Focus classes, and are particularly useful for specifying&#xA;the secondary business logic or control flow of components&#xA;during design. See also: «focus»."/>
    <ownedAttribute xmi:id="_R5Rc7v05Edu9nZizHLBSZg" name="base$Class" visibility="private" association="_R5Rc7_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88uxq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rc7_05Edu9nZizHLBSZg" memberEnd="_R5Rc8P05Edu9nZizHLBSZg _R5Rc7v05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rc8P05Edu9nZizHLBSZg" name="extension$auxiliary" visibility="private" type="_R5Rc7P05Edu9nZizHLBSZg" association="_R5Rc7_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rc8f05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rc8v05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rc8_05Edu9nZizHLBSZg" name="systemModel">
    <ownedComment xmi:id="_R5Rc9P05Edu9nZizHLBSZg" body="A systemModel is a stereotyped model that contains a&#xA;collection of models of the same physical system. A&#xA;systemModel also contains all relationships and&#xA;constraints between model elements contained in&#xA;different models."/>
    <ownedAttribute xmi:id="_R5Rc9f05Edu9nZizHLBSZg" name="base$Model" visibility="private" association="_R5Rc9v05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9ndba86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rc9v05Edu9nZizHLBSZg" memberEnd="_R5Rc9f05Edu9nZizHLBSZg _R5Rc9_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rc9_05Edu9nZizHLBSZg" name="extension$systemModel" visibility="private" type="_R5Rc8_05Edu9nZizHLBSZg" association="_R5Rc9v05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rc-P05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5Rc-f05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5Rc-v05Edu9nZizHLBSZg" name="entity">
    <ownedComment xmi:id="_R5Rc-_05Edu9nZizHLBSZg" body="A persistent information component representing a business&#xA;concept."/>
    <ownedAttribute xmi:id="_R5Rc_P05Edu9nZizHLBSZg" name="base$Class" visibility="private" association="_R5Rc_f05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88uxq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5Rc_f05Edu9nZizHLBSZg" memberEnd="_R5Rc_P05Edu9nZizHLBSZg _R5Rc_v05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5Rc_v05Edu9nZizHLBSZg" name="extension$entity" visibility="private" type="_R5Rc-v05Edu9nZizHLBSZg" association="_R5Rc_f05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5Rc__05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdAP05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdAf05Edu9nZizHLBSZg" name="assembly">
    <ownedAttribute xmi:id="_R5RdAv05Edu9nZizHLBSZg" name="base$Dependency" visibility="private" association="_R5RdA_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2JK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdA_05Edu9nZizHLBSZg" memberEnd="_R5RdBP05Edu9nZizHLBSZg _R5RdAv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdBP05Edu9nZizHLBSZg" name="extension$assembly" visibility="private" type="_R5RdAf05Edu9nZizHLBSZg" association="_R5RdA_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdBf05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdBv05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdB_05Edu9nZizHLBSZg" name="destroy">
    <ownedComment xmi:id="_R5RdCP05Edu9nZizHLBSZg" body="Specifies that the designated feature destroys an instance of the classifier to which the feature is attached. May be promoted to the classifier containing the feature."/>
    <ownedAttribute xmi:id="_R5RdCf05Edu9nZizHLBSZg" name="base$BehavioralFeature" visibility="private" association="_R5RdCv05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9I8Kq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdCv05Edu9nZizHLBSZg" memberEnd="_R5RdCf05Edu9nZizHLBSZg _R5RdC_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdC_05Edu9nZizHLBSZg" name="extension$destroy" visibility="private" type="_R5RdB_05Edu9nZizHLBSZg" association="_R5RdCv05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdDP05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdDf05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdDv05Edu9nZizHLBSZg" name="subsystem">
    <ownedComment xmi:id="_R5RdD_05Edu9nZizHLBSZg" body="A unit of hierarchical decomposition for large systems. A&#xA;subsystem is commonly instantiated indirectly. Definitions&#xA;of subsystems vary widely among domains and methods,&#xA;and it is expected that domain and method profiles will&#xA;specialize this construct. A subsystem may be defined to&#xA;have specification and realization elements. See also:&#xA;«specification» and «realization»."/>
    <ownedAttribute xmi:id="_R5RdEP05Edu9nZizHLBSZg" name="base$Component" visibility="private" association="_R5RdEf05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9VJjK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdEf05Edu9nZizHLBSZg" memberEnd="_R5RdEP05Edu9nZizHLBSZg _R5RdEv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdEv05Edu9nZizHLBSZg" name="extension$subsystem" visibility="private" type="_R5RdDv05Edu9nZizHLBSZg" association="_R5RdEf05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdE_05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdFP05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdFf05Edu9nZizHLBSZg" name="control">
    <ownedComment xmi:id="_R5RdFv05Edu9nZizHLBSZg" body="A control is a class whose objects manage interactions between collections of objects.&#xA;A control class usually has behavior that is specific for one use case, and a control object usually does not outlive the use case realizations in which it participates."/>
    <ownedAttribute xmi:id="_R5RdF_05Edu9nZizHLBSZg" name="base$Class" visibility="private" association="_R5RdGP05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88uxq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdGP05Edu9nZizHLBSZg" memberEnd="_R5RdF_05Edu9nZizHLBSZg _R5RdGf05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdGf05Edu9nZizHLBSZg" name="extension$control" visibility="private" type="_R5RdFf05Edu9nZizHLBSZg" association="_R5RdGP05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdGv05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdG_05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdHP05Edu9nZizHLBSZg" name="focus">
    <ownedComment xmi:id="_R5RdHf05Edu9nZizHLBSZg" body="A class that defines the core logic or control flow for one or&#xA;more auxiliary classes that support it. Support classes may be&#xA;defined explicitly using Auxiliary classes or implicitly by&#xA;dependency relationships. Focus classes are typically used&#xA;together with one or more Auxiliary classes, and are&#xA;particularly useful for specifying the core business logic or&#xA;control flow of components during design. See also:&#xA;«auxiliary»."/>
    <ownedAttribute xmi:id="_R5RdHv05Edu9nZizHLBSZg" name="base$Class" visibility="private" association="_R5RdH_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88uxq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdH_05Edu9nZizHLBSZg" memberEnd="_R5RdIP05Edu9nZizHLBSZg _R5RdHv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdIP05Edu9nZizHLBSZg" name="extension$focus" visibility="private" type="_R5RdHP05Edu9nZizHLBSZg" association="_R5RdH_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdIf05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdIv05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdI_05Edu9nZizHLBSZg" name="delegate">
    <ownedAttribute xmi:id="_R5RdJP05Edu9nZizHLBSZg" name="base$Dependency" visibility="private" association="_R5RdJf05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2JK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdJf05Edu9nZizHLBSZg" memberEnd="_R5RdJP05Edu9nZizHLBSZg _R5RdJv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdJv05Edu9nZizHLBSZg" name="extension$delegate" visibility="private" type="_R5RdI_05Edu9nZizHLBSZg" association="_R5RdJf05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdJ_05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdKP05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdKf05Edu9nZizHLBSZg" name="refine">
    <ownedComment xmi:id="_R5RdKv05Edu9nZizHLBSZg" body="Specifies a refinement relationship between model elements&#xA;at different semantic levels, such as analysis and design. The&#xA;mapping specifies the relationship between the two elements&#xA;or sets of elements. The mapping may or may not be&#xA;computable, and it may be unidirectional or bidirectional.&#xA;Refinement can be used to model transformations from&#xA;analysis to design and other such changes."/>
    <ownedAttribute xmi:id="_R5RdK_05Edu9nZizHLBSZg" name="base$Abstraction" visibility="private" association="_R5RdLP05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2YK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdLP05Edu9nZizHLBSZg" memberEnd="_R5RdK_05Edu9nZizHLBSZg _R5RdLf05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdLf05Edu9nZizHLBSZg" name="extension$refine" visibility="private" type="_R5RdKf05Edu9nZizHLBSZg" association="_R5RdLP05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdLv05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdL_05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdMP05Edu9nZizHLBSZg" name="type">
    <ownedComment xmi:id="_R5RdMf05Edu9nZizHLBSZg" body="A class that specifies a domain of objects together with the&#xA;operations applicable to the objects, without defining the&#xA;physical implementation of those objects. However, it may&#xA;have attributes and associations. Behavioral specifications&#xA;for type operations may be expressed using, for example,&#xA;activity diagrams. An object may have at most one&#xA;implementation class, however it may conform to multiple&#xA;different types. See also: «implementationClass»."/>
    <ownedAttribute xmi:id="_R5RdMv05Edu9nZizHLBSZg" name="base$Class" visibility="private" association="_R5RdM_05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m88uxq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdM_05Edu9nZizHLBSZg" memberEnd="_R5RdNP05Edu9nZizHLBSZg _R5RdMv05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdNP05Edu9nZizHLBSZg" name="extension$type" visibility="private" type="_R5RdMP05Edu9nZizHLBSZg" association="_R5RdM_05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdNf05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdNv05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdN_05Edu9nZizHLBSZg" name="file">
    <ownedComment xmi:id="_R5RdOP05Edu9nZizHLBSZg" body="A physical file in the context of the system developed."/>
    <ownedAttribute xmi:id="_R5RdOf05Edu9nZizHLBSZg" name="base$Artifact" visibility="private" association="_R5RdOv05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2Oq86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdOv05Edu9nZizHLBSZg" memberEnd="_R5RdOf05Edu9nZizHLBSZg _R5RdO_05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdO_05Edu9nZizHLBSZg" name="extension$file" visibility="private" type="_R5RdN_05Edu9nZizHLBSZg" association="_R5RdOv05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdPP05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdPf05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Stereotype" xmi:id="_R5RdPv05Edu9nZizHLBSZg" name="trace">
    <ownedComment xmi:id="_R5RdP_05Edu9nZizHLBSZg" body="Specifies a trace relationship between model elements or sets&#xA;of model elements that represent the same concept in&#xA;different models. Traces are mainly used for tracking&#xA;requirements and changes across models. Since model&#xA;changes can occur in both directions, the directionality of the&#xA;dependency can often be ignored. The mapping specifies the&#xA;relationship between the two, but it is rarely computable and&#xA;is usually informal."/>
    <ownedAttribute xmi:id="_R5RdQP05Edu9nZizHLBSZg" name="base$Abstraction" visibility="private" association="_R5RdQf05Edu9nZizHLBSZg">
      <type xmi:type="uml:Class" href="pathmap://UML2_METAMODELS/UML2.metamodel.uml2#_m9C2YK86EdiEh75YJ_3n8g"/>
    </ownedAttribute>
    <nestedClassifier xmi:type="uml:Extension" xmi:id="_R5RdQf05Edu9nZizHLBSZg" memberEnd="_R5RdQv05Edu9nZizHLBSZg _R5RdQP05Edu9nZizHLBSZg">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_R5RdQv05Edu9nZizHLBSZg" name="extension$trace" visibility="private" type="_R5RdPv05Edu9nZizHLBSZg" association="_R5RdQf05Edu9nZizHLBSZg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5RdQ_05Edu9nZizHLBSZg" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5RdRP05Edu9nZizHLBSZg"/>
      </ownedEnd>
    </nestedClassifier>
  </ownedMember>
  <ownedMember xmi:type="uml:Package" xmi:id="_R5RdRf05Edu9nZizHLBSZg" name="datatypes"/>
  <ownedMember xmi:type="uml:Constraint" xmi:id="_R5RdRv05Edu9nZizHLBSZg" name="xor">
    <ownedComment xmi:id="_R5RdR_05Edu9nZizHLBSZg" body="The {xor} constraint is applied to a set of associations, specifying that&#xA;over that set, exactly one is manifest for each associated instance. Xor is&#xA;an exclusive or (not inclusive or) constraint."/>
    <specification xmi:type="uml:OpaqueExpression" xmi:id="_R5RdSP05Edu9nZizHLBSZg" body="xor"/>
  </ownedMember>
</uml:Profile>
