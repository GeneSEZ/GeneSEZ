<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE section 
	PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.1//EN" "http://www.oasis-open.org/docbook/xml/simple/1.1/sdocbook.dtd"
>
<section>

	<title>Short overview of MDA and MDSD</title>

	<para>
		The model-driven approach is concerned about the effective usage
		of
		application models in the field of software engineering. Effective
		means a usage that goes farther than documentation or overview of the
		software.
		Therefore there are two different approaches:
	</para>

	<variablelist>

		<varlistentry>

			<term>
				<emphasis role="bold">interpretive</emphasis>
			</term>

			<listitem>

				<para>
					Models will be interpreted during runtime.
				</para>

			</listitem>

		</varlistentry>

		<varlistentry>

			<term>
				<emphasis role="bold">generative</emphasis>
			</term>

			<listitem>

				<para>
					Models are used during development time and part of the
					software will automatically be deduced from the models.
				</para>

			</listitem>

		</varlistentry>

	</variablelist>

	<para>
		We use the generative approach. The MDA
		(Model Driven Architecture) is
		a
		<ulink url="http://www.omg.org/mda/specs.htm">collection
			of specifications
		</ulink>
		and an approach from the OMG (
		<ulink url="http://www.omg.org/">Object
			Management Group
		</ulink>
		) for semi-automatic software engineering.
		The MDSD (Model Driven
		Software
		Development) is the pragmatic procedure for
		generation of
		software-artifacts from models.
	</para>

	<para>
		The models needn't to be formal, they must only be deterministic
		evaluable. This is mostly ensured by meta-models. In
		<xref linkend="de.genesez.intro.mdsd" />
		you see an simplified representation of the generative, model-driven
		approach.
	</para>

	<figure id="de.genesez.intro.mdsd">

		<title>Simplified representation of the generative, model-driven
			approach.
		</title>

		<mediaobject>
			<imageobject role="html">
				<imagedata align="center" fileref="../../../images/de.genesez.intro.mdsd.png" />
			</imageobject>
			<imageobject role="fo">
				<imagedata align="center" fileref="../../../images/de.genesez.intro.mdsd.png"
					scalefit="1" width="100%" />
			</imageobject>
		</mediaobject>
	</figure>

	<para>
		Generating source code from application models is done by
		transformations. Transformations can also change models or create
		models out of others in previous steps. In the context of MDA
		model-transformations are also called
		<emphasis>Mapping
			Functions
		</emphasis>
		. Furthermore the MDA introduces the terms
		<emphasis>Platform Independent Model</emphasis>
		(PIM) and
		<emphasis>Platform Specific Model</emphasis>
		(PSM) but lets the concrete description and differentiation open as a
		<emphasis>Matter of Degree</emphasis>
		.
	</para>

	<para>
		Often quoted as goals of the generative, model-driven approaches
		are reuse of architectures, always same high quality of the source
		code and improvement in the rate of development.
	</para>

	<para>
		In a generative, model-driven engineering-process there arises
		a
		considerable amount of source code artifacts (e. g.
		transformation
		descriptions (source code templates, other templates,
		scripts),
		components) for the automatic generation of source code from
		models.
		The creation of such artifacts is in most cases costlier than
		manually
		implementing the source code that this artifacts generate.
		Therefore,
		to achieve the goals mentioned above, the artifacts should
		be high
		reusable and should also be used across other projects.
	</para>

	<para>
		The used meta-models are really important for the generative,
		model-drive engineering process, because all source code artifacts are
		depending on the used meta-model.
	</para>

</section>
