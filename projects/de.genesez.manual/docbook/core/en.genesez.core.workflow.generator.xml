<?xml version='1.0'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="en.genesez.platforms.common.workflow.components.generator">
	<title>Generator</title>
	<para>
		The generator executes the model-to-text transformation.
		Therefore
		following parameters are available, but it depends on the
		value of
		<link
			linkend="en.genesez.platforms.common.workflow.components.generator.template">
			<literal>template</literal>
		</link>
		which parameters are used for the
		transformation. Usually the generator
		should be the basic class for
		modell-to-text transformations.
	</para>
	<variablelist>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.template">
			<term>
				<emphasis role="bold">template</emphasis>
			</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<listitem>
				<para>is used to indicate the XPand Template and the name of
					the
					define-block, which is called at the model-to-text
					transformation.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.outputDir">
			<term>
				<emphasis role="bold">outputDir</emphasis>
			</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<listitem>
				<para>is used to indicate the directory, where the generated
					source
					code is stored or should be stored. If the directory
					does not exist
					it will be created.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				<emphasis role="bold">proRegDir</emphasis>
			</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default: value of
				<link
					linkend="en.genesez.platforms.common.workflow.components.generator.outputDir">
					<literal>outputDir</literal>
				</link>
			</term>
			<listitem>
				<para>is used to indicate the directory, where source code with
					protected regions, which should be safed during the
					transformation,
					will be stored.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.typeMappingFile">
			<term>typeMappingFile</term>
			<term>
				<emphasis>multi-value</emphasis>
			</term>
			<listitem>
				<para>is used to indicate the type-mapping files, which should
					be
					used during the model-to-text transformation.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.basePackage">
			<term>basePackage</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<listitem>
				<para>is used to indicate a package, which should be used as
					basis
					for the model-to-text transformation. Everything will be
					generated
					in this package.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>useModelNameAsBasePackage</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>false</literal>
			</term>
			<listitem>
				<para>
					this indicates whether the name of the model-element
					(root-element
					of the GeneSEZ model) should be used as
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.basePackage">
						base package
					</link>
					.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>generateSectionComments</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>true</literal>
			</term>
			<listitem>
				<para>indicates if single lined commentaries should be created,
					which will subdivide the source code.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.accessorsForStereotypes">
			<term>accessorsForStereotypes</term>
			<term>optional</term>
			<term>single-value</term>
			<term>
				default:
				<literal>entity</literal>
			</term>
			<listitem>
				<para>
					specificates a through commata seperated list with names
					of
					stereotypes which implicates the generation of
					<literal>
						get
					</literal>
					- and
					<literal>set</literal>
					-methods.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.accessorStereotype">
			<term>accessorStereotype</term>
			<term>optional</term>
			<term>single-value</term>
			<term>
				default:
				<literal>accessor</literal>
			</term>
			<listitem>
				<para>
					indicates the name of the stereotype
					<literal>
						accessor
					</literal>
					. Default is the name of the stereotype in
					the GeneSEZ UML profile.
					If another name is used it must have
					at least the the same tags, as
					the stereotype
					<literal>
						accessor
					</literal>
					from the GeneSEZ UML profile (if the
					interpratetion logic for
					accessors is not replaced or
					extended).
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.usePropertyVisibilityForAccessors">
			<term>usePropertyVisibilityForAccessors</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>false</literal>
			</term>
			<listitem>
				<para>
					this indicates if the visibility of the attributes are
					generated
					always
					<literal>private</literal>
					and the given
					visibilities to the attributes are used for the
					accessors
					(getter and setter).
				</para>
				<para>For example there is a protected attribute in your model,
					then
					if this parameter is set to true the attribute will be
					private and
					the accessors will be protected in the generated
					code.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.excludePackage">
			<term>excludePackage</term>
			<term>
				<emphasis>multi-value</emphasis>
			</term>
			<listitem>
				<para>use to indicate GeneSEZ packages via the qualified name,
					to be
					excluded during the model-to-text transformation.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>excludePackages</term>
			<term>
				<emphasis>multi-value</emphasis>
			</term>
			<term>
				default:
				<literal>UML Standard Profile</literal>
			</term>
			<listitem>
				<para>
					same as
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.excludePackage">
						<emphasis>exclude package</emphasis>
					</link>
					with the
					difference, that one can give a commata seperated list with
					qualified names of GeneSEZ packages.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.aspectTemplate">
			<term>aspectTemplate</term>
			<term>
				<emphasis>multi-value</emphasis>
			</term>
			<listitem>
				<para>
					use to indicate XPand templates with
					<emphasis>Around</emphasis>
					statements. With this Advices for
					template-
					<emphasis>define</emphasis>
					-statements could be
					defined.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>aspectTemplates</term>
			<term>
				<emphasis>multi-value</emphasis>
			</term>
			<listitem>
				<para>
					same as
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.aspectTemplate">
						<emphasis>aspectTemplate</emphasis>
					</link>
					with the difference,
					that one can give a commata seperated list of
					XPand-templates.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.aspectScript">
			<term>aspectScript</term>
			<term>
				<emphasis>multi-value</emphasis>
			</term>
			<listitem>
				<para>
					use to indicate XTend scripts with
					<emphasis>around</emphasis>
					statements. With this Advices for
					XTend functions could be defined.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>aspectScripts</term>
			<term>
				<emphasis>multi-value</emphasis>
			</term>
			<listitem>
				<para>
					same as
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.aspectScript">
						<emphasis>aspectScript</emphasis>
					</link>
					with the difference,
					that one can give a commata seperated list of
					XTend-scripts.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.slot">
			<term>slot</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>genesezModel</literal>
			</term>
			<listitem>
				<para>indicates the name of the slot, which contains the
					GeneSEZ
					model that is used for the model-to-text
					transformation.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.prExcludes">
			<term>prExcludes</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>.svn</literal>
			</term>
			<listitem>
				<para>indicates files and directories, that are excluded in the
					search for protected regions.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.prDefaultExcludes">
			<term>prDefaultExcludes</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>false</literal>
			</term>
			<listitem>
				<para>indicates whether the default file-exclusions should be
					used.
					These are named in the openArchitectureWare
					documentation. All files
					with these extensions won&apos;t be
					checked for protected regions.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.fileEncoding">
			<term>fileEncoding</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>utf-8</literal>
			</term>
			<listitem>
				<para>use to indicate the coding of the templates</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.deleteOldFiles">
			<term>deleteOldFiles</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>false</literal>
			</term>
			<listitem>
				<para>
					If true old files will be deleted. This is useful if you renamed
					something in your model.
					Therefore the files in the output directory
					will be read recursively and
					saved with their
					last modification date
					(LMD). After the code generation the LMDs will
					be compared with the
					new LMDs and if they are the same the file will be deleted. If the
					files are under a known revision control system, the files will be
					marked as deleted in the repository and after that deleted from the
					file system (if possible). You can configure more with
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.excludedDirNames">
						<literal>excludedDirectoryNames</literal>
					</link>
					,
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.excludedRelPaths">
						<literal>excludedRelativePaths</literal>
					</link>
					,
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.includedFiles">
						<literal>excludedFiles</literal>
					</link>
					and
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.includedFiles">
						<literal>includedFiles</literal>
					</link>
					.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.deleteEmptyFolders">
			<term>deleteOldFiles</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>false</literal>
			</term>
			<listitem>
				<para>
					If true empty folders will be deleted. Therefore it searchs again
					through the output directory. If the empty folders are under a
					known revision control system, they will be first marked as deleted
					in the repository and after that, if possible, deleted in the file
					system. You can configure more with
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.excludedDirNames">
						<literal>excludedDirectoryNames</literal>
					</link>
					and
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.excludedRelPaths">
						<literal>excludedRelativePaths</literal>
					</link>
					.
				</para>
			</listitem>
		</varlistentry>

		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.excludedRelPaths">
			<term>excludedDirectoryNames</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<term>
				default:
				<literal>metadata folder(s) of found and supported revision control
					system(s)
				</literal>
			</term>
			<listitem>
				<para>
					only useful when
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.deleteOldFiles">
						<literal>deleteOldFiles</literal>
					</link>
					or
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.deleteEmptyFolders">
						<literal>deleteEmptyFolders</literal>
					</link>
					is true. Excludes all directories under the output directory with
					the given names
					(seperated by &quot;,&quot; or &quot;;&quot;) from
					the search for possible deletion.
					Useful if you want special named
					directories not in the search (e. g.
					&quot;.settings&quot;).
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.excludedRelPaths">
			<term>excludedRelativePaths</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<listitem>
				<para>
					only useful when
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.deleteOldFiles">
						<literal>deleteOldFiles</literal>
					</link>
					or
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.deleteEmptyFolders">
						<literal>deleteEmptyFolders</literal>
					</link>
					is true. Excludes given paths
					(seperated by &quot;,&quot; or
					&quot;;&quot;) relative to the output
					directory from the search for
					possible deletion. Useful if you want
					only some specific directories
					not in the search.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.excludedFiles">
			<term>excludedFiles</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<listitem>
				<para>
					only useful when
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.deleteOldFiles">
						<literal>deleteOldFiles</literal>
					</link>
					is true. Excludes files (not directories) with given suffixes
					(seperated by &quot;,&quot; or &quot;;&quot;) from search.
					For
					Example´value=&quot;.svn, class&quot; will exclude every
					file with
					the suffix &quot;.svn&quot; or &quot;class&quot;.
					Binds stronger
					than
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.includedFiles">
						<literal>includedFiles</literal>
					</link>
					.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry
			id="en.genesez.platforms.common.workflow.components.generator.includedFiles">
			<term>includedFiles</term>
			<term>
				<emphasis>single-value</emphasis>
			</term>
			<listitem>
				<para>
					only useful when
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.deleteOldFiles">
						<literal>deleteOld</literal>
					</link>
					is true. Includes
					files (not directories) with the given suffixes
					(seperated by
					&quot;,&quot; or &quot;;&quot;) in
					the search for
					possible deletion. It is weaker than exclusions,
					especially its
					weaker than
					<link
						linkend="en.genesez.platforms.common.workflow.components.generator.excludedFiles">
						<literal>excludedFiles</literal>
					</link>.
					If it&apos;s not
					set everything will be included.
				</para>
				<para>For Example &lt;excludedFiles value=&quot;a&quot;
					/&gt;
					&lt;includedFiles value=&quot;java, .php&quot;
					/&gt; will exclude
					every file with the suffix &quot;a&quot;,
					which means also all files
					with the suffix &quot;java&quot;.
					Therefore only files with the
					suffix &quot;.php&quot; will be
					found.
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
	<para>Furthermore the generator contains all parameters from the
		XPand-generator component of openArchitectureWare.
	</para>
</section>
