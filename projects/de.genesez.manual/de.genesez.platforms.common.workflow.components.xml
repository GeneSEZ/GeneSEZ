<?xml version='1.0'?>
<!DOCTYPE chapter
	PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
	[
		<!ENTITY % isolat1 SYSTEM "http://www.w3.org/2003/entities/iso8879/isolat1.ent">
		%isolat1;
	]
>
<chapter>

  <title>GeneSEZ Workflow Komponenten</title>

  <para>Die GeneSEZ Workflow Komponenten sind Wrapper um die Workflow 
  Komponenten von openArchitectureWare um deren Handhabung einfach zu 
  gestalten und f&uuml;r einige Einstellungen Standardwerte bereitzustellen. 
  Die allgemein nutzbaren Workflow Komponenten sind im Package <literal>
  de.genesez.platforms.common.workflow</literal> enthalten, die in 
  anderen Plattform-Projekten spezialisiert werden k&ouml;nnen. Dies 
  Betrifft insbesondere den <literal>Generator</literal> zur Ausf&uuml;hrung 
  von Modell-zu-Text Transformationen.</para>

  <para>Unbedingt erforderliche Parameter werden <emphasis role="bold">
  fett</emphasis> dargestellt und als erste aufgef&uuml;hrt. Parameter die 
  mehrmals angegeben werden k&ouml;nnen sind mit 
  <emphasis>multi-value</emphasis> gekennzeichnet, Parameter die nur 
  einmal angegeben werden k&ouml;nnen mit <emphasis>single-value</emphasis>. 
  Bei Parametern mit Standardwerten sind die Standardwerte mit 
  angegeben.</para>

  <section>

    <title>Allgemeine Workflow Komponenten</title>

    <section>

      <title>Uml2GeneSEZ</title>

      <para>Diese Workflow Komponente dient zur Ausf&uuml;hrung der 
      gleichnamigen UML-zu-GeneSEZ Transformation. Diese Transformation 
      besteht aus folgenden Schritten:</para>

      <itemizedlist>

        <listitem>

          <para>Einlesen eines UML Modells (Eclipse UML2 kompatibles 
          XMI Format)</para>

        </listitem>

        <listitem>

          <para>Validieren des UML Modells um die Transformation in ein 
          GeneSEZ Modell sicherzustellen</para>

        </listitem>

        <listitem>

          <para>Transformation des UML Modells in ein GeneSEZ 
          Modell</para>

        </listitem>

      </itemizedlist>

      <para>Dabei sind folgende Parameter m&ouml;glich:</para>

      <variablelist>

        <varlistentry>

          <term><emphasis role="bold">model</emphasis></term>

          <listitem>

            <para>der Dateiname inklusive des Dateipfades zur UML 
            Modell Datei</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>profile</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>dient zur Angabe von UML Profilen, die zus&auml;tzlich zum 
            UML2 Metamodell als Metamodell registriert werden. Hiermit 
            m&uuml;ssen alle bei der Modellierung verwendeten UML Profile 
            angegeben werden, sofern sie in eigenst&auml;ndigen Dateien 
            hinterlegt sind und nicht in der UML Modell Datei.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>ignoreValidationErrors</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>false</literal></term>

          <listitem>

            <para>ein boolscher Wert der angibt, ob Validierungsfehler 
            des UML Modells die Transformation beenden oder 
            nicht.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.uml2genesez.excludePackage">

          <term>excludePackage</term>

          <term><emphasis>multi-value</emphasis></term>

          <term>Standard: <literal>UML Standard Profile</literal></term>

          <listitem>

            <para>kann genutzt werden um ein UML Package im UML Modell 
            mit qualifiziertem Namen anzugeben, welches bei der 
            UML-zu-GeneSEZ Transformation ausgeschlossen werden 
            soll.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>excludePackages</term>

          <term><emphasis>multi-value</emphasis></term>

          <term>Standard: <literal>UML Standard Profile</literal></term>

          <listitem>

            <para>hat die gleiche Bedeutung wie 
            <link linkend="de.genesez.platforms.common.workflow.components.uml2genesez.excludePackage">
            <emphasis>exclude package</emphasis></link> mit dem 
            Unterschied das als Wert eine Komma separierte Liste mit 
            UML Packages angegeben werden kann.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>mapClassesInModelToExternal</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>false</literal></term>

          <listitem>

            <para>gibt an ob Classifier die direkt im Wurzel-Element 
            des UML Modells abgelegt sind in externe Typen des GeneSEZ 
            Modells transformiert werden.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.uml2genesez.externalPackage">

          <term>externalPackage</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>wird genutzt um UML Packages mit qualifiziertem Namen 
            anzugeben die als Container f&uuml;r externe Typen genutzt 
            werden. Diese UML Packages werden dann nicht in GeneSEZ 
            Packages transformiert und alle enthaltenen Classifier 
            werden in externe Typen transformiert.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>externalPackages</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>hat die gleiche Bedeutung wie 
            <link linkend="de.genesez.platforms.common.workflow.components.uml2genesez.externalPackage">
            <emphasis>external package</emphasis></link> mit dem 
            Unterschied das als Wert eine Komma separierte Liste mit 
            UML Packages angegeben werden kann.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.uml2genesez.externalStereotype">

          <term>externalStereotype</term>

          <term><emphasis>multi-value</emphasis></term>

          <term>Standard: <literal>external</literal></term>

          <listitem>

            <para>wird genutzt um Namen von UML Stereotypen anzugeben, 
            die entweder <emphasis>Classifier</emphasis> als externe 
            Typen im UML Modell markieren oder aber <emphasis>UML 
            Packages</emphasis>, die als Container f&uuml;r externe Typen 
            dienen.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>externalStereotypes</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>hat die gleiche Bedeutung wie 
            <link linkend="de.genesez.platforms.common.workflow.components.uml2genesez.externalStereotype">
            <emphasis>external stereotype</emphasis></link> mit dem 
            Unterschied das als Wert eine Komma separierte Liste mit 
            Namen von Stereotypen angegeben werden kann.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>umlCheckScript</term>

          <term><emphasis>multi-value</emphasis></term>

          <term>Standard: <literal>
          de::genesez::adapter::uml2::uml2constraints</literal></term>

          <listitem>

            <para>dient zur Angabe von Check-Skripten die zur 
            Validierung des UML Modells genutzt werden.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>uml2GenesezScriptCall</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>
          de::genesez::adapter::uml2::uml2genesez::transform(uml2model)</literal></term>

          <listitem>

            <para>dient zur Angabe einer Skript-Funktion welche die 
            UML-zu-GeneSEZ Transformation durchf&uuml;hrt. Siehe auch 
            <link linkend="de.genesez.platforms.common.workflow.components.uml2genesez.umlSlot"><emphasis>uml 
            slot</emphasis></link>.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.uml2genesez.umlSlot">

          <term>umlSlot</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>uml2model</literal></term>

          <listitem>

            <para>dient zur Angabe des Namens des Slots, welcher das 
            instanziierte UML Modell speichert.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>slot</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>genesezModel</literal></term>

          <listitem>

            <para>dient zur Angabe des Names des Slots auf welchem das 
            erstellte GeneSEZ Modell gespeichert wird.</para>

          </listitem>

        </varlistentry>

      </variablelist>

    </section>

    <section>

      <title>Validator</title>

      <para>Wird zur &Uuml;berpr&uuml;fung von GeneSEZ Modellen mit Hilfe eines 
      Check-Skriptes eingesetzt. Folgende Parameter k&ouml;nnen verwendet 
      werden:</para>

      <variablelist>

        <varlistentry id="de.genesez.platforms.common.workflow.components.validator.script">

          <term><emphasis role="bold">script</emphasis></term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>wird genutzt um mind. 1 Check-Skript anzugeben 
            welches genutzt wird um das GeneSEZ Modell zu 
            validieren.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>scripts</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>hat die gleiche Bedeutung wie 
            <link linkend="de.genesez.platforms.common.workflow.components.validator.script">
            <emphasis>script</emphasis></link> mit dem Unterschied das 
            als Wert eine Komma separierte Liste mit Check-Skripten 
            angegeben werden kann.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>abortOnError</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>true</literal></term>

          <listitem>

            <para>kann genutzt werden um den Transformations-Lauf nicht 
            abzubrechen wenn das Check Skript Fehler meldet. 
            Standardm&auml;&szlig;ig wird abgebrochen.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>slot</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>genesezModel</literal></term>

          <listitem>

            <para>kann genutzt werden um den Name des Slots zu setzen, 
            welches das zu validierende Modell beinhaltet.</para>

          </listitem>

        </varlistentry>

      </variablelist>

      <para>Zus&auml;tzlich stehen die Parameter der 
      <emphasis>CheckComponent</emphasis> von openArchitectureWare 
      bereit. Hierzu z&auml;hlt u.a. <literal>warnIfNothingChecked</literal> 
      das standardm&auml;&szlig;ig auf <literal>false</literal> steht. Auf 
      <literal>true</literal> gesetzt bewirkt es das eine Warnung in 
      dem Workflow Log erscheint, wenn das Check Skript keine 
      Modellelemente &uuml;berpr&uuml;ft hat.</para>

    </section>

    <section>

      <title>Serializer</title>

      <para>Wird zur Serialisierung von instanziierten GeneSEZ Modellen 
      in eine Datei genutzt. Es k&ouml;nnen folgende Parameter angegeben 
      werden:</para>

      <variablelist>

        <varlistentry>

          <term><emphasis role="bold">file</emphasis></term>

          <term><emphasis>single-value</emphasis></term>

          <listitem>

            <para>dient zur Angabe der Datei in welcher ein 
            instanziiertes Modell gespeichert wird.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>slot</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>genesezModel</literal></term>

          <listitem>

            <para>dient zur Angabe des Names des Slots welches das zu 
            serialisierende GeneSEZ Modell beinhaltet.</para>

          </listitem>

        </varlistentry>

      </variablelist>

      <para>Weiterhin k&ouml;nnen die Parameter der <literal>
      Writer</literal> Komponente von openArchitectureWare angegeben 
      werden.</para>

      <itemizedlist>

        <listitem>

          <para>Die boolesche Option <literal>
          OPTION_SCHEMA_LOCATION_IMPLEMENTATION</literal> standardm&auml;&szlig;ig 
          auf <literal>false</literal> gesetzt um die serialisierten 
          Dateien auch mit dem <emphasis>Sample Reflective Ecore Model 
          Editor</emphasis> &ouml;ffnen zu k&ouml;nnen.</para>

        </listitem>

        <listitem>

          <para>Die boolesche Option <literal>
          cloneSlotContents</literal> kann genutzt werden um 
          instanziierte Modelle, die bereits mit einer Ressource 
          verbunden sind (also bereits serialisiert sind) noch einmal 
          in eine andere Datei zu serialisieren.</para>

        </listitem>

        <listitem>

          <para>Weitere boolesche Optionen sind: <literal>
          multipleResourcesInCaseOfList</literal>, <literal>
          OPTION_SCHEMA_LOCATION</literal>, <literal>
          useSingleGlobalResourceSet</literal></para>

        </listitem>

      </itemizedlist>

    </section>

    <section id="de.genesez.platforms.common.workflow.components.generator">

      <title>Generator</title>

      <para>Der Generator dient zur Ausf&uuml;hrung von Modell-zu-Text 
      Transformationen. Die folgenden Parameter werden angebogen, 
      jedoch ist es von der durch 
      <link linkend="de.genesez.platforms.common.workflow.components.generator.template"><literal>
      template</literal></link> spezifizierten Modell-zu-Text 
      Transformation abh&auml;ngig, welche Parameter tats&auml;chlich von der 
      Transformation genutzt werden. Normalerweise sollte der Generator 
      als Basisklasse f&uuml;r Modell-zu-Text Transformationen genutzt 
      werden.</para>

      <variablelist>

        <varlistentry id="de.genesez.platforms.common.workflow.components.generator.template">

          <term><emphasis role="bold">template</emphasis></term>

          <term><emphasis>single-value</emphasis></term>

          <listitem>

            <para>dient zur Angabe des XPand Templates sowie dem Namen 
            des Define-Blockes, welcher zur Modell-zu-Text 
            Transformation aufgerufen wird.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.generator.outputDir">

          <term><emphasis role="bold">outputDir</emphasis></term>

          <term><emphasis>single-value</emphasis></term>

          <listitem>

            <para>dient zur Angabe des Verzeichnisses welches den 
            generierten Quellcode enth&auml;lt bzw. enthalten soll. Ist das 
            Verzeichnis nicht vorhanden, wird es erstellt.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term><emphasis role="bold">proRegDir</emphasis></term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: Wert von 
          <link linkend="de.genesez.platforms.common.workflow.components.generator.outputDir"><literal>
          outputDir</literal></link></term>

          <listitem>

            <para>dient zur Angabe des Verzeichnisses welches Quellcode 
            mit Protected Regions enth&auml;lt die in der aktuellen 
            Transformation erhalten werden sollen.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.generator.typeMappingFile">

          <term>typeMappingFile</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>dient zur Angabe der Type-Mapping Dateien, welche bei 
            der Modell-zu-Text Transformation genutzt werden 
            sollen.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.generator.basePackage">

          <term>basePackage</term>

          <term><emphasis>single-value</emphasis></term>

          <listitem>

            <para>kann genutzt werden um ein Package anzugeben welches 
            als Basis f&uuml;r die Modell-zu-Text Transformation genutzt 
            wird. Alles wird dann in dieses Package generiert.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>useModelNameAsBasePackage</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>false</literal></term>

          <listitem>

            <para>hiermit kann angegeben werden das der Name des 
            Modell-Elementes (das Wurzel-Element des GeneSEZ Modells) 
            als <link linkend="de.genesez.platforms.common.workflow.components.generator.basePackage">base 
            package</link> verwendet werden soll.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>generateSectionComments</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>true</literal></term>

          <listitem>

            <para>dient zur Angabe das einzeilige Kommentare generiert 
            werden, welche den Quellcode in Bereiche 
            untergliedern.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>disableAccessors</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>false</literal></term>

          <listitem>

            <para>dient zur Angabe ob Zugriffsfunktionen (Getter und 
            Setter) generiert werden sollen oder nicht.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>useAccessorStereotype</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>false</literal></term>

          <listitem>

            <para>hiermit wird festgelegt ob der Stereotyp 
            <emphasis>Accessor</emphasis> ausgewertet wird um zu 
            entscheiden ob Getter und Setter generiert werden 
            sollen.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>usePropertyVisibilityForAccessors</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>false</literal></term>

          <listitem>

            <para>hiermit kann festgelegt werden, das Attribute immer 
            mit der Sichtbarkeit <literal>private</literal> generiert 
            werden und die zugewiesene Sichtbarkeit der Attribute f&uuml;r 
            die Zugriffsfunkionen (Getter und Setter) verwendet 
            wird.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.generator.excludePackage">

          <term>excludePackage</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>dient zur Angabe von GeneSEZ Packages per 
            qualifizierten Namen, die bei der Modell-zu-Text 
            Transformation ausgeschlossen werden sollen.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>excludePackages</term>

          <term><emphasis>multi-value</emphasis></term>

          <term>Standard: <literal>UML Standard Profile</literal></term>

          <listitem>

            <para>hat die gleiche Bedeutung wie 
            <link linkend="de.genesez.platforms.common.workflow.components.generator.excludePackage">
            <emphasis>exclude package</emphasis></link> mit dem 
            Unterschied das als Wert eine Komma separierte Liste mit 
            qualifizierten Namen von GeneSEZ Packages angegeben werden 
            kann.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.generator.aspectTemplate">

          <term>aspectTemplate</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>dient zur Angabe von XPand Templates mit 
            <emphasis>Around</emphasis> Anweisung mit deren Hilfe 
            Advices f&uuml;r 
            Template-<emphasis>Define</emphasis>-Anweisungen definiert 
            werden.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>aspectTemplates</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>hat die gleiche Bedeutung wie 
            <link linkend="de.genesez.platforms.common.workflow.components.generator.aspectTemplate">
            <emphasis>aspect template</emphasis></link> mit dem 
            Unterschied das als Wert eine Komma separierte Liste mit 
            XPand-Templates angegeben werden kann.</para>

          </listitem>

        </varlistentry>

        <varlistentry id="de.genesez.platforms.common.workflow.components.generator.aspectScript">

          <term>aspectScript</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>dient zur Angabe von XTend Skripten around Anweisung 
            mit deren Hilfe Advices f&uuml;r XTend Funktionen definiert 
            werden.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>aspectScripts</term>

          <term><emphasis>multi-value</emphasis></term>

          <listitem>

            <para>hat die gleiche Bedeutung wie 
            <link linkend="de.genesez.platforms.common.workflow.components.generator.aspectScript">
            <emphasis>aspect script</emphasis></link> mit dem 
            Unterschied das als Wert eine Komma separierte Liste mit 
            XTend-Skripten angegeben werden kann.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>slot</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>genesezModel</literal></term>

          <listitem>

            <para>dient zur Angabe des Names des Slots welcher das 
             GeneSEZ Modell f&uuml;r die Modell-zu-Text Transformation 
             beinhaltet.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>prExcludes</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>.svn</literal></term>

          <listitem>

            <para>dient zur Angabe von Auschl&uuml;ssen von Dateien und 
            Verzeichnissen, welche keine Protected Regions 
            enthalten.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>prDefaultExcludes</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>false</literal></term>

          <listitem>

            <para>hiermit k&ouml;nnen die Standard Datei-Ausschl&uuml;sse f&uuml;r den 
            Protected Region Resolver definiert werden. Welche genau 
            dazu geh&ouml;ren verr&auml;t die openArchitectureWare Dokumentation. 
            Alle Dateien mit diesen Endungen werden nicht auf Protected 
            Regions hin &uuml;berpr&uuml;ft.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>fileEncoding</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>utf-8</literal></term>

          <listitem>

            <para>dient zur Angabe der Kodierung der Templates.</para>

          </listitem>

        </varlistentry>

      </variablelist>

      <para>Weiterhin besitzt der Generator alle Parameter der 
      XPand-Generator Komponente von openArchitectureWare.</para>

    </section>

  </section>

  <section>

    <title>Plattformspezifische Workflow Komponenten</title>

    <para>Die plattformspezifischen Generator- Workflow Komponenten zur 
    Modell-zu-Text Transformation bieten ebenfalls alle Paramter des 
    <link linkend="workflow.generator">
    <emphasis>Generators</emphasis></link>. Zus&auml;tzlich verf&uuml;gen diese 
    aber &uuml;ber weitere Standardwerte (speziell 
    <link linkend="de.genesez.platforms.common.workflow.components.generator.template"><literal>
    template</literal></link> und 
    <link linkend="de.genesez.platforms.common.workflow.components.generator.typeMappingFile"><literal>
    typeMappingFile</literal></link>) und eventuell weiterer 
    plattformspezifischer Transformations-Parameter.</para>

    <para>Somit reduziert sich die Anzahl der notwendigen 
    Transformations-Parameter auf einen: 
    <link linkend="de.genesez.platforms.common.workflow.components.generator.outputDir"><literal>
    outputDir</literal></link>.</para>

    <section>

      <title>Java Generator</title>

      <para>Der <emphasis>Java Generator</emphasis> transformiert 
      standardm&auml;&szlig;ig ein GeneSEZ Modell in Java 5 kompatiblen 
      Quellcode.</para>

      <variablelist>

        <varlistentry>

          <term>
          <link linkend="de.genesez.platforms.common.workflow.components.generator.template">template</link></term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>
          de::genesez::platforms::java::java5::templates::Root::Root</literal></term>

          <listitem>

            <para>XPand-Template zur Modell-zu-Java 
            Transformation.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>
          <link linkend="de.genesez.platforms.common.workflow.components.generator.typeMappingFile">typeMappingFile</link></term>

          <term><emphasis>multi-value</emphasis></term>

          <term>Standard: <literal>
          de/genesez/platforms/java/typemapping/typemapping.xml</literal></term>

          <listitem>

            <para>Standard Java Type-Mapping Datei.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>formatterConfig</term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>
          de/genesez/platforms/java/workflow/eclipse.java.formatter.settings.xml</literal></term>

          <listitem>

            <para>spezifiziert die Datei mit 
            Konfigurationseinstellungen des Java Beautifiers. Aktuell 
            wird der in Eclipse integrierte Formatter genutzt.</para>

          </listitem>

        </varlistentry>

      </variablelist>

    </section>

    <section>

      <title>PHP Generator</title>

      <para>Der <emphasis>PHP Generator</emphasis> transformiert 
      standardm&auml;&szlig;ig ein GeneSEZ Modell in PHP5 kompatiblen 
      Quellcode.</para>

      <variablelist>

        <varlistentry>

          <term>
          <link linkend="de.genesez.platforms.common.workflow.components.generator.template">template</link></term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>
          de::genesez::platforms::php5::templates::Root::Root</literal></term>

          <listitem>

            <para>XPand-Template zur Modell-zu-PHP 
            Transformation.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>
          <link linkend="de.genesez.platforms.common.workflow.components.generator.typeMappingFile">typeMappingFile</link></term>

          <term><emphasis>multi-value</emphasis></term>

          <term>Standard: <literal>
          de/genesez/platforms/php/typemapping/typemapping.xml</literal></term>

          <listitem>

            <para>Standard PHP Type-Mapping Datei.</para>

          </listitem>

        </varlistentry>

      </variablelist>

    </section>

    <section>

      <title>C# Generator</title>

      <para>Der C# Generator generiert C# Quellcode.</para>

      <variablelist>

        <varlistentry>

          <term>
          <link linkend="de.genesez.platforms.common.workflow.components.generator.template">template</link></term>

          <term><emphasis>single-value</emphasis></term>

          <term>Standard: <literal>
          de::genesez::platforms::dotnet::csharp::templates::Root::Root</literal></term>

          <listitem>

            <para>XPand-Template zur Modell-zu-C# Transformation.</para>

          </listitem>

        </varlistentry>

        <varlistentry>

          <term>
          <link linkend="de.genesez.platforms.common.workflow.components.generator.typeMappingFile">typeMappingFile</link></term>

          <term><emphasis>multi-value</emphasis></term>

          <term>Standard: <literal>
          de/genesez/platforms/dotnet/csharp/typemapping/typemapping.xml</literal></term>

          <listitem>

            <para>Standard C# Type-Mapping Datei.</para>

          </listitem>

        </varlistentry>

      </variablelist>

    </section>

  </section>

</chapter>

