
«IMPORT gcore»

«REM»
	Main entry point for generating java code.
	Iterates over the model and delegates the handling of classifiers.
	
	@author	nico herbig
	@author	tobias haubold (last)
«ENDREM»

«EXTENSION org::genesez::platform::common::AccessHelper»
«REM» use dependencies to generate imports «ENDREM»
«EXTENSION org::genesez::platform::common::UseDependencies»
«EXTENSION org::genesez::platform::common::log::Log»
«REM» neat m2t helper functions «ENDREM»
«EXTENSION org::genesez::platform::common::m2t::Helper»

«EXTENSION org::genesez::platform::java::scripts::Conversion»
«EXTENSION org::genesez::platform::java::scripts::Naming»
«EXTENSION org::genesez::platform::java::scripts::Association»
«EXTENSION org::genesez::platform::java::java5::scripts::Helper»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	processes the contents of the model, adds use dependencies to all classifiers, 
	prepares all association classes and rejects all ignored packages
	@context	a genesez model
«ENDREM»
«DEFINE Root FOR MModel»
	«REM» prepare model, init logger «ENDREM»
	«addUseDependencies()»
	«addAssociationHandling()»
	«useLogger("org.genesez.platform.java")»
	«REM» start transformation «ENDREM»
	«EXPAND Root FOREACH nestedPackage.rejectIgnoredPackages()»
	«EXPAND Root FOREACH classifier»
«ENDDEFINE»

«REM»
	processes the contents of a package
	generates the package documentation if there is any
	delegates the handling of all classifiers
«ENDREM»
«DEFINE Root FOR MPackage»
	«IF hasComment()»
		«EXPAND Comment::Package -»
	«ENDIF»
	«EXPAND Root FOREACH nestedPackage»
	«EXPAND Root FOREACH classifier»
«ENDDEFINE»


«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»
	processes the generation of an interface and java annotation
«ENDREM»
«DEFINE Root FOR MInterface»
	«IF hasStereotype(java5AnnotationStereotype())»
	    «FILE filePath( asAnnotationFileName(), basePath() )»
	        «EXPAND Annotation::Root»
	    «ENDFILE»
	«ELSE-»
	    «FILE filePath( asFileName(), basePath() )»
	        «EXPAND Interface::Root»                
	    «ENDFILE»
	«ENDIF»
«ENDDEFINE»

«REM»
	processes the generation of a class
«ENDREM»
«DEFINE Root FOR MClass»
«FILE filePath( asFileName(), basePath() )»
	«EXPAND Class::Root»
«ENDFILE»
«ENDDEFINE»

«REM»
	processes the generation of an enumeration
«ENDREM»
«DEFINE Root FOR MEnumeration-»
«FILE filePath( asFileName(), basePath() )»
	«EXPAND Enumeration::Root»
«ENDFILE»
«ENDDEFINE»

«REM»
	processes the generation of a data type
«ENDREM»
«DEFINE Root FOR MDataType»
«FILE filePath( asFileName(), basePath() )»
	«EXPAND DataType::Root»
«ENDFILE»
«ENDDEFINE»

«REM»
	because the fact, 'MClassifier' is abstract, an object of type MClassifier cannot exist!
«ENDREM»
«DEFINE Root FOR MClassifier»
	«fatal("generation of 'MClassifier's is currently not supported")»
«ENDDEFINE»
