«REM»
	(c) GeneSEZ Research Group <genesez@fh-zwickau.de>
	All rights reserved.
	
	Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
«ENDREM»
«IMPORT gcore»

«REM»
	Generates the implementation body of access operations.
	
	@see	org::genesez::platform::java::m2m::AccessOperation
	
	@author	nico herbig
	@author	tobias haubold <toh@fh-zwickau.de>
	@author andre pflueger (last)
«ENDREM»
«EXTENSION org::genesez::metamodel::core::util::AccessHelper»
«EXTENSION org::genesez::metamodel::core::util::ExtensionMechanism»
«EXTENSION org::genesez::metamodel::core::util::mapping::TypeMapping»
«EXTENSION org::genesez::platform::java::util::Naming»
«EXTENSION org::genesez::platform::java::util::Helper»


«REM»
	Generates the implementation of a get access operation.
«ENDREM»
«DEFINE GetOperationImpl FOR MOperation -»
	«IF return.multiplicity.isSingleValued() -»
		«IF return.type.mapName().asTypeName().matches("Date") -»
			return new Date(«return.name -».getTime());
		«ELSE -»
			return «return.name»;
		«ENDIF -»
	«ELSE -»
		return «return.name»;
	«ENDIF -»
«ENDDEFINE»

«REM»
	Generates the implementation of a set access operation.
«ENDREM»
«DEFINE SetOperationImpl FOR MOperation -»
	«LET parameter.first() AS param -»
	«IF param.multiplicity.isSingleValued() -»
		«IF !static-»this.«ENDIF-»«param.name» = «IF static-»_«ENDIF-»«param.name»;
	«ELSE -»
		«IF emHasStereotype("primitive") -»
			«IF !static-»this.«ENDIF-»«param.name» = new «param.type.mapName().asTypeName() -»[«IF static-»_«ENDIF-»«param.name».length];
			for (int counter = 0; counter < «IF static-»_«ENDIF-»«param.name».length; counter++) {
				«IF !static-»this.«ENDIF-»«param.name»[counter] = «IF static-»_«ENDIF-»«param.name»[counter];
			}
		«ELSE -»
			«IF !static-»this.«ENDIF-»«param.name» = «IF static-»_«ENDIF-»«param.name»;
		«ENDIF-»
	«ENDIF -»
	«ENDLET -»
«ENDDEFINE»

«REM»
	Generates the implementation of an add access operation.
«ENDREM»
«DEFINE AddOperationImpl FOR MOperation -»
	«LET parameter.first() AS param -»
		«IF emHasStereotype("primitive") -»
			«PROTECT CSTART "/* " CEND " */" ID ("add.property.access_" + xmiGuid)»
			// TODO: sorry the template for add operations on arrays is missing, please file a feature request at forge.genesez.org
			throw new UnsupportedOperationException(
					"The implementation of the property access operation add for multi valued attribute '«param.name»' is missing!");
			«ENDPROTECT»
		«ELSE -»
			«IF !static-»this.«ENDIF-»«param.name».add(«IF static-»_«ENDIF-»«param.name»);
		«ENDIF -»
	«ENDLET -»
«ENDDEFINE»

«REM»
	Generates the implementation of a remove access operation.
«ENDREM»
«DEFINE RemoveOperationImpl FOR MOperation -»
	«LET parameter.first() AS param -»
		«IF emHasStereotype("primitive") -»
			«PROTECT CSTART "/* " CEND " */" ID ("remove.property.access_" + xmiGuid)»
			// TODO: sorry the template for remove operations on arrays is missing, please file a feature request at forge.genesez.org
			throw new UnsupportedOperationException(
					"The implementation of the property access operation remove for multi valued attribute '«param.name»' is missing!");
			«ENDPROTECT»
		«ELSE -»
			«IF !static-»this.«ENDIF-»«param.name».remove(«IF static-»_«ENDIF-»«param.name»);
		«ENDIF -»
	«ENDLET -»
«ENDDEFINE»
