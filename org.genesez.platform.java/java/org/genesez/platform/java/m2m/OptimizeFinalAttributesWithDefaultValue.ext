/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 * 
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */
import gcore;

/**
 * Performs a kind of memory optimization in case an attribute is single valued,
 * is final and has a default value. Due to the fact, the value cannot be changed (final) and
 * is the same for all instances of the class, the attribute is made abstract.
 * 
 * Note: Think about the attributes default value and possible concurency issues befor using this script!
 * 
 * @author	andre pflueger
 * @author	tobias haubold <toh@fh-zwickau.de>
 */
extension org::genesez::metamodel::core::util::AccessHelper;


/**
 * Checks if the attribute is single valued, final and has a default value and if
 * it is made static, else it is left unchanged.
 */
MAttribute optimize(MAttribute this) :
	multiplicity.isSingleValued() && final && hasDefaultValue()
		? setStatic(true)
		: this ->
	this;
