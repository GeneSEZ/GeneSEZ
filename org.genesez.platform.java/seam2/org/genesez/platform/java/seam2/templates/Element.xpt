«REM»
	JBoss Seam Framework cartridge (version 2.1.2)
	
	description:
	The template is based on the ejb cartridge and evaluates several stereotypes
	to generate annotations of JBoss Seam. Its uses aspects around the methhods
	of the ejb annotations in the Xpand files of the ejb3 cartridge.
	
	@author		andre pflueger
	@date		2008/10/29
	@version 	1.0
«ENDREM»

«REM» import code gen meta model «ENDREM»
«IMPORT gcore»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION org::genesez::util::logging::Logging»

«EXTENSION org::genesez::metamodel::core::util::AccessElement»
«EXTENSION org::genesez::metamodel::core::util::Conversion»
«EXTENSION org::genesez::metamodel::core::util::mapping::TypeMapping»
«EXTENSION org::genesez::metamodel::core::util::Helper»

«EXTENSION org::genesez::platform::java::seam2::scripts::Naming»
«EXTENSION org::genesez::platform::java::util::Conversion»

«REM»
	evaluates the stereotype seam2Bijection
	annotations for operations and attributes
«ENDREM»
«DEFINE Bijection FOR MElement-»
	«IF emHasStereotypeAssignment("seam2Injection")-»
		@In(create=«emGetTaggedValue("seam2Injection", "create")-»
		«IF emHasTaggedValue("seam2Injection", "required", "false")-»
			, required=false
		«ENDIF-»
		«IF emHasUtilizableTaggedValue("seam2Injection", "value")-»
			, value="«emGetTaggedValue("seam2Injection", "value")-»"
		«ENDIF-»
		«IF emHasUtilizableTaggedValue("seam2Injection", "scope") && !emHasTaggedValue("seam2Injection", "scope", "UNSPECIFIED")-»
			, scope=ScopeType.«emGetTaggedValue("seam2Injection", "scope")-»
		«ENDIF-»)
	«ENDIF»
	«IF emHasStereotypeAssignment("seam2Outjection")»
		@Out(required=«emGetTaggedValue("seam2Outjection", "required")-»
		«IF emHasUtilizableTaggedValue("seam2Outjection", "scope") && !emHasTaggedValue("seam2Outjection", "scope", "UNSPECIFIED")-»
			, scope=ScopeType.«emGetTaggedValue("seam2Outjection", "scope")-»
		«ENDIF-»
		«IF emHasUtilizableTaggedValue("seam2Outjection", "value")-»
			, value="«emGetTaggedValue("seam2Outjection", "value")-»"
		«ENDIF-»)
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the dataTable and databinding stereotypes 
«ENDREM»
«DEFINE DataTable FOR MElement-»
	«IF emHasStereotypeAssignment("seam2DataModel")-»
		«IF (emHasTaggedValue("seam2DataModel", "value", "null") || emHasTaggedValue("seam2DataModel", "value", ""))-»
			@DataModel
			«IF (emHasTaggedValue("seam2DataModel", "scope", "null") || emHasTaggedValue("seam2DataModel", "scope", ""))  && !emHasTaggedValue("seam2DataModel", "scope", "UNSPECIFIED")-»
				(scope=ScopeType.«emGetTaggedValue("seam2DataModel", "scope")-»)
			«ENDIF-»
		«ENDIF-»
		«IF emHasUtilizableTaggedValue("seam2DataModel", "value")-»
			@DataModel(value="«projectNamespace()-»«emGetTaggedValue("seam2DataModel", "value")-»"
			«IF emHasUtilizableTaggedValue("seam2DataModel", "scope") && !emHasTaggedValue("seam2DataModel", "scope", "UNSPECIFIED")-»
				, scope=ScopeType.«emGetTaggedValue("seam2DataModel", "scope")-»
			«ENDIF-»)
		«ENDIF-»
		«IF emHasUtilizableTaggedValue("seam2DataBinding", "dataBinderClass")-»
			@DataBinderClass(«emGetTaggedValue("seam2DataBinding", "dataBinderClass")-»
			«IF emGetTaggedValue("seam2DataBinding", "dataBinderClass").contains("class")-»
				.class
			«ENDIF-»)
		«ENDIF-»
	«ENDIF-»
	«EXPAND _Selection-»
	«EXPAND _SelectionIndex-»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Selection (including seam2DataBinding)
«ENDREM»
«DEFINE _Selection FOR MElement-»
	«IF emHasStereotypeAssignment("seam2Selection")-»
		@DataModelSelection
		«IF emHasUtilizableTaggedValue("seam2Selection", "value")-»
			(value="«projectNamespace()-»«emGetTaggedValue("seam2Selection", "value")-»")
		«ENDIF-»	
		«IF emHasUtilizableTaggedValue("seam2DataBinding", "dataSelectorClass")-»
			@DataSelectorClass(«emGetTaggedValue("seam2DataBinding", "dataSelectorClass")-»
			«IF emGetTaggedValue("seam2DataBinding", "dataSelectorClass").contains("class")-»
				.class
			«ENDIF-»)
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2SelectionIndex
«ENDREM»
«DEFINE _SelectionIndex FOR MElement-»
	«IF emHasStereotypeAssignment("seam2SelectionIndex")-»
		@DataModelSelectionIndex
		«IF emHasUtilizableTaggedValue("seam2SelectionIndex", "value")-»
			(value="«projectNamespace()-»«emGetTaggedValue("seam2SelectionIndex", "value")-»")
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Remoting
«ENDREM»
«DEFINE Remoting FOR MElement-»
	«IF emHasStereotypeAssignment("seam2Remoting")-»
		@WebRemote
		«IF emHasUtilizableTaggedValue("seam2Remoting", "exclude")-»
			{«FOREACH emAllTaggedValues("seam2Remoting", "exclude") AS values SEPARATOR ", "-»
				"«values-»"
			«ENDFOREACH-»}	
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Asynchronity
«ENDREM»
«DEFINE Asynchronity FOR MElement-»
	«IF emHasStereotypeAssignment("seam2Asynchronity")-»
		«IF emHasTaggedValue("seam2Asynchronity", "asynchronous", "true")-»
			@Asynchronous
		«ENDIF-»
		«IF emHasTaggedValue("seam2Asynchronity", "duration", "true")-»
			@Duration
		«ENDIF-»
		«IF emHasTaggedValue("seam2Asynchronity", "expiration", "true")-»
			@Expiration
		«ENDIF-»
		«IF emHasTaggedValue("seam2Asynchronity", "intervalDuration", "true")-»
			@IntervalDuration
		«ENDIF-»
		«IF emHasTaggedValue("seam2Asynchronity", "finalExpiration", "true")-»
			@FinalExpiration
		«ENDIF-»
		«IF emHasTaggedValue("seam2Asynchronity", "intervalCron", "true")-»
			@IntervalCron
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Transactional
«ENDREM»
«DEFINE Transactional FOR MElement-»
	«IF emHasStereotypeAssignment("seam2Transactional")-»
		@Transactional
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2ReadOnly
«ENDREM»
«DEFINE ReadOnly FOR MElement-»
	«IF emHasStereotypeAssignment("seam2ReadOnly")-»
		@ReadOnly
	«ENDIF-»	
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Restrict
«ENDREM»
«DEFINE Restrict FOR MElement-»
	«IF emHasStereotypeAssignment("seam2Restrict")-»
		@Restrict(value="«emGetTaggedBooleanValue("seam2Restrict", "value")-»")
	«ENDIF»
«ENDDEFINE»

«REM»
	evaluates the entity permission stereotypes
«ENDREM»
«DEFINE EntityPermission FOR MElement-»
	«IF emHasTaggedValue("seam2EntityPermission", "target", "true")-»
		@PermissionTarget
	«ENDIF-»
	«IF emHasTaggedValue("seam2EntityPermission", "action", "true")-»
		@PermissionAction
	«ENDIF-»
	«IF emHasTaggedValue("seam2EntityPermission", "user", "true")-»
		@PermissionUser
	«ENDIF-»
	«IF emHasTaggedValue("seam2EntityPermission", "role", "true")-»
		@PermissionRole
	«ENDIF-»
	«IF emHasTaggedValue("seam2EntityPermission", "discriminator", "true")-»
		@PermissionDiscriminator«IF !emHasTaggedValue("seam2EntityPermission", "userDiscriminator", "user")
				|| !emHasTaggedValue("seam2EntityPermission", "roleDiscriminator", "role")-»
				(userValue="«emGetTaggedValue("seam2EntityPermission", "userDiscriminator")-»",
				roleValue="«emGetTaggedValue("seam2EntityPermission", "roleDiscriminator")-»")
			«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the user security stereotypes
«ENDREM»
«DEFINE UserSecurity FOR MElement-»
	«IF emHasTaggedValue("seam2UserSecurity", "userFirstName", "true")-»
		@UserFirstName
	«ENDIF-»
	«IF emHasTaggedValue("seam2UserSecurity", "userLastName", "true")-»
		@UserLastName
	«ENDIF-»
	«IF emHasTaggedValue("seam2UserSecurity", "userPrincipal", "true")-»
		@UserPrincipal
	«ENDIF-»
	«IF emHasTaggedValue("seam2UserSecurity", "userEnabled", "true")-»
		@UserEnabled
	«ENDIF-»
	«IF emHasTaggedValue("seam2UserSecurity", "userRoles", "true")-»
		@UserRoles
	«ENDIF-»
	«IF emHasTaggedValue("seam2UserSecurity", "passwordPrincipal", "true")-»
		@UserPassword«IF emHasUtilizableTaggedValue("seam2UserSecurity", "passwordIterations")
				&& !emHasTaggedValue("seam2UserSecurity", "passwordIterations", "1000")
				&& emHasUtilizableTaggedValue("seam2UserSecurity", "passwordHash")-»
				(hash="«emGetTaggedValue("seam2UserSecurity", "passwordHash")-»",
				iterations=«emGetTaggedValue("seam2UserSecurity", "passwordIterations")-»)
			«ENDIF-»
			«IF !emHasUtilizableTaggedValue("seam2UserSecurity", "passwordIterations")
				&& emHasUtilizableTaggedValue("seam2UserSecurity", "passwordHash")-»
				(hash="«emGetTaggedValue("seam2UserSecurity", "passwordHash")-»")
			«ENDIF-»
			«IF emHasUtilizableTaggedValue("seam2UserSecurity", "passwordIterations")
				&& !emHasTaggedValue("seam2UserSecurity", "passwordIterations", "1000")
				&& !emHasUtilizableTaggedValue("seam2UserSecurity", "passwordHash")-»
				(iterations=«emGetTaggedValue("seam2UserSecurity", "passwordIterations")-»)
			«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the role security stereotypes
«ENDREM»
«DEFINE RoleSecurity FOR MElement-»
	«IF emHasTaggedValue("seam2RoleSecurity", "name", "true")-»
		@RoleName
	«ENDIF-»
	«IF emHasTaggedValue("seam2RoleSecurity", "groups", "true")-»
		@RoleGroups
	«ENDIF-»
	«IF emHasTaggedValue("seam2RoleSecurity", "conditional", "true")-»
		@RoleConditional
	«ENDIF-»
«ENDDEFINE»

«REM»
	evaluates the stereotype seam2Permission
«ENDREM»
«DEFINE _Permission FOR MElement-»
	«IF emHasUtilizableTaggedValue("seam2Permission", "permissions")-»
		@Permissions({«FOREACH emAllTaggedValues("seam2Permission", "permissions") AS values SEPARATOR ", "-»
			@Permission(action="«values-»")
		«ENDFOREACH-»})	
	«ENDIF-»
«ENDDEFINE»