«IMPORT gcore»

«REM»
	template for weld class annotations
	
	@author		nancy doerfel
	6@date		2010-04-19
	@version	1.0
«ENDREM»

«REM» useful metamodel extensions «ENDREM»
«EXTENSION org::genesez::util::logging::Logging»

«EXTENSION org::genesez::platform::common::AccessHelper»
«EXTENSION org::genesez::platform::common::Conversion»
«EXTENSION org::genesez::platform::common::typemapping::TypeMapping»
«EXTENSION org::genesez::platform::common::m2t::Helper»

«EXTENSION org::genesez::platform::java::scripts::Type»
«EXTENSION org::genesez::platform::java::scripts::Naming»
«EXTENSION org::genesez::platform::java::scripts::Conversion»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	public functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»

«REM»  «ENDREM»
«DEFINE Annotation FOR MClass-»
	«EXPAND Element::ApplicationScoped-»
	«EXPAND Element::SessionScoped-»
	«EXPAND Element::RequestScoped-»
	«EXPAND Element::ConversationScoped-»
	«EXPAND Element::Typed-»
	«EXPAND Element::Alternative-»
	«EXPAND Element::Any-»
	«EXPAND Element::Default-»
	«EXPAND Element::Dependent-»
	«EXPAND Element::Model-»
	«EXPAND Element::Specializes-»
	«EXPAND Element::New-»
	«EXPAND Element::Decorator-»
	«EXPAND HomeBean::MakeEntityHome-»
«ENDDEFINE»

«REM» 
	generates imports
«ENDREM»
«DEFINE ImportStatements FOR MClassifier-»
	«IF hasStereotype("cdiApplicationScoped")
		|| property.exists(e|e.hasStereotype("cdiApplicationScoped"))
		|| operation.exists(e|e.hasStereotype("cdiApplicationScoped"))»
		import javax.enterprise.context.ApplicationScoped;
	«ENDIF»
	«IF hasStereotype("cdiSessionScoped")
		|| property.exists(e|e.hasStereotype("cdiSessionScoped"))
		|| operation.exists(e|e.hasStereotype("cdiSessionScoped"))»
		import javax.enterprise.context.SessionScoped;
	«ENDIF»
	«IF hasStereotype("cdiRequestScoped")
		|| property.exists(e|e.hasStereotype("cdiRequestScoped"))
		|| operation.exists(e|e.hasStereotype("cdiRequestScoped"))»
		import javax.enterprise.context.RequestScoped;
	«ENDIF»
	«IF hasStereotype("cdiConversationScoped")
		|| property.exists(e|e.hasStereotype("cdiConversationScoped"))
		|| operation.exists(e|e.hasStereotype("cdiConversationScoped"))»
		import javax.enterprise.context.Conversation;
		import javax.enterprise.context.ConversationScoped;
	«ENDIF»
	«IF hasStereotype("cdiTyped")
		|| property.exists(e|e.hasStereotype("cdiTyped"))
		|| operation.exists(e|e.hasStereotype("cdiTyped"))»
		import javax.enterprise.inject.Typed;
	«ENDIF»	
	«IF property.exists(e|e.hasStereotype("cdiProduces"))
		|| operation.exists(e|e.hasStereotype("cdiProduces"))»
		import javax.enterprise.inject.Produces;
	«ENDIF»		
	«REM»For Stereotypes only«ENDREM»
	«IF hasStereotype("cdiNormalScope")»
		import javax.enterprise.context.NormalScope;
	«ENDIF»		
	«REM»For Stereotypes only«ENDREM»
	«IF hasStereotype("cdiStereotype")»
		import javax.enterprise.inject.Stereotype;
	«ENDIF»				
	«IF operation.exists(e|e.hasStereotype("cdiNonbinding"))»
		import javax.enterprise.inject.Nonbinding;
	«ENDIF»		
	«IF hasStereotype("cdiAlternative")
		|| property.exists(e|e.hasStereotype("cdiAlternative"))
		|| operation.exists(e|e.hasStereotype("cdiAlternative"))»
		import javax.enterprise.inject.Alternative;
	«ENDIF»		
	«IF hasStereotype("cdiAny")
		|| property.exists(e|e.hasStereotype("cdiAny"))
		|| operation.exists(e|e.hasStereotype("cdiAny"))
		|| operation.exists(e|e.parameter.exists(p|p.hasStereotype("cdiAny")))»
		import javax.enterprise.inject.Any;
	«ENDIF»		
	«IF hasStereotype("cdiDefault")
		|| property.exists(e|e.hasStereotype("cdiDefault"))
		|| operation.exists(e|e.hasStereotype("cdiDefault"))
		|| operation.exists(e|e.parameter.exists(p|p.hasStereotype("cdiDefault")))»
		import javax.enterprise.inject.Default;
	«ENDIF»		
	«IF operation.exists(e|e.parameter.exists(p|p.hasStereotype("cdiDisposes")))»
		import javax.enterprise.inject.Disposes;
	«ENDIF»		
	«IF hasStereotype("cdiDependend")
		|| property.exists(e|e.hasStereotype("cdiDependend"))
		|| operation.exists(e|e.hasStereotype("cdiDependend"))»
		import javax.enterprise.inject.Dependend;
	«ENDIF»
	«IF hasStereotype("cdiModel")
		|| property.exists(e|e.hasStereotype("cdiModel"))
		|| operation.exists(e|e.hasStereotype("cdiModel"))»
		import javax.enterprise.inject.Model;
	«ENDIF»	
	«IF hasStereotype("cdiSpecializes")
		|| operation.exists(e|e.hasStereotype("cdiSpecializes"))»
		import javax.enterprise.inject.Specializes;
	«ENDIF»		
	«IF hasStereotype("cdiNew")
		|| property.exists(e|e.hasStereotype("cdiNew"))
		|| operation.exists(e|e.hasStereotype("cdiNew"))
		|| operation.exists(e|e.parameter.exists(p|p.hasStereotype("cdiNew")))»
		import javax.enterprise.inject.New;		
	«ENDIF»	
	«IF property.exists(e|e.hasStereotype("cdiDecoratorDelegate"))
		|| operation.exists(e|e.parameter.exists(p|p.hasStereotype("cdiDecoratorDelegate")))»
		import javax.decorator.Delegate;		
	«ENDIF»		
	«IF hasStereotype("cdiDecorator")»
		import javax.decorator.Decorator;		
	«ENDIF»
	«IF operation.exists(e|e.parameter.exists(p|p.hasStereotype("cdiObserves")))»
		import javax.enterprise.event.Observes;
		«IF operation.exists(e|e.parameter.exists(p|p.hasUtilizableValue("cdiObserves", "during")))-»	
            import static javax.enterprise.event.TransactionPhase.AFTER_COMPLETION;
            import static javax.enterprise.event.TransactionPhase.AFTER_FAILURE;
            import static javax.enterprise.event.TransactionPhase.AFTER_SUCCESS;
            import static javax.enterprise.event.TransactionPhase.BEFORE_COMPLETION;
            import static javax.enterprise.event.TransactionPhase.IN_PROGRESS;    
        «ENDIF-»
        «IF operation.exists(e|e.parameter.exists(p|p.hasUtilizableValue("cdiObserves", "notifyObserver")))-»
            import static javax.enterprise.event.Reception.ALWAYS;
            import static javax.enterprise.event.Reception.IF_EXISTS;
        «ENDIF-»      			
	«ENDIF»				
«ENDDEFINE»

«REM»
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	private functions
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
«ENDREM»