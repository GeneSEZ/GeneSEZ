/**
 * adds the association handling classes as external classes as suppliers to the PHP classifiers
 * 
 * @author	tobias haubold
 * @date	2009-03-25
 */

// based on genesez meta model
import gcore;

extension org::genesez::metamodel::core::util::AccessElement;
extension org::genesez::metamodel::core::util::CreateElement;
extension org::genesez::metamodel::core::util::NavigateElement;


MPackage addAssociationIncludes(MPackage this) :
	nestedPackage.addAssociationIncludes() ->
	classifier.addAssociationIncludes() ->
	this;

MClassifier addAssociationIncludes(MClassifier this) :
	property.typeSelect(MAssociationRole).checkMultiplicity() ->
	this;

MAssociationRole checkMultiplicity(MAssociationRole this) :
	hasQualifier()
		? ( qualifierMultiplicity.isSingleValued()
			? classifier.supplier.add( makeSingleQualifiedAssociation() )
			: classifier.supplier.add( makeMultiQualifiedAssociation() )
		) : ( multiplicity.isSingleValued()
			? classifier.supplier.add( makeOneAssociation() )
			: classifier.supplier.add( makeManyAssociation() )
		) ->
	this;

MExternal makeOneAssociation(MAssociationRole this) :
	navModel().ensureExternalTypeExistence("UML_OneAssociation", "UML_OneAssociation");

MExternal makeManyAssociation(MAssociationRole this) :
	navModel().ensureExternalTypeExistence("UML_ManyAssociation", "UML_ManyAssociation");

MExternal makeSingleQualifiedAssociation(MAssociationRole this) :
	navModel().ensureExternalTypeExistence("UML_SingleQualifiedAssociation", "UML_SingleQualifiedAssociation");

MExternal makeMultiQualifiedAssociation(MAssociationRole this) :
	navModel().ensureExternalTypeExistence("UML_MultiQualifiedAssociation", "UML_MultiQualifiedAssociation");
