<?xml version="1.0" encoding="utf-8"?>

<workflow>
	
	<!-- example project where the generated artifacts are stored -->
	<property name="de.genesez.example.project.dir" value="../de.genesez.example" />
	
	<!-- Reading the example file. -->
	<cartridge
		file="de::genesez::genesezmm::workflows::makeGenesezModelProfile.oaw" 
		uml2ProfileFile="${de.genesez.example.project.dir}/model-exp/profile.profile.uml"
		inputModelFile="${de.genesez.example.project.dir}/model-exp/example.uml"
		excludePackages="UML Standard Profile"
		genesezModel="genesezModel"
	/>
	
	<!-- Check constraints. /-->
	<cartridge
		file="de::genesez::genesezmm::workflows::constraintChecker.oaw"
		modelSlot="genesezModel"
		checkScript="de::genesez::genesezmm::java5::constraints::syntax"
		abortOnError="true"
	/>
	<cartridge
		file="de::genesez::genesezmm::workflows::constraintChecker.oaw"
		modelSlot="genesezModel"
		checkScript="de::genesez::genesezmm::java5::constraints::naming"
		abortOnError="true"
	/>
	
	<!-- Write the transformed model file.  /-->
	<cartridge
		file="de::genesez::genesezmm::workflows::xmiWriter.oaw"
		modelSlot="genesezModel"
		outputModelFile="${de.genesez.example.project.dir}/model-gen/example.ecore"
	/>
	
	<!-- Create java code with AOP in xpand templates.  /-->
	<cartridge
		file="de::genesez::genesezmm::workflows::performM2T.oaw"
		rootTemplate="de::genesez::genesezmm::java5::templates::Root::Root FOR genesezModel"
		excludePackages="java, java.util"
		outputDir="${de.genesez.example.project.dir}/src-gen"
		proRegDir="${de.genesez.example.project.dir}/src-gen"
		xmlMappingFile="../de.genesez.templates/java5/de/genesez/genesezmm/java5/typemapping/typemapping4java5.xml"
	/>
	

</workflow>
