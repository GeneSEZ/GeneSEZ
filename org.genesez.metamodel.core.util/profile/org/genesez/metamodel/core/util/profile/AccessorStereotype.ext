/*
 * (c) GeneSEZ Research Group
 * All rights reserved.
 *
 * Licensed according to GeneSEZ License Terms <http://www.genesez.org/en/license>
 */
import gcore;

/**
 * Provides utility functions for the GeneSEZ uml profile.
 * 
 * @author	tobias haubold <toh@fh-zwickau.de> (maintainer)
 */
extension org::genesez::metamodel::core::util::AccessHelper;
extension org::genesez::metamodel::core::util::m2m::CreateElement;
extension org::genesez::metamodel::core::util::profile::GeneSEZProfile;


/**
 * Assigns the «accessor» stereotype and creates the specified tagged values.
 * 
 * @return	The property owning the tagged values.
 */
MProperty prAssignGeneSezAccessorStereotype(MProperty this, String get, String set, String add, String remove) :
	prAssignGeneSezAccessorStereotype( get, set, add, remove );

/**
 * Assigns the «accessor» stereotype and creates the specified tagged values.
 * 
 * @return	The classifier owning the tagged values.
 */
MClassifier prAssignGeneSezAccessorStereotype(MClassifier this, String get, String set, String add, String remove) :
	prAssignGeneSezAccessorStereotype( get, set, add, remove );

/**
 * Assigns the specified values to the tags of the «accessor» stereotype.
 * 
 * @return	The element owning the tagged values.
 */
private MElement prAssignGeneSezAccessorStereotype(MElement this, String get, String set, String add, String remove) :
	ensureTaggedValueExistence(
		model().prEnsureGeneSezAccessorStereotype().property.selectFirst( p|p.name == prAccessorGetter() ), get
	).owningElement
	.ensureTaggedValueExistence(
		model().prEnsureGeneSezAccessorStereotype().property.selectFirst( p|p.name == prAccessorSetter() ), set
	).owningElement
	.ensureTaggedValueExistence(
		model().prEnsureGeneSezAccessorStereotype().property.selectFirst( p|p.name == prAccessorAdd() ), add
	).owningElement
	.ensureTaggedValueExistence(
		model().prEnsureGeneSezAccessorStereotype().property.selectFirst( p|p.name == prAccessorRemove() ), remove
	).owningElement;

/**
 * Returns the «accessor» stereotype of the GeneSEZ profile with all of its tags.
 * It checks if the stereotype already exists and creates it if needed.
 */
MStereotype prEnsureGeneSezAccessorStereotype(MModel this) :
	anyStereotype.exists( s|s.name == prAccessor() )
		? anyStereotype.selectFirst( s|s.name == prAccessor() ).prEnsureGeneSezAccessorTags()
		: prEnsureGeneSezAccessorTags(
			ensureStereotypeExistence( accessorXmiGuid(), prAccessor() )
		);

/**
 * Ensures the existence of all tags of the «accessor» stereotype.
 * 
 * @return	The «accessor» stereotype.
 */
private MStereotype prEnsureGeneSezAccessorTags(MStereotype this) :
	ensureTagExistence( accessorGetterXmiGuid(), prAccessorGetter() ).stereotype
		.ensureTagExistence( accessorSetterXmiGuid(), prAccessorSetter() ).stereotype
		.ensureTagExistence( accessorAddXmiGuid(), prAccessorAdd() ).stereotype
		.ensureTagExistence( accessorRemoveXmiGuid(), prAccessorRemove() ).stereotype;

/**
 * Returns the xmi guid of the «accessor» stereotype.
 */
private String accessorXmiGuid() : "org.genesez.adapter.uml2.profile.accessor";

/**
 * Returns the xmi guid of the 'getter' tag of the «accessor» stereotype.
 */
private String accessorGetterXmiGuid() : "org.genesez.adapter.uml2.profile.accessor.getter";

/**
 * Returns the xmi guid of the 'setter' tag of the «accessor» stereotype.
 */
private String accessorSetterXmiGuid() : "org.genesez.adapter.uml2.profile.accessor.setter";

/**
 * Returns the xmi guid of the 'add' tag of the «accessor» stereotype.
 */
private String accessorAddXmiGuid() : "org.genesez.adapter.uml2.profile.accessor.add";

/**
 * Returns the xmi guid of the 'remove' tag of the «accessor» stereotype.
 */
private String accessorRemoveXmiGuid() : "org.genesez.adapter.uml2.profile.accessor.remove";
